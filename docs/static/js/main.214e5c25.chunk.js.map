{"version":3,"sources":["components/Search/SearchTheme.module.css","components/Search/Search.tsx","services/index.ts","components/Chart/MonthlyChart.tsx","components/Chart/MonthlyEventChart.tsx","App.tsx","index.tsx"],"names":["module","exports","Search","handleChange","useState","suggestions","setSuggestion","value","setValue","city","name","inputProps","placeholder","onChange","event","newValue","className","onSuggestionsFetchRequested","inputValue","trim","toLowerCase","inputLength","length","filter","c","slice","getSuggestions","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","theme","onClick","console","log","color","CREATOR","window","ZOHO","getVolunteer","page","criteria","config","reportName","toString","pageSize","API","getAllRecords","getEvent","getPostCamp","fetchVolunteer","a","init","data","l","total","fetchCamps","monthCampData","Array","fill","monthAwarnessData","monthDonation","monthDetail","donations","camps","d","TypeOfEvent","awareness","forEach","date","Date_field","split","mon","year","parseInt","Date","getFullYear","push","camp","Event_ID","totalCamps","fetchPostCamp","monthData","donation","then","res","postCamp","Camp_Awareness","display_value","pop","Number_of_Donation","error","totalDonation","MonthlyChart","loading","month","label","url","chartData","setData","useEffect","map","da","VictoryTheme","material","width","height","domainPadding","animate","duration","onLoad","text","x","y","textAnchor","tickValues","f","tickFormat","dependentAxis","alignment","events","target","eventHandlers","mutation","props","index","MonthlyEventChart","count","campData","setCampData","awarenessData","setAwarenessData","title","centerTitle","orientation","gutter","style","border","stroke","fontSize","symbol","type","offset","colorScale","App","BASE_URL","location","ancestorOrigins","includes","setCity","isLoading","setLoading","aV","setAV","setCamps","setAwareness","setDonations","monthlyData","setmonthlyData","monthlyCampData","setmonthlyCampData","monthlyAwarenessData","setmonthlyAwarenessData","aVUrl","setaVUrl","campUrl","setcampUrl","awarenessUrl","setawarenessUrl","loadAV","av","loadCamps","loadDonationData","Loading","options","animationData","require","loop","autoplay","isStopped","open","size","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.214e5c25.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchTheme_container__1nyy1\",\"suggestionsContainer\":\"SearchTheme_suggestionsContainer__11igi\",\"suggestionsList\":\"SearchTheme_suggestionsList__2fUzU\",\"suggestion\":\"SearchTheme_suggestion__1AGtJ\"};","import React, { ReactElement, useState } from 'react'\nimport { FiSearch } from 'react-icons/fi'\nimport Autosuggest from 'react-autosuggest';\n\nimport './Search.css'\nimport theme from \"./SearchTheme.module.css\"\ninterface Props {\n    handleChange: (c: string) => void\n}\ninterface CityProps {\n    name: string\n}\n\nexport default function Search({ handleChange }: Props): ReactElement {\n\n    const [suggestions, setSuggestion] = useState<CityProps[]>([])\n    const [value, setValue] = useState('')\n    const city = [\n        { name: 'Delhi NCR' },\n        { name: 'Agra' },\n        { name: 'Lucknow' },\n        { name: 'Jaipur' },\n        { name: 'Kolkata' },\n        { name: 'Ranchi' },\n        { name: 'Odisha' },\n        { name: 'Varanasi' },\n        { name: 'Pune' },\n        { name: 'Kanpur' },\n        { name: 'Consulting' }\n    ]\n    const getSuggestions = (value: string) => {\n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n\n        return inputLength === 0 ? [] : city.filter(c =>\n            c.name.toLowerCase().slice(0, inputLength) === inputValue\n        );\n    };\n\n    const getSuggestionValue = suggestion => suggestion.name;\n\n    // Use your imagination to render suggestions.\n    const renderSuggestion = suggestion => (\n        <div className=\"suggestion\">\n            {suggestion.name}\n        </div>\n    );\n\n    const onSuggestionsFetchRequested = ({ value }) => {\n        setSuggestion(getSuggestions(value))\n    };\n\n    const onSuggestionsClearRequested = () => {\n        setSuggestion([])\n    }\n    const onChange = (event, { newValue }) => {\n        setValue(newValue)\n    };\n\n    const inputProps = {\n        placeholder: 'Enter the city',\n        value,\n        onChange: onChange\n    };\n    return (\n        <div className=\"my-4 col-lg-6\">\n            <div className=\"d-flex container\">\n                <Autosuggest\n                    suggestions={suggestions}\n                    onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={onSuggestionsClearRequested}\n                    getSuggestionValue={getSuggestionValue}\n                    renderSuggestion={renderSuggestion}\n                    inputProps={inputProps}\n                    theme={theme}\n                />\n                <div className=\"search-icon\" onClick={() => {\n                    console.log(value)\n                    handleChange(value)\n                }}>\n                    <FiSearch color=\"white\" />\n                </div>\n            </div>\n        </div>\n    )\n}\n","declare global {\n    interface Window {\n        ZOHO: any\n    }\n}\n\ninterface overall {\n    city: string;\n    donations: number;\n}\ninterface API<Data> {\n    code: number;\n    data: Data[]\n}\ninterface PostCamp {\n    Number_of_Donation: any;\n    Camp_Awareness: {\n        display_value: string\n    }\n}\nconst CREATOR = window.ZOHO.CREATOR\n\nexport const get = () => {\n\n    CREATOR.init().then((d) => {\n        let config = {\n            reportName: \"BloodConnect_Team_Report\",\n            page: \"1\",\n            pageSize: \"200\"\n        }\n\n        //get all records API\n        CREATOR.API.getAllRecords(config).then(function (response) {\n            //callback block\n            console.log(response)\n        });\n    }).catch(e => {\n        console.log(e)\n    })\n}\n\nconst getVolunteer = (page: number, city: string) => {\n    let criteria = \"(Status==\\\"Active\\\")\"\n    if (city !== 'All') {\n        criteria = `(Status==\"Active\" && BloodConnect_City==\"${city}\")`\n    }\n\n    let config = {\n        reportName: \"BloodConnect_Team_Report\",\n        criteria,\n        page: page.toString(),\n        pageSize: \"200\"\n\n    }\n    return CREATOR.API.getAllRecords(config)\n}\n\nconst getEvent = (page: number, city: string) => {\n    let criteria = \"\"\n    if (city !== 'All') {\n        criteria = `(BloodConnect_City==\"${city}\")`\n    }\n\n    let config = {\n        reportName: \"Camp_Awareness_Report\",\n        criteria,\n        page: page.toString(),\n        pageSize: \"200\"\n\n    }\n    return CREATOR.API.getAllRecords(config)\n}\n\nconst getPostCamp = (page: number, city: string): Promise<API<PostCamp>> => {\n    let criteria = \"\"\n    if (city !== 'All') {\n        criteria = `(BloodConnect_City==\"${city}\")`\n    }\n    let config = {\n        reportName: \"Post_Camp_Form_Report\",\n        criteria: criteria,\n        page: page.toString(),\n        pageSize: \"200\"\n\n    }\n    return CREATOR.API.getAllRecords(config)\n    // return new Promise((resolve, reject) => {\n    //     let response = CREATOR.API.getAllRecords(config)\n    //     if (response)\n    //         resolve(response)\n    //     else\n    //         reject({ code: 500, data: []})\n    // })\n}\nexport const fetchVolunteer = async (city: string) => {\n    await CREATOR.init()\n    let page = 1\n    let { data } = await getVolunteer(page++, city)\n    let l = data.length\n    let total = l\n    while (l === 200) {\n        let { data } = await getVolunteer(page++, city)\n        l = data.length\n        total = total + l\n    }\n    return total\n}\n\nexport const fetchCamps = async (city: string) => {\n    let monthCampData = Array(12).fill(0)\n    let monthAwarnessData = Array(12).fill(0)\n    let monthDonation = Array(12).fill(0)\n    let monthDetail = Array(12).fill([])\n    let donations = 0\n    let page = 1\n    let { data } = await getEvent(page++, city)\n    let l = data.length\n    let camps = data.filter(d => d.TypeOfEvent === 'Camp')\n    let awareness = data.filter(d => d.TypeOfEvent !== 'Camp')\n    camps.forEach(c => {\n        let date = c.Date_field\n        let [_, mon, year] = date.split('-')\n        if (parseInt(year) === new Date().getFullYear()) {\n            monthCampData[parseInt(mon) - 1] = monthCampData[parseInt(mon) - 1] + 1\n            if (c['Post_Camp_ID.Number_of_Donation']) {\n                monthDonation[parseInt(mon) - 1] = monthDonation[parseInt(mon) - 1] + parseInt(c['Post_Camp_ID.Number_of_Donation'])\n                donations = donations + parseInt(c['Post_Camp_ID.Number_of_Donation'])\n            }\n            monthDetail[parseInt(mon) - 1] = monthDetail[parseInt(mon) - 1].push({ camp: c.Event_ID, date, donations: c['Post_Camp_ID.Number_of_Donation'] ? c['Post_Camp_ID.Number_of_Donation'] : 0 })\n        }\n    })\n    awareness.forEach(c => {\n        let date = c.Date_field\n        let [_, mon, year] = date.split('-')\n        if (parseInt(year) === new Date().getFullYear()) {\n            monthAwarnessData[parseInt(mon) - 1] = monthAwarnessData[parseInt(mon) - 1] + 1\n        }\n    })\n\n    let totalCamps = camps.length\n    let total = l\n    while (l === 200) {\n        let { data } = await getEvent(page++, city)\n        l = data.length\n        totalCamps = data.filter(d => d.TypeOfEvent === 'Camp').length\n        total = total + l\n        let camps = data.filter(d => d.TypeOfEvent === 'Camp')\n        let awareness = data.filter(d => d.TypeOfEvent !== 'Camp')\n        // eslint-disable-next-line no-loop-func\n        camps.forEach(c => {\n            console.log(c)\n            if(c['Post_Camp_ID.Number_of_Donation']) {\n                console.log('It exists',c['Post_Camp_ID.Number_of_Donation'])\n            }\n            let date = c.Date_field\n            let [, mon, year] = date.split('-')\n            if (parseInt(year) === new Date().getFullYear()) {\n                monthCampData[parseInt(mon) - 1] = monthCampData[parseInt(mon) - 1] + 1\n                if (c['Post_Camp_ID.Number_of_Donation']) {\n                    monthDonation[parseInt(mon) - 1] = monthDonation[parseInt(mon) - 1] + parseInt(c['Post_Camp_ID.Number_of_Donation'])\n                    donations = donations + parseInt(c['Post_Camp_ID.Number_of_Donation'])\n                }\n                monthDetail[parseInt(mon) - 1] = monthDetail[parseInt(mon) - 1].push({ camp: c.Event_ID, date, donations: c['Post_Camp_ID.Number_of_Donation'] ? c['Post_Camp_ID.Number_of_Donation'] : 0 })\n            }\n        })\n        awareness.forEach(c => {\n            let date = c.Date_field\n            let [_, mon, year] = date.split('-')\n            if (parseInt(year) === new Date().getFullYear()) {\n                monthAwarnessData[parseInt(mon) - 1] = monthAwarnessData[parseInt(mon) - 1] + 1\n            }\n        })\n        \n    }\n    return {\n        camps: totalCamps,\n        awareness: total - totalCamps,\n        monthCampData,\n        monthAwarnessData,\n        monthDonation,\n        monthDetail,\n        donations\n    }\n\n}\n\nexport const fetchPostCamp = async (city: string) => {\n    let monthData = Array(12).fill(0)\n    let donation = 0\n    let d = await getPostCamp(0, city).then((res) => {\n\n        res.data.forEach(postCamp => {\n\n            let date = postCamp.Camp_Awareness.display_value.split('_').pop()\n            if (!date)\n                return;\n            let [_, mon, year] = date.split('-')\n            if (parseInt(year) === new Date().getFullYear()) {\n                monthData[parseInt(mon) - 1] = monthData[parseInt(mon) - 1] + parseInt(postCamp.Number_of_Donation)\n                donation = donation + parseInt(postCamp.Number_of_Donation)\n            }\n        });\n    }, (error) => {\n        console.log('error', error, city)\n        donation = 0\n    })\n\n    return { totalDonation: donation, monthData }\n}\n\n","import React, { useEffect, useState } from 'react'\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryLabel } from 'victory'\nimport './Chart.css'\n\ninterface Props {\n    data?:number[];\n    loading?:boolean\n}\n\ninterface dataProps {\n    month: number;\n    donations: number;\n    label: String;\n    url: String\n}\n\nconst MonthlyChart = ({ data, loading }: Props) => {\n    const initial_data = [\n        { month: 1, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 2, donations: 0, label: 'heya', url: 'https://anish-yadav.github.ioio' },\n        { month: 3, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 4, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 5, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 6, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 7, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 8, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 9, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 10, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 11, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 12, donations: 0, label: 'heya', url: 'https://anish-yadav.github.ioio' },\n    ];\n\n    const [chartData, setData] = useState<dataProps[]>(initial_data)\n\n    useEffect(() => {\n        if(!loading && data) {\n            setData((d:dataProps[]) => {\n                return d.map(da => {\n                    da.donations = data[da.month -1]\n                    da.label = data[da.month -1 ]+ ''\n                    return da\n                })\n            })\n        }\n    },[loading, data])\n\n    return (\n        <div className=\"container chart-container my-4\">\n            <VictoryChart\n                theme={VictoryTheme.material}\n                width={800}\n                height={400}\n                domainPadding={100}\n                animate={{\n                    duration: 2000,\n                    onLoad:{ duration: 1000 }\n                }}\n            >\n                <VictoryLabel text=\"Monthly Report\" x={225} y={30} textAnchor=\"middle\"/>\n                <VictoryAxis\n\n                    tickValues={chartData.map(f => f.month)}\n                    tickFormat={['Jan','Feb','Mar','Apr','May','June','July','Aug','Sep','Oct','Nov','Dec']}\n                />\n                <VictoryAxis\n                    dependentAxis\n\n                    tickFormat={x => x}\n                />\n                <VictoryBar\n                    data={chartData}\n                    x=\"month\"\n                    y=\"donations\"\n                    alignment='middle'\n                    events={[{\n                        target: \"data\",\n                        eventHandlers: {\n                            onClick: () => {\n                                return [{\n                                    target: \"data\",\n                                    mutation: (props) => {\n                                        console.log(props.data[props.index].url)\n                                        return true\n                                    }\n                                }];\n                            }\n                        }\n                    }]}\n                />\n            </VictoryChart>\n        </div>\n    )\n}\n\nexport default MonthlyChart\n","import React, { useEffect, useState, ReactElement } from 'react'\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryLabel, VictoryGroup, VictoryLegend } from 'victory'\nimport './Chart.css'\n\ninterface Props {\n    camp?: number[];\n    awareness?: number[]\n}\ninterface dataProps {\n    month: number;\n    donations: number;\n    label: number;\n    url: string\n}\n\ninterface GraphData {\n    month: number;\n    count: number;\n    label: number;\n}\n\nexport default function MonthlyEventChart({ camp, awareness }: Props): ReactElement {\n    const initial_data = [\n        { month: 1, count: 0, label: 0 },\n        { month: 2, count: 0, label: 0 },\n        { month: 3, count: 0, label: 0 },\n        { month: 4, count: 0, label: 0 },\n        { month: 5, count: 0, label: 0 },\n        { month: 6, count: 0, label: 0 },\n        { month: 7, count: 0, label: 0 },\n        { month: 8, count: 0, label: 0 },\n        { month: 9, count: 0, label: 0 },\n        { month: 10, count: 0, label: 0 },\n        { month: 11, count: 0, label: 0 },\n        { month: 12, count: 0, label: 0 },\n    ];\n    const initial_data1 = [\n        { month: 1, count: 0, label: 0 },\n        { month: 2, count: 0, label: 0 },\n        { month: 3, count: 0, label: 0 },\n        { month: 4, count: 0, label: 0 },\n        { month: 5, count: 0, label: 0 },\n        { month: 6, count: 0, label: 0 },\n        { month: 7, count: 0, label: 0 },\n        { month: 8, count: 0, label: 0 },\n        { month: 9, count: 0, label: 0 },\n        { month: 10, count: 0, label: 0 },\n        { month: 11, count: 0, label: 0 },\n        { month: 12, count: 0, label: 0 },\n    ];\n\n    const [campData, setCampData] = useState<GraphData[]>(initial_data)\n    const [awarenessData, setAwarenessData] = useState<GraphData[]>(initial_data1)\n    useEffect(() => {\n        if (camp) {\n            setCampData((d: GraphData[]) => {\n                return d.map(da => {\n                    da.count = camp[da.month - 1]\n                    da.label = camp[da.month - 1]\n                    return da\n                })\n            })\n        }\n    }, [camp])\n\n    useEffect(() => {\n        if (awareness) {\n            setAwarenessData((d: GraphData[]) => {\n                return d.map(da => {\n                    da.count = awareness[da.month - 1]\n                    da.label = awareness[da.month - 1]\n                    return da\n                })\n            })\n        }\n    }, [awareness])\n    return (\n        <div className=\"container chart-container my-4\">\n            <VictoryChart\n                theme={VictoryTheme.material}\n                width={800}\n                height={400}\n                domainPadding={100}\n            >\n\n                <VictoryLabel text=\"Monthly Report\" x={225} y={30} textAnchor=\"middle\" />\n                <VictoryLegend x={125} y={50}\n                    title=\"Legend\"\n                    centerTitle\n                    orientation=\"horizontal\"\n                    gutter={20}\n                    style={{ border: { stroke: \"black\" }, title: { fontSize: 20 } }}\n                    data={[\n                        { name: \"Camp\", symbol: { fill: \"blue\", type:\"rectangle\" } },\n                        { name: \"Awareness\", symbol: { fill: \"cyan\" } }\n                    ]}\n                />\n                <VictoryAxis\n\n                    tickValues={campData.map(f => f.month)}\n                    tickFormat={['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']}\n                />\n                <VictoryAxis\n                    dependentAxis\n\n                    tickFormat={x => x}\n                />\n                <VictoryGroup\n                    offset={20}\n                    colorScale={'qualitative'}\n                    animate={{\n                        duration: 2000,\n                        onLoad: { duration: 1000 }\n                    }}\n                >\n                    <VictoryBar\n                        data={campData}\n                        x=\"month\"\n                        y=\"count\"\n                        alignment='middle'\n                        events={[{\n                            target: \"data\",\n                            eventHandlers: {\n                                onClick: () => {\n                                    return [{\n                                        target: \"data\",\n                                        mutation: (props) => {\n                                            console.log(props.data[props.index].url)\n                                            return true\n                                        }\n                                    }];\n                                }\n                            }\n                        }]}\n                    />\n                    <VictoryBar\n                        data={awarenessData}\n                        x=\"month\"\n                        y=\"count\"\n                        alignment='middle'\n                        events={[{\n                            target: \"data\",\n                            eventHandlers: {\n                                onClick: () => {\n                                    return [{\n                                        target: \"data\",\n                                        mutation: (props) => {\n                                            console.log(props.data[props.index].url)\n                                            return true\n                                        }\n                                    }];\n                                }\n                            }\n                        }]}\n                    />\n                </VictoryGroup>\n            </VictoryChart>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { FiUser } from 'react-icons/fi';\nimport './App.css';\nimport Search from './components/Search/Search';\n//import { useQuery } from '@apollo/client';\n//import { STATS_QUERY, ALL_STAT } from './query';\nimport { fetchVolunteer, fetchCamps, fetchPostCamp } from './services/index'\nimport Lottie from 'react-lottie';\nimport MonthlyChart from './components/Chart/MonthlyChart';\n// import { OverallStat } from './components/schema';\nimport MonthlyEventChart from './components/Chart/MonthlyEventChart';\n\ninterface Citystat {\n  [key: string]: number\n}\nconst App = () => {\n\n\n  let BASE_URL = 'https://app.zohocreator.in/deepak64/bloodconnect-india-donor-system'\n  if (window.location.ancestorOrigins && !window.location.ancestorOrigins[0].includes('localhost')) {\n    BASE_URL = window.location.ancestorOrigins[0]\n  }\n\n\n\n  const [city, setCity] = useState('All')\n  //const { data, loading } = useQuery(STATS_QUERY, { variables: { city } })\n\n  //const { data, loading } = useQuery(ALL_STAT)\n  const [isLoading, setLoading] = useState(true)\n  const [aV, setAV] = useState(-1)\n  const [camps, setCamps] = useState(-1)\n  const [awareness, setAwareness] = useState(-1)\n  const [donations, setDonations] = useState(-1)\n\n  // Monthly Datas\n  // Donations data\n  const [monthlyData, setmonthlyData] = useState(Array(12).fill(0))\n  // Camp data\n  const [monthlyCampData, setmonthlyCampData] = useState(Array(12).fill(0))\n  // Awareness data\n  const [monthlyAwarenessData, setmonthlyAwarenessData] = useState(Array(12).fill(0))\n  const [aVUrl, setaVUrl] = useState(`${BASE_URL}/#Report:BloodConnect_Team_Report?Status=Active`)\n  const [campUrl, setcampUrl] = useState(`${BASE_URL}/#Report:Camp_Awareness_report?Type_Of_Event=Camp`)\n  const [awarenessUrl, setawarenessUrl] = useState(`${BASE_URL}/#Report:Camp_Awareness_report?Type_Of_Event=Awareness`)\n\n\n\n\n\n\n  const loadAV = async () => {\n    const av = await fetchVolunteer(city)\n    setAV(av)\n  }\n  const loadCamps = async () => {\n    const { camps, awareness, monthCampData, monthAwarnessData, donations, monthDetail } = await fetchCamps(city)\n    console.log('Total',donations)\n    console.log(monthDetail)\n    setCamps(camps)\n    setAwareness(awareness)\n    setmonthlyCampData(monthCampData)\n    setmonthlyAwarenessData(monthAwarnessData)\n  }\n\n  const loadDonationData = async () => {\n    const { totalDonation, monthData } = await fetchPostCamp(city)\n    setDonations(totalDonation)\n    setmonthlyData(monthData)\n    setLoading(false)\n  }\n  // const loadCityStat = async () => {\n  //   const overall = await fetchCitiesStat()\n  //   console.log('Overall is', overall)\n  //   setCitiesData(overall)\n  // }\n\n  const loadAllData = () => {\n    loadAV().then(() => {\n      loadCamps().then(() => {\n        loadDonationData().then(() => {\n          setLoading(false)\n        })\n      })\n    })\n  }\n  useEffect(() => {\n    loadAllData()\n  }, [city])\n\n \n\n\n\n  // useEffect(() => {\n  //     loadCityStat()\n  // }, [])\n  const setSearch = (c: string): void => {\n    if (c !== city) {\n      setLoading(true)\n      setCity(c)\n    }\n\n  }\n\n  useEffect(() => {\n    if (city !== 'All'){\n      setaVUrl(`${BASE_URL}/#Report:BloodConnect_Team_Report?Status=Active&&BloodConnect_City=${city}`)\n      setcampUrl(`${BASE_URL}/#Report:Camp_Awareness_report?Type_Of_Event=Camp&&BloodConnect_City=${city}`)\n      setawarenessUrl(`${BASE_URL}/#Report:Camp_Awareness_report?Type_Of_Event=Awareness&&BloodConnect_City=${city}`)\n    }\n  }, [BASE_URL, city])\n\n  const Loading = () => {\n    return (\n      <div>\n        <Lottie\n          options={{\n            animationData: require('./assets/animation/loading.json'),\n            loop: true,\n            autoplay: true\n          }}\n          height={100}\n          width={100}\n          isStopped={!isLoading}\n        />\n      </div>\n    )\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-between \">\n        <h4 className=\"stat col-lg-4 col-sm-12  mt-2 d-flex align-items-center justify-content-center\">{city === 'All' ? 'BloodConnect' : city}</h4>\n        <Search handleChange={setSearch} />\n      </div>\n      <div className=\"row\">\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \" onClick={() => {\n            window.open(aVUrl, '_blank')\n          }}>\n            {\n              !isLoading ?\n                <div>\n                  <p className=\"card-heading\"> Active Volunteer</p>\n                  <p className=\"display-4\">{aV}</p>\n                </div>\n                : <Loading />\n            }\n            <div className=\"stat-icon-container\">\n              <FiUser size={34} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \" onClick={() => {\n            window.open(campUrl, '_blank')\n          }}>\n            {\n              !isLoading ?\n                <div>\n                  <p className=\"card-heading\"> Camps</p>\n                  <p className=\"display-4\">{camps}</p>\n                </div>\n                : <Loading />\n            }\n            <div className=\"stat-icon-container\">\n              <FiUser size={34} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \" onClick={() => {\n            window.open(awarenessUrl, '_blank')\n          }}>\n            {\n              !isLoading ?\n                <div>\n                  <p className=\"card-heading\"> Awareness</p>\n                  <p className=\"display-4\">{awareness}</p>\n                </div>\n                : <Loading />\n            }\n            <div className=\"stat-icon-container\">\n              <FiUser size={34} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \">\n            {\n              !isLoading ?\n                <div>\n                  <p className=\"card-heading\"> Toatal Donation </p>\n                  <p className=\"display-4\">{donations}</p>\n                </div>\n                : <Loading />\n            }\n            <div className=\"stat-icon-container\">\n              <FiUser size={34} />\n            </div>\n          </div>\n        </div>\n\n      </div>\n      \n      <MonthlyChart data={monthlyData} loading={isLoading} />\n      <MonthlyEventChart camp={monthlyCampData} awareness={monthlyAwarenessData} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: \"https://bc-apiv2.herokuapp.com/graphql\",\n  cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}