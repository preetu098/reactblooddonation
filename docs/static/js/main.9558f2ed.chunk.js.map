{"version":3,"sources":["components/Search/SearchTheme.module.css","components/Search/Search.tsx","services/index.ts","components/Chart/MonthlyChart.tsx","components/Chart/MonthlyEventChart.tsx","components/Chart/CampDonationChart.tsx","components/Helpline/index.tsx","App.tsx","index.tsx"],"names":["module","exports","Search","handleChange","useState","suggestions","setSuggestion","value","setValue","city","name","inputProps","placeholder","onChange","event","newValue","onKeyDown","e","key","target","className","onSuggestionsFetchRequested","inputValue","trim","toLowerCase","inputLength","length","filter","c","slice","getSuggestions","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","theme","onClick","console","log","color","CREATOR","window","ZOHO","getVolunteer","page","criteria","config","reportName","toString","pageSize","API","getAllRecords","getEvent","getHelplines","fetchVolunteer","a","init","data","l","total","fetchCamps","monthCampData","Array","fill","monthAwarnessData","monthDonation","monthDetail","map","x","donations","camps","d","TypeOfEvent","awareness","totalCamps","totalAwareness","forEach","date","Date_field","split","mon","year","parseInt","Date","getFullYear","push","BloodConnect_City","fecthHelplines","MonthlyChart","loading","handleClick","month","label","chartData","setData","useEffect","da","id","input","document","getElementById","width","clientWidth","height","clientHeight","html2canvas","then","canvas","imgData","toDataURL","pdf","jsPDF","addImage","save","downloadChart","VictoryTheme","material","domainPadding","animate","duration","onLoad","text","y","textAnchor","tickValues","f","tickFormat","dependentAxis","alignment","events","eventHandlers","mutation","props","index","url","MonthlyEventChart","camp","count","campData","setCampData","awarenessData","setAwarenessData","title","centerTitle","orientation","gutter","style","border","stroke","fontSize","symbol","type","offset","colorScale","CampDonationChart","back","d2","sorted","sort","b","size","labelComponent","barWidth","HelplineComponent","searchedCity","setCity","isLoading","setLoading","helpline","setHelpline","fetchData","Loading","options","animationData","require","loop","autoplay","isStopped","App","BASE_URL","location","ancestorOrigins","includes","isMonthStat","showMonthStat","monthStat","setMonthStat","aV","setAV","setCamps","setAwareness","setDonations","monthlyData","setmonthlyData","monthlyCampData","setmonthlyCampData","monthCampDetail","setMonthCampDetail","monthlyAwarenessData","setmonthlyAwarenessData","aVUrl","setaVUrl","campUrl","setcampUrl","awarenessUrl","setawarenessUrl","loadAV","av","loadCamps","helpine","open","Helpline","i","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9558f2ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchTheme_container__1nyy1\",\"suggestionsContainer\":\"SearchTheme_suggestionsContainer__11igi\",\"suggestionsList\":\"SearchTheme_suggestionsList__2fUzU\",\"suggestion\":\"SearchTheme_suggestion__1AGtJ\"};","import React, { ReactElement, useState } from 'react'\r\nimport { FiSearch } from 'react-icons/fi'\r\nimport Autosuggest from 'react-autosuggest';\r\n\r\nimport './Search.css'\r\nimport theme from \"./SearchTheme.module.css\"\r\ninterface Props {\r\n    handleChange: (c: string) => void\r\n}\r\ninterface CityProps {\r\n    name: string\r\n}\r\n\r\nexport default function Search({ handleChange }: Props): ReactElement {\r\n\r\n    const [suggestions, setSuggestion] = useState<CityProps[]>([])\r\n    const [value, setValue] = useState('')\r\n    const city = [\r\n        { name: 'Delhi NCR' },\r\n        { name: 'Agra' },\r\n        { name: 'Lucknow' },\r\n        { name: 'Jaipur' },\r\n        { name: 'Kolkata' },\r\n        { name: 'Ranchi' },\r\n        { name: 'Odisha' },\r\n        { name: 'Varanasi' },\r\n        { name: 'Pune' },\r\n        { name: 'Kanpur' },\r\n        { name: 'Consulting' }\r\n    ]\r\n    const getSuggestions = (value: string) => {\r\n        const inputValue = value.trim().toLowerCase();\r\n        const inputLength = inputValue.length;\r\n\r\n        return inputLength === 0 ? [] : city.filter(c =>\r\n            c.name.toLowerCase().slice(0, inputLength) === inputValue\r\n        );\r\n    };\r\n\r\n    const getSuggestionValue = suggestion => suggestion.name;\r\n\r\n    // Use your imagination to render suggestions.\r\n    const renderSuggestion = suggestion => (\r\n        <div className=\"suggestion\">\r\n            {suggestion.name}\r\n        </div>\r\n    );\r\n\r\n    const onSuggestionsFetchRequested = ({ value }) => {\r\n        setSuggestion(getSuggestions(value))\r\n    };\r\n\r\n    const onSuggestionsClearRequested = () => {\r\n        setSuggestion([])\r\n    }\r\n    const onChange = (event, { newValue }) => {\r\n        setValue(newValue)\r\n    };\r\n\r\n    const handleKeyDown = (e) => {\r\n        if(e.key === 'Enter') {\r\n            handleChange(e.target.value)\r\n        }\r\n    }\r\n\r\n    const inputProps = {\r\n        placeholder: 'Enter the city',\r\n        value,\r\n        onChange: onChange,\r\n        onKeyDown: handleKeyDown\r\n    };\r\n    return (\r\n        <div className=\"my-4 col-lg-6\">\r\n            <div className=\"d-flex container\">\r\n                <Autosuggest\r\n                    suggestions={suggestions}\r\n                    onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n                    onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n                    getSuggestionValue={getSuggestionValue}\r\n                    renderSuggestion={renderSuggestion}\r\n                    inputProps={inputProps}\r\n                    theme={theme}\r\n                />\r\n                \r\n                <div className=\"search-icon\" onClick={() => {\r\n                    console.log(value)\r\n                    handleChange(value)\r\n                }}>\r\n                    <FiSearch color=\"white\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","declare global {\r\n    interface Window {\r\n        ZOHO: any\r\n    }\r\n}\r\n\r\ninterface overall {\r\n    city: string;\r\n    donations: number;\r\n}\r\ninterface API<Data> {\r\n    code: number;\r\n    data: Data[]\r\n}\r\ninterface PostCamp {\r\n    Number_of_Donation: any;\r\n    Camp_Awareness: {\r\n        display_value: string\r\n    }\r\n}\r\nconst CREATOR = window.ZOHO.CREATOR\r\n\r\nexport const get = () => {\r\n\r\n    CREATOR.init().then((d) => {\r\n        let config = {\r\n            reportName: \"BloodConnect_Team_Report\",\r\n            page: \"1\",\r\n            pageSize: \"200\"\r\n        }\r\n\r\n        //get all records API\r\n        CREATOR.API.getAllRecords(config).then(function (response) {\r\n            //callback block\r\n            console.log(response)\r\n        });\r\n    }).catch(e => {\r\n        console.log(e)\r\n    })\r\n}\r\n\r\nconst getVolunteer = (page: number, city: string) => {\r\n    let criteria = \"(Status==\\\"Active\\\")\"\r\n    if (city !== 'All') {\r\n        criteria = `(Status==\"Active\" && BloodConnect_City==\"${city}\")`\r\n    }\r\n\r\n    let config = {\r\n        reportName: \"BloodConnect_Team_Report\",\r\n        criteria,\r\n        page: page.toString(),\r\n        pageSize: \"200\"\r\n\r\n    }\r\n    return CREATOR.API.getAllRecords(config)\r\n}\r\n\r\nconst getEvent = (page: number, city: string) => {\r\n    let criteria = \"\"\r\n    if (city !== 'All') {\r\n        criteria = `(BloodConnect_City==\"${city}\")`\r\n    }\r\n\r\n    let config = {\r\n        reportName: \"Camp_Awareness_Report\",\r\n        criteria,\r\n        page: page.toString(),\r\n        pageSize: \"200\"\r\n\r\n    }\r\n    return CREATOR.API.getAllRecords(config)\r\n}\r\n\r\n\r\nconst getHelplines = (page: number, city: string) => {\r\n    let criteria = \"\"\r\n    if (city !== 'All') {\r\n        criteria = `(BloodConnect_City==\"${city}\")`\r\n    }\r\n\r\n    let config = {\r\n        reportName: \"Helpline_Report\",\r\n        criteria,\r\n        page: page.toString(),\r\n        pageSize: \"200\"\r\n\r\n    }\r\n    return CREATOR.API.getAllRecords(config)\r\n}\r\n\r\nconst getPostCamp = (page: number, city: string): Promise<API<PostCamp>> => {\r\n    let criteria = \"\"\r\n    if (city !== 'All') {\r\n        criteria = `(BloodConnect_City==\"${city}\")`\r\n    }\r\n    let config = {\r\n        reportName: \"Post_Camp_Form_Report\",\r\n        criteria: criteria,\r\n        page: page.toString(),\r\n        pageSize: \"200\"\r\n\r\n    }\r\n    return CREATOR.API.getAllRecords(config)\r\n    // return new Promise((resolve, reject) => {\r\n    //     let response = CREATOR.API.getAllRecords(config)\r\n    //     if (response)\r\n    //         resolve(response)\r\n    //     else\r\n    //         reject({ code: 500, data: []})\r\n    // })\r\n}\r\nexport const fetchVolunteer = async (city: string) => {\r\n    await CREATOR.init()\r\n    let page = 1\r\n    let { data } = await getVolunteer(page++, city)\r\n    let l = data.length\r\n    let total = l\r\n    while (l === 200) {\r\n        let { data } = await getVolunteer(page++, city)\r\n        l = data.length\r\n        total = total + l\r\n    }\r\n    return total\r\n}\r\n\r\nexport const fetchCamps = async (city: string) => {\r\n    let monthCampData = Array(12).fill(0)\r\n    let monthAwarnessData = Array(12).fill(0)\r\n    let monthDonation = Array(12).fill(0)\r\n    let monthDetail = Array(12).fill(0).map(x => [{}])\r\n    let donations = 0\r\n    let page = 1\r\n    let { data } = await getEvent(page++, city)\r\n    let l = data.length\r\n    let camps = data.filter(d => d.TypeOfEvent === 'Camp')\r\n    let awareness = data.filter(d => d.TypeOfEvent !== 'Camp')\r\n    let totalCamps = 0\r\n    let totalAwareness = 0\r\n    camps.forEach(c => {\r\n        let date = c.Date_field\r\n        let [_, mon, year] = date.split('-')\r\n        if (parseInt(year) === new Date().getFullYear()) {\r\n            monthCampData[parseInt(mon) - 1] = monthCampData[parseInt(mon) - 1] + 1\r\n            if (c['Post_Camp_ID.Number_of_Donation']) {\r\n                monthDonation[parseInt(mon) - 1] = monthDonation[parseInt(mon) - 1] + parseInt(c['Post_Camp_ID.Number_of_Donation'])\r\n                donations = donations + parseInt(c['Post_Camp_ID.Number_of_Donation'])\r\n            }\r\n            monthDetail[parseInt(mon) - 1].push({city: c.BloodConnect_City, date, donations: c['Post_Camp_ID.Number_of_Donation'] ? c['Post_Camp_ID.Number_of_Donation'] : 0 })\r\n            totalCamps ++ ;\r\n        }   \r\n    })\r\n    awareness.forEach(c => {\r\n        let date = c.Date_field\r\n        let [_, mon, year] = date.split('-')\r\n        if (parseInt(year) === new Date().getFullYear()) {\r\n            monthAwarnessData[parseInt(mon) - 1] = monthAwarnessData[parseInt(mon) - 1] + 1\r\n            totalAwareness ++;\r\n        }\r\n    })\r\n    \r\n    console.log(totalCamps, totalAwareness)\r\n    return {\r\n        camps: totalCamps,\r\n        awareness: totalAwareness,\r\n        monthCampData,\r\n        monthAwarnessData,\r\n        monthDonation,\r\n        monthDetail,\r\n        donations\r\n    }\r\n\r\n}\r\n\r\nexport const fetchPostCamp = async (city: string) => {\r\n    let monthData = Array(12).fill(0)\r\n    let donation = 0\r\n    let d = await getPostCamp(0, city).then((res) => {\r\n\r\n        res.data.forEach(postCamp => {\r\n\r\n            let date = postCamp.Camp_Awareness.display_value.split('_').pop()\r\n            if (!date)\r\n                return;\r\n            let [_, mon, year] = date.split('-')\r\n            if (parseInt(year) === new Date().getFullYear()) {\r\n                monthData[parseInt(mon) - 1] = monthData[parseInt(mon) - 1] + parseInt(postCamp.Number_of_Donation)\r\n                donation = donation + parseInt(postCamp.Number_of_Donation)\r\n            }\r\n        });\r\n    }, (error) => {\r\n        console.log('error', error, city)\r\n        donation = 0\r\n    })\r\n\r\n    return { totalDonation: donation, monthData }\r\n}\r\n\r\nexport const fecthHelplines = async (city:string) => {\r\n    let page = 1;\r\n    let  { data }  = await getHelplines(page++,city);\r\n    let l = data.length\r\n    let total = l;\r\n    while( l === 200){\r\n        let { data } = await getHelplines(page++,city);\r\n        l = data.length;\r\n        total += l;\r\n    }\r\n    return total\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryLabel } from 'victory'\r\nimport html2canvas from 'html2canvas'\r\nimport { jsPDF } from 'jspdf'\r\nimport './Chart.css'\r\n\r\ninterface Props {\r\n    data?:number[];\r\n    loading?:boolean;\r\n    handleClick: (i: number) => void\r\n}\r\n\r\ninterface dataProps {\r\n    month: number;\r\n    donations: number;\r\n    label: String;\r\n}\r\n\r\nconst MonthlyChart = ({ data, loading, handleClick }: Props) => {\r\n    const initial_data = [\r\n        { month: 1, donations: 0, label: '0' },\r\n        { month: 2, donations: 0, label: '0' },\r\n        { month: 3, donations: 0, label: '0' },\r\n        { month: 4, donations: 0, label: '0' },\r\n        { month: 5, donations: 0, label: '0' },\r\n        { month: 6, donations: 0, label: '0' },\r\n        { month: 7, donations: 0, label: '0' },\r\n        { month: 8, donations: 0, label: '0' },\r\n        { month: 9, donations: 0, label: '0' },\r\n        { month: 10, donations: 0, label: '0' },\r\n        { month: 11, donations: 0, label: '0' },\r\n        { month: 12, donations: 0, label: '0' },\r\n    ];\r\n\r\n    const [chartData, setData] = useState<dataProps[]>(initial_data)\r\n\r\n    const downloadChart = () => {\r\n        const input = document.getElementById('chart');\r\n        let width = input!.clientWidth;\r\n        let height = input!.clientHeight;\r\n        \r\n    html2canvas(input!)\r\n      .then((canvas) => {\r\n        const imgData = canvas.toDataURL('image/png');\r\n        const pdf = new jsPDF();\r\n        pdf.addImage(imgData,'JPEG',0,0,width,height);\r\n        // pdf.output('dataurlnewwindow');\r\n        pdf.save(\"download.pdf\");\r\n      })\r\n    ;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!loading && data) {\r\n            setData((d:dataProps[]) => {\r\n                return d.map(da => {\r\n                    da.donations = data[da.month -1]\r\n                    da.label = data[da.month -1 ]+ ''\r\n                    return da\r\n                })\r\n            })\r\n        }\r\n    },[loading, data])\r\n\r\n    return (\r\n        <div id=\"chart\" className=\"container chart-container my-4\">\r\n            <button className=\"mx-2\" onClick={() => downloadChart()}>Download Chart</button>\r\n            <VictoryChart\r\n                theme={VictoryTheme.material}\r\n                width={800}\r\n                height={400}\r\n                domainPadding={100}\r\n                animate={{\r\n                    duration: 2000,\r\n                    onLoad:{ duration: 1000 }\r\n                }}\r\n            >\r\n                <VictoryLabel text=\"Monthly Report\" x={225} y={30} textAnchor=\"middle\"/>\r\n                <VictoryAxis\r\n\r\n                    tickValues={chartData.map(f => f.month)}\r\n                    tickFormat={['Jan','Feb','Mar','Apr','May','June','July','Aug','Sep','Oct','Nov','Dec']}\r\n                />\r\n                <VictoryAxis\r\n                    dependentAxis\r\n\r\n                    tickFormat={x => x}\r\n                />\r\n                <VictoryBar\r\n                    data={chartData}\r\n                    x=\"month\"\r\n                    y=\"donations\"\r\n                    alignment='middle'\r\n                    events={[{\r\n                        target: \"data\",\r\n                        eventHandlers: {\r\n                            onClick: () => {\r\n                                return [{\r\n                                    target: \"data\",\r\n                                    mutation: (props) => {\r\n                                        console.log(props.data[props.index].url)\r\n                                        handleClick(props.data[props.index].month - 1)\r\n                                        return true\r\n                                    }\r\n                                }];\r\n                            }\r\n                        }\r\n                    }]}\r\n                />\r\n            </VictoryChart>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MonthlyChart\r\n","import React, { useEffect, useState, ReactElement } from 'react'\r\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryLabel, VictoryGroup, VictoryLegend } from 'victory'\r\nimport './Chart.css'\r\n\r\ninterface Props {\r\n    camp?: number[];\r\n    awareness?: number[]\r\n}\r\ninterface dataProps {\r\n    month: number;\r\n    donations: number;\r\n    label: number;\r\n    url: string\r\n}\r\n\r\ninterface GraphData {\r\n    month: number;\r\n    count: number;\r\n    label: number;\r\n}\r\n\r\nexport default function MonthlyEventChart({ camp, awareness }: Props): ReactElement {\r\n    const initial_data = [\r\n        { month: 1, count: 0, label: 0 },\r\n        { month: 2, count: 0, label: 0 },\r\n        { month: 3, count: 0, label: 0 },\r\n        { month: 4, count: 0, label: 0 },\r\n        { month: 5, count: 0, label: 0 },\r\n        { month: 6, count: 0, label: 0 },\r\n        { month: 7, count: 0, label: 0 },\r\n        { month: 8, count: 0, label: 0 },\r\n        { month: 9, count: 0, label: 0 },\r\n        { month: 10, count: 0, label: 0 },\r\n        { month: 11, count: 0, label: 0 },\r\n        { month: 12, count: 0, label: 0 },\r\n    ];\r\n    const initial_data1 = [\r\n        { month: 1, count: 0, label: 0 },\r\n        { month: 2, count: 0, label: 0 },\r\n        { month: 3, count: 0, label: 0 },\r\n        { month: 4, count: 0, label: 0 },\r\n        { month: 5, count: 0, label: 0 },\r\n        { month: 6, count: 0, label: 0 },\r\n        { month: 7, count: 0, label: 0 },\r\n        { month: 8, count: 0, label: 0 },\r\n        { month: 9, count: 0, label: 0 },\r\n        { month: 10, count: 0, label: 0 },\r\n        { month: 11, count: 0, label: 0 },\r\n        { month: 12, count: 0, label: 0 },\r\n    ];\r\n\r\n    const [campData, setCampData] = useState<GraphData[]>(initial_data)\r\n    const [awarenessData, setAwarenessData] = useState<GraphData[]>(initial_data1)\r\n    useEffect(() => {\r\n        if (camp) {\r\n            setCampData((d: GraphData[]) => {\r\n                return d.map(da => {\r\n                    da.count = camp[da.month - 1]\r\n                    da.label = camp[da.month - 1]\r\n                    return da\r\n                })\r\n            })\r\n        }\r\n    }, [camp])\r\n\r\n    useEffect(() => {\r\n        if (awareness) {\r\n            setAwarenessData((d: GraphData[]) => {\r\n                return d.map(da => {\r\n                    da.count = awareness[da.month - 1]\r\n                    da.label = awareness[da.month - 1]\r\n                    return da\r\n                })\r\n            })\r\n        }\r\n    }, [awareness])\r\n    return (\r\n        <div className=\"container chart-container my-4\">\r\n            <VictoryChart\r\n                theme={VictoryTheme.material}\r\n                width={800}\r\n                height={400}\r\n                domainPadding={100}\r\n            >\r\n\r\n                <VictoryLabel text=\"Monthly Report\" x={225} y={30} textAnchor=\"middle\" />\r\n                <VictoryLegend x={125} y={50}\r\n                    title=\"Legend\"\r\n                    centerTitle\r\n                    orientation=\"horizontal\"\r\n                    gutter={20}\r\n                    style={{ border: { stroke: \"black\" }, title: { fontSize: 20 } }}\r\n                    data={[\r\n                        { name: \"Camp\", symbol: { fill: \"blue\", type:\"rectangle\" } },\r\n                        { name: \"Awareness\", symbol: { fill: \"cyan\" } }\r\n                    ]}\r\n                />\r\n                <VictoryAxis\r\n\r\n                    tickValues={campData.map(f => f.month)}\r\n                    tickFormat={['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']}\r\n                />\r\n                <VictoryAxis\r\n                    dependentAxis\r\n\r\n                    tickFormat={x => x}\r\n                />\r\n                <VictoryGroup\r\n                    offset={20}\r\n                    colorScale={'qualitative'}\r\n                    animate={{\r\n                        duration: 2000,\r\n                        onLoad: { duration: 1000 }\r\n                    }}\r\n                >\r\n                    <VictoryBar\r\n                        data={campData}\r\n                        x=\"month\"\r\n                        y=\"count\"\r\n                        alignment='middle'\r\n                        events={[{\r\n                            target: \"data\",\r\n                            eventHandlers: {\r\n                                onClick: () => {\r\n                                    return [{\r\n                                        target: \"data\",\r\n                                        mutation: (props) => {\r\n                                            console.log(props.data[props.index].url)\r\n                                            return true\r\n                                        }\r\n                                    }];\r\n                                }\r\n                            }\r\n                        }]}\r\n                    />\r\n                    <VictoryBar\r\n                        data={awarenessData}\r\n                        x=\"month\"\r\n                        y=\"count\"\r\n                        alignment='middle'\r\n                        events={[{\r\n                            target: \"data\",\r\n                            eventHandlers: {\r\n                                onClick: () => {\r\n                                    return [{\r\n                                        target: \"data\",\r\n                                        mutation: (props) => {\r\n                                            console.log(props.data[props.index].url)\r\n                                            return true\r\n                                        }\r\n                                    }];\r\n                                }\r\n                            }\r\n                        }]}\r\n                    />\r\n                </VictoryGroup>\r\n            </VictoryChart>\r\n        </div>\r\n    )\r\n}\r\n","import React, { ReactElement, useEffect, useState } from 'react'\r\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryLabel, VictoryTooltip } from 'victory'\r\nimport { FiArrowLeft } from 'react-icons/fi'\r\nimport './Chart.css'\r\n\r\ninterface DataProps {\r\n    city: string;\r\n    donations: number;\r\n    label?: string;\r\n    date: string;\r\n    x?: string\r\n}\r\ninterface Props {\r\n    data: DataProps[];\r\n    loading?: boolean;\r\n    back: () => void\r\n}\r\n\r\n\r\nfunction CampDonationChart({ data, loading, back }: Props): ReactElement {\r\n    const initial_data: DataProps[] = [\r\n        { city: 'Agra', date: '10-07-2020', x: '12', donations: 20, label: '20' },\r\n        { city: 'Agra', date: '11-07-2020', x: '22', donations: 20, label: '20' },\r\n        { city: 'Agra', date: '12-07-2020', x: '34', donations: 20, label: '20' },\r\n    ];\r\n    const [ chartData, setData ] = useState<DataProps[]>(initial_data)\r\n    \r\n\r\n    useEffect(() => {\r\n        if(loading && data){ \r\n            console.log('Data from month stat',data)\r\n            let d2 = data.filter(d => d.date != null && d.date.length > 0)\r\n            console.log('after update', d2);\r\n            let d = d2.map( da => {\r\n                return {\r\n                    city: da.city,\r\n                    date: da.date.split('-')[0],\r\n                    donations: parseInt(da.donations.toString()),\r\n                    label: da.donations+ ` donations on ${da.date} `,\r\n                    x: da.date.split('-')[0] + `(${da.city})`\r\n                }\r\n            })\r\n            console.log(d)\r\n            let sorted = d.sort((a,b) =>  parseInt(a.date) - parseInt(b.date)); \r\n            console.log('sorted data', sorted)\r\n            setData(d)\r\n        }\r\n    },[data, loading])\r\n    return (\r\n        <div className=\"container chart-container my-4\">\r\n            <FiArrowLeft size={24} onClick={back}  />\r\n        <VictoryChart\r\n            theme={VictoryTheme.material}\r\n            width={800}\r\n            height={400}\r\n            domainPadding={100}\r\n        >\r\n            <VictoryLabel text=\"Monthly Report\" x={225} y={30} textAnchor=\"middle\"/>\r\n            \r\n            <VictoryAxis\r\n\r\n                tickValues={chartData.map(f => f.x)}\r\n                //tickFormat={['Jan','Feb','Mar','Apr','May','June','July','Aug','Sep','Oct','Nov','Dec']}\r\n            />\r\n            <VictoryAxis\r\n                dependentAxis\r\n\r\n                tickFormat={x => x}\r\n            />\r\n            <VictoryBar\r\n                data={chartData}\r\n                labelComponent={<VictoryTooltip />}\r\n                x=\"x\"\r\n                y=\"donations\"\r\n                alignment='middle'\r\n                barWidth={24}\r\n                events={[{\r\n                    target: \"data\",\r\n                    eventHandlers: {\r\n                        onClick: () => {\r\n                            return [{\r\n                                target: \"data\",\r\n                                mutation: (props) => {\r\n                                    console.log(props.data[props.index].url)\r\n                                    return true\r\n                                }\r\n                            }];\r\n                        }\r\n                    }\r\n                }]}\r\n            />\r\n        </VictoryChart>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default CampDonationChart\r\n","import React, { useEffect, useState } from \"react\";\nimport { FiUser, FiCalendar, FiUsers } from \"react-icons/fi\";\nimport Lottie from \"react-lottie\";\nimport { fecthHelplines } from \"../../services\";\nimport Search from \"../Search/Search\";\n\ninterface Props {\n  searchedCity: string;\n}\n\nconst HelplineComponent = ({ searchedCity }: Props) => {\n  const [city, setCity] = useState<string>(searchedCity);\n  const [isLoading, setLoading] = useState<boolean>(true);\n  const [helpline, setHelpline] = useState(0);\n\n\n  // function to fecth helpline stats\n  const fetchData = async () => {\n      const data = await fecthHelplines(city)\n      setHelpline(data)\n      setLoading(false)\n  }\n\n  // changing city only if new city is selected\n  useEffect(() => {\n    if (searchedCity !== city) setCity(searchedCity);\n  }, [searchedCity]);\n\n  useEffect(() => {\n        setLoading(true)\n        fetchData()\n  },[city])\n\n  const Loading = () => {\n    return (\n      <div>\n        <Lottie\n          options={{\n            animationData: require(\"../../assets/animation/dot.json\"),\n            loop: true,\n            autoplay: true,\n          }}\n          height={100}\n          width={100}\n          isStopped={!isLoading}\n        />\n      </div>\n    );\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \">\n            {!isLoading ? (\n              <div>\n                <p className=\"card-heading\"> Total Requests</p>\n                <p className=\"display-4\">{ helpline }</p>\n              </div>\n            ) : (\n              <Loading />\n            )}\n            <div className=\"stat-icon-container\">\n              <FiUser size={34} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \">\n            {!isLoading ? (\n              <div>\n                <p className=\"card-heading\"> Open</p>\n                <p className=\"display-4\">1000</p>\n              </div>\n            ) : (\n              <Loading />\n            )}\n            <div className=\"stat-icon-container\">\n              <FiCalendar size={34} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \">\n            {!isLoading ? (\n              <div>\n                <p className=\"card-heading\"> Closed</p>\n                <p className=\"display-4\">2445</p>\n              </div>\n            ) : (\n              <Loading />\n            )}\n            <div className=\"stat-icon-container\">\n              <FiCalendar size={34} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \">\n            {!isLoading ? (\n              <div>\n                <p className=\"card-heading\"> Toatal Donation </p>\n                <p className=\"display-4\">1245</p>\n              </div>\n            ) : (\n              <Loading />\n            )}\n            <div className=\"stat-icon-container\">\n              <FiUsers size={34} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HelplineComponent;\n","import React, { useState, useEffect } from \"react\";\r\nimport { FiUser, FiCalendar, FiUsers } from \"react-icons/fi\";\r\nimport \"./App.css\";\r\nimport Search from \"./components/Search/Search\";\r\n//import { useQuery } from '@apollo/client';\r\n//import { STATS_QUERY, ALL_STAT } from './query';\r\nimport { fetchVolunteer, fetchCamps, fecthHelplines } from \"./services/index\";\r\nimport Lottie from \"react-lottie\";\r\nimport MonthlyChart from \"./components/Chart/MonthlyChart\";\r\n// import { OverallStat } from './components/schema';\r\nimport MonthlyEventChart from \"./components/Chart/MonthlyEventChart\";\r\nimport CampDonationChart from \"./components/Chart/CampDonationChart\";\r\nimport HelplineComponent from \"./components/Helpline\";\r\n\r\ninterface Citystat {\r\n  [key: string]: number;\r\n}\r\ninterface MonthStat {\r\n  city: string;\r\n  donations: number;\r\n  label: string;\r\n  date: string;\r\n}\r\nconst App = () => {\r\n  let BASE_URL =\r\n    \"https://app.zohocreator.in/deepak64/bloodconnect-india-donor-system\";\r\n  if (\r\n    window.location.ancestorOrigins &&\r\n    !window.location.ancestorOrigins[0].includes(\"localhost\")\r\n  ) {\r\n    console.log('origin url is',window.location.ancestorOrigins);\r\n    if(window.location.ancestorOrigins[0].includes(\"bloodconnect\"))\r\n      BASE_URL = window.location.ancestorOrigins[0];\r\n  }\r\n\r\n  const [city, setCity] = useState(\"All\");\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [isMonthStat, showMonthStat] = useState(false);\r\n  const [monthStat, setMonthStat] = useState<MonthStat[]>([]);\r\n  const [aV, setAV] = useState(-1);\r\n  const [camps, setCamps] = useState(-1);\r\n  const [awareness, setAwareness] = useState(-1);\r\n  const [donations, setDonations] = useState(-1);\r\n\r\n  // Monthly Datas\r\n  // Donations data\r\n  const [monthlyData, setmonthlyData] = useState(Array(12).fill(0));\r\n  // Camp data\r\n  const [monthlyCampData, setmonthlyCampData] = useState(Array(12).fill(0));\r\n  const [monthCampDetail, setMonthCampDetail] = useState<any>();\r\n  // Awareness data\r\n  const [monthlyAwarenessData, setmonthlyAwarenessData] = useState(\r\n    Array(12).fill(0)\r\n  );\r\n  const [aVUrl, setaVUrl] = useState(\r\n    `${BASE_URL}/#Report:BloodConnect_Team_Report?Status=Active`\r\n  );\r\n  const [campUrl, setcampUrl] = useState(\r\n    `${BASE_URL}/#Report:Camp_Awareness_Report?TypeOfEvent=Camp&Date_field_op=52`\r\n  );\r\n  const [awarenessUrl, setawarenessUrl] = useState(\r\n    `${BASE_URL}/#Report:Camp_Awareness_Report?TypeOfEvent=Awareness&Date_field_op=52`\r\n  );\r\n\r\n  const loadAV = async () => {\r\n    const av = await fetchVolunteer(city);\r\n    setAV(av);\r\n  };\r\n  const loadCamps = async () => {\r\n    const {\r\n      camps,\r\n      awareness,\r\n      monthCampData,\r\n      monthAwarnessData,\r\n      donations,\r\n      monthDetail,\r\n      monthDonation,\r\n    } = await fetchCamps(city);\r\n\r\n    setMonthCampDetail(monthDetail);\r\n    setCamps(camps);\r\n    setAwareness(awareness);\r\n    setDonations(donations);\r\n    setmonthlyCampData(monthCampData);\r\n    setmonthlyAwarenessData(monthAwarnessData);\r\n    setmonthlyData(monthDonation);\r\n    const helpine = await fecthHelplines(\"All\");\r\n    console.log(\"Helplines are \", helpine);\r\n  };\r\n\r\n  const loadAllData = () => {\r\n    loadAV().then(() => {\r\n      loadCamps().then(() => {\r\n        setLoading(false);\r\n      });\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    loadAllData();\r\n  }, [city]);\r\n\r\n  // useEffect(() => {\r\n  //     loadCityStat()\r\n  // }, [])\r\n  const setSearch = (c: string): void => {\r\n    if (c !== city) {\r\n      setLoading(true);\r\n      setCity(c);\r\n    }\r\n  };\r\n\r\n  const setMonth = (i: number): void => {\r\n    if (monthCampDetail && monthCampDetail[i]) setMonthStat(monthCampDetail[i]);\r\n    else\r\n      setMonthCampDetail([{ city: \"null\", date: \"12-07-2012\", donations: 20 }]);\r\n    showMonthStat(true);\r\n  };\r\n\r\n  const hideMonthStat = (): void => {\r\n    showMonthStat(false);\r\n  };\r\n  useEffect(() => {\r\n    if (city !== \"All\") {\r\n      setaVUrl(\r\n        `${BASE_URL}/#Report:BloodConnect_Team_Report?Status=Active&BloodConnect_City=${city}`\r\n      );\r\n      setcampUrl(\r\n        `${BASE_URL}/#Report:Camp_Awareness_Report?TypeOfEvent=Camp&BloodConnect_City=${city}&Date_field_op=52`\r\n      );\r\n      setawarenessUrl(\r\n        `${BASE_URL}/#Report:Camp_Awareness_Report?TypeOfEvent=Awareness&BloodConnect_City=${city}&Date_field_op=52`\r\n      );\r\n    }\r\n  }, [BASE_URL, city]);\r\n\r\n  const Loading = () => {\r\n    return (\r\n      <div>\r\n        <Lottie\r\n          options={{\r\n            animationData: require(\"./assets/animation/dot.json\"),\r\n            loop: true,\r\n            autoplay: true,\r\n          }}\r\n          height={100}\r\n          width={100}\r\n          isStopped={!isLoading}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row justify-content-between \">\r\n        <h4 className=\"stat col-lg-4 col-sm-12  mt-2 d-flex align-items-center justify-content-center\">\r\n          {city === \"All\" ? \"BloodConnect\" : city}\r\n        </h4>\r\n        <Search handleChange={setSearch} />\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-3\">\r\n          <div\r\n            className=\"stat-card \"\r\n            onClick={() => {\r\n              window.open(aVUrl, \"_blank\");\r\n            }}\r\n          >\r\n            {!isLoading ? (\r\n              <div>\r\n                <p className=\"card-heading\"> Active Volunteer</p>\r\n                <p className=\"display-4\">{aV}</p>\r\n              </div>\r\n            ) : (\r\n              <Loading />\r\n            )}\r\n            <div className=\"stat-icon-container\">\r\n              <FiUser size={34} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-3\">\r\n          <div\r\n            className=\"stat-card \"\r\n            onClick={() => {\r\n              window.open(campUrl, \"_blank\");\r\n            }}\r\n          >\r\n            {!isLoading ? (\r\n              <div>\r\n                <p className=\"card-heading\"> Camps</p>\r\n                <p className=\"display-4\">{camps}</p>\r\n              </div>\r\n            ) : (\r\n              <Loading />\r\n            )}\r\n            <div className=\"stat-icon-container\">\r\n              <FiCalendar size={34} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-3\">\r\n          <div\r\n            className=\"stat-card \"\r\n            onClick={() => {\r\n              window.open(awarenessUrl, \"_blank\");\r\n            }}\r\n          >\r\n            {!isLoading ? (\r\n              <div>\r\n                <p className=\"card-heading\"> Awareness</p>\r\n                <p className=\"display-4\">{awareness}</p>\r\n              </div>\r\n            ) : (\r\n              <Loading />\r\n            )}\r\n            <div className=\"stat-icon-container\">\r\n              <FiCalendar size={34} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-3\">\r\n          <div className=\"stat-card \">\r\n            {!isLoading ? (\r\n              <div>\r\n                <p className=\"card-heading\"> Toatal Donation </p>\r\n                <p className=\"display-4\">{donations}</p>\r\n              </div>\r\n            ) : (\r\n              <Loading />\r\n            )}\r\n            <div className=\"stat-icon-container\">\r\n              <FiUsers size={34} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <HelplineComponent searchedCity={city} />\r\n      {isMonthStat ? (\r\n        <CampDonationChart\r\n          data={monthStat}\r\n          loading={isMonthStat}\r\n          back={hideMonthStat}\r\n        />\r\n      ) : (\r\n        <MonthlyChart\r\n          data={monthlyData}\r\n          loading={isLoading}\r\n          handleClick={setMonth}\r\n        />\r\n      )}\r\n      <MonthlyEventChart\r\n        camp={monthlyCampData}\r\n        awareness={monthlyAwarenessData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"https://bc-apiv2.herokuapp.com/graphql\",\r\n  cache: new InMemoryCache()\r\n})\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}