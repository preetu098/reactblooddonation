{"version":3,"sources":["components/Search/SearchTheme.module.css","Constans/index.ts","Constans/DemoData.ts","services/index.ts","components/Chart/MonthlyDonation.tsx","components/Chart/MonthlyEventChart.tsx","components/Helpline/index.tsx","components/Search/Search.tsx","components/Table/StatTable.tsx","App.tsx","index.tsx"],"names":["module","exports","CITIES_ARRAY","TABLESTATSDEMO","i","push","city","camps","Math","floor","random","awareness","helpline","donations","activeVolunteer","CREATOR","window","ZOHO","getVolunteer","page","criteria","config","reportName","toString","pageSize","API","getAllRecords","getEvent","getCity","getHelplines","fetchVolunteer","a","init","data","l","length","total","fetchCamps","monthCampData","Array","fill","monthAwarnessData","monthDonation","monthDetail","map","x","filter","d","TypeOfEvent","totalCamps","totalAwareness","forEach","c","date","Date_field","split","mon","year","parseInt","Date","getFullYear","BloodConnect_City","console","log","fecthHelplines","res","ID","returnData","open","closed","Status","getTableStat","tableStat","av","CampDonationChart","back","useState","label","chartData","setData","useEffect","d2","da","sorted","sort","b","className","size","onClick","theme","VictoryTheme","material","width","height","domainPadding","text","y","textAnchor","tickValues","f","dependentAxis","tickFormat","labelComponent","alignment","barWidth","events","target","eventHandlers","mutation","props","index","url","DonationCharts","selectedCity","month","setCity","setLoading","monthStatShown","showMonthStat","monthStat","setMonthStat","currMonthStat","setCurrMonthStat","ref","React","createRef","fetchYearData","from","id","exportComponentAsPDF","animate","duration","onLoad","handleClick","MonthlyEventChart","camp","count","campData","setCampData","awarenessData","setAwarenessData","title","centerTitle","orientation","gutter","style","border","stroke","fontSize","name","symbol","type","offset","colorScale","HelplineComponent","searchedCity","isLoading","setHelpline","openHelpline","setOpen","closedHelpline","setClosed","fetchData","s","Loading","options","animationData","require","loop","autoplay","isStopped","Search","handleChange","suggestions","setSuggestion","value","setValue","inputProps","placeholder","onChange","event","newValue","onKeyDown","e","key","onSuggestionsFetchRequested","inputValue","trim","toLowerCase","inputLength","slice","getSuggestions","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","color","StatTable","loading","cellSpacing","cellPadding","App","BASE_URL","location","ancestorOrigins","includes","aV","setAV","setCamps","setAwareness","setDonations","monthlyCampData","setmonthlyCampData","monthlyAwarenessData","setmonthlyAwarenessData","aVUrl","setaVUrl","campUrl","setcampUrl","awarenessUrl","setawarenessUrl","loadAV","loadCamps","then","Helpline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4defccd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchTheme_container__1nyy1\",\"suggestionsContainer\":\"SearchTheme_suggestionsContainer__11igi\",\"suggestionsList\":\"SearchTheme_suggestionsList__2fUzU\",\"suggestion\":\"SearchTheme_suggestion__1AGtJ\"};","export const CITIES_ARRAY = [ \"Agra\",\"Consulting\",\"Delhi NCR\",\"Jaipur\",\"Kanpur\",\"Kolkata\",\"Lucknow\",\"Odisha\",\"Pune\",\"Ranchi\",\"Varanasi\"];","import { CITIES_ARRAY } from \".\";\nimport { TableStatsType } from \"../Types\";\n\nexport const TABLESTATSDEMO:TableStatsType[] = []\n\nfor(let i in CITIES_ARRAY) {\n        TABLESTATSDEMO.push({\n                city:CITIES_ARRAY[i],\n                camps: Math.floor(Math.random()*10 ),\n                awareness: Math.floor(Math.random()*5),\n                helpline: Math.floor(Math.random()*20),\n                donations:Math.floor(Math.random()*25),\n                activeVolunteer:Math.floor(Math.random()*150)\n        })\n}","import { CITIES_ARRAY } from \"../Constans\";\r\nimport { TABLESTATSDEMO } from \"../Constans/DemoData\";\r\nimport { sleep } from \"../Helplers\";\r\nimport { TableStatsType } from \"../Types\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    ZOHO: any;\r\n  }\r\n}\r\n\r\ninterface overall {\r\n  city: string;\r\n  donations: number;\r\n}\r\ninterface API<Data> {\r\n  code: number;\r\n  data: Data[];\r\n}\r\ninterface PostCamp {\r\n  Number_of_Donation: any;\r\n  Camp_Awareness: {\r\n    display_value: string;\r\n  };\r\n}\r\n\r\ninterface MonthData {\r\n  city: string;\r\n  date: string;\r\n  donations: number;\r\n}\r\n\r\nconst CREATOR = window.ZOHO.CREATOR;\r\n\r\nexport const get = () => {\r\n  CREATOR.init()\r\n    .then((d) => {\r\n      let config = {\r\n        reportName: \"BloodConnect_Team_Report\",\r\n        page: \"1\",\r\n        pageSize: \"200\",\r\n      };\r\n\r\n      //get all records API\r\n      CREATOR.API.getAllRecords(config).then(function (response) {\r\n        //callback block\r\n        console.log(response);\r\n      });\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });\r\n};\r\n\r\nconst getVolunteer = (page: number, city: string) => {\r\n  let criteria = '(Status==\"Active\")';\r\n  if (city !== \"All\") {\r\n    criteria = `(Status==\"Active\" && BloodConnect_City==\"${city}\")`;\r\n  }\r\n\r\n  let config = {\r\n    reportName: \"BloodConnect_Team_Report\",\r\n    criteria,\r\n    page: page.toString(),\r\n    pageSize: \"200\",\r\n  };\r\n  return CREATOR.API.getAllRecords(config);\r\n};\r\n\r\nconst getEvent = (page: number, city: string) => {\r\n  let criteria = \"\";\r\n  if (city !== \"All\") {\r\n    criteria = `(BloodConnect_City==\"${city}\")`;\r\n  }\r\n\r\n  let config = {\r\n    reportName: \"Camp_Awareness_Report\",\r\n    criteria,\r\n    page: page.toString(),\r\n    pageSize: \"200\",\r\n  };\r\n  return CREATOR.API.getAllRecords(config);\r\n};\r\n\r\nconst getCity = (city: string) => {\r\n  let config = {\r\n    reportName: \"Vlookup_Report\",\r\n    criteria: `City==\"${city}\"`,\r\n    page: 1,\r\n    pageSize: \"1\",\r\n  };\r\n  return CREATOR.API.getAllRecords(config);\r\n};\r\n\r\nconst getHelplines = (page: number, city: string) => {\r\n  let criteria = \"\";\r\n  if (city !== \"All\") {\r\n    criteria = `(City_Region==${city})`;\r\n  }\r\n\r\n  let config = {\r\n    reportName: \"Helpline_Report\",\r\n    criteria,\r\n    page: page.toString(),\r\n    pageSize: \"200\",\r\n  };\r\n  return CREATOR.API.getAllRecords(config);\r\n};\r\n\r\nconst getPostCamp = (page: number, city: string): Promise<API<PostCamp>> => {\r\n  let criteria = \"\";\r\n  if (city !== \"All\") {\r\n    criteria = `(BloodConnect_City==\"${city}\")`;\r\n  }\r\n  let config = {\r\n    reportName: \"Post_Camp_Form_Report\",\r\n    criteria: criteria,\r\n    page: page.toString(),\r\n    pageSize: \"200\",\r\n  };\r\n  return CREATOR.API.getAllRecords(config);\r\n  // return new Promise((resolve, reject) => {\r\n  //     let response = CREATOR.API.getAllRecords(config)\r\n  //     if (response)\r\n  //         resolve(response)\r\n  //     else\r\n  //         reject({ code: 500, data: []})\r\n  // })\r\n};\r\nexport const fetchVolunteer = async (city: string) => {\r\n  await CREATOR.init();\r\n  let page = 1;\r\n  let { data } = await getVolunteer(page++, city);\r\n  let l = data.length;\r\n  let total = l;\r\n  while (l === 200) {\r\n    let { data } = await getVolunteer(page++, city);\r\n    l = data.length;\r\n    total = total + l;\r\n  }\r\n  return total;\r\n};\r\n\r\nexport const fetchCamps = async (city: string) => {\r\n  await CREATOR.init();\r\n  let monthCampData = Array(12).fill(0);\r\n  let monthAwarnessData = Array(12).fill(0);\r\n  let monthDonation = Array(12).fill(0);\r\n  let monthDetail = Array(12)\r\n    .fill(0)\r\n    .map((x) => [{}]);\r\n  let donations = 0;\r\n  let page = 1;\r\n  let { data } = await getEvent(page++, city);\r\n  let l = data.length;\r\n  let camps = data.filter((d) => d.TypeOfEvent === \"Camp\");\r\n  let awareness = data.filter((d) => d.TypeOfEvent !== \"Camp\");\r\n  let totalCamps = 0;\r\n  let totalAwareness = 0;\r\n  camps.forEach((c) => {\r\n    let date = c.Date_field;\r\n    let [_, mon, year] = date.split(\"-\");\r\n    if (parseInt(year) === new Date().getFullYear()) {\r\n      monthCampData[parseInt(mon) - 1] = monthCampData[parseInt(mon) - 1] + 1;\r\n      if (c[\"Post_Camp_ID.Number_of_Donation\"]) {\r\n        monthDonation[parseInt(mon) - 1] =\r\n          monthDonation[parseInt(mon) - 1] +\r\n          parseInt(c[\"Post_Camp_ID.Number_of_Donation\"]);\r\n        donations = donations + parseInt(c[\"Post_Camp_ID.Number_of_Donation\"]);\r\n      }\r\n      monthDetail[parseInt(mon) - 1].push({\r\n        city: c.BloodConnect_City,\r\n        date,\r\n        donations: c[\"Post_Camp_ID.Number_of_Donation\"]\r\n          ? c[\"Post_Camp_ID.Number_of_Donation\"]\r\n          : 0,\r\n      });\r\n      totalCamps++;\r\n    }\r\n  });\r\n  awareness.forEach((c) => {\r\n    let date = c.Date_field;\r\n    let [_, mon, year] = date.split(\"-\");\r\n    if (parseInt(year) === new Date().getFullYear()) {\r\n      monthAwarnessData[parseInt(mon) - 1] =\r\n        monthAwarnessData[parseInt(mon) - 1] + 1;\r\n      totalAwareness++;\r\n    }\r\n  });\r\n\r\n  console.log(totalCamps, totalAwareness);\r\n  return {\r\n    camps: totalCamps,\r\n    awareness: totalAwareness,\r\n    monthCampData,\r\n    monthAwarnessData,\r\n    monthDonation,\r\n    monthDetail,\r\n    donations,\r\n  };\r\n};\r\n\r\nexport const fetchPostCamp = async (city: string) => {\r\n  let monthData = Array(12).fill(0);\r\n  let donation = 0;\r\n  let d = await getPostCamp(0, city).then(\r\n    (res) => {\r\n      res.data.forEach((postCamp) => {\r\n        let date = postCamp.Camp_Awareness.display_value.split(\"_\").pop();\r\n        if (!date) return;\r\n        let [_, mon, year] = date.split(\"-\");\r\n        if (parseInt(year) === new Date().getFullYear()) {\r\n          monthData[parseInt(mon) - 1] =\r\n            monthData[parseInt(mon) - 1] +\r\n            parseInt(postCamp.Number_of_Donation);\r\n          donation = donation + parseInt(postCamp.Number_of_Donation);\r\n        }\r\n      });\r\n    },\r\n    (error) => {\r\n      console.log(\"error\", error, city);\r\n      donation = 0;\r\n    }\r\n  );\r\n\r\n  return { totalDonation: donation, monthData };\r\n};\r\n\r\nexport const fecthHelplines = async (city: string) => {\r\n  await CREATOR.init();\r\n  if (city !== \"All\") {\r\n    let res = await getCity(city);\r\n    city = res.data[0].ID;\r\n  }\r\n  let page = 1;\r\n  let returnData = {\r\n    open: 0,\r\n    closed: 0,\r\n  };\r\n  let { data }: { data: any[] } = await getHelplines(page++, city);\r\n  console.log(data);\r\n  let l = data.length;\r\n  returnData.open += data.filter((d) => d.Status === \"Open\").length;\r\n  returnData.closed += data.filter((d) => d.Status === \"Closed\").length;\r\n  let total = l;\r\n  while (l === 200) {\r\n    let { data } = await getHelplines(page++, city);\r\n    returnData.open += data.filter((d) => d.Status === \"Open\").length;\r\n    returnData.closed += data.filter((d) => d.Status === \"Closed\").length;\r\n    l = data.length;\r\n    total += l;\r\n  }\r\n  return {\r\n    ...returnData,\r\n    total: total,\r\n  };\r\n};\r\n\r\n// fetching stats for the table\r\nexport const getTableStat = async (): Promise<TableStatsType[] | null> => {\r\n  const tableStat: TableStatsType[] = [];\r\n  \r\n  try {\r\n  await CREATOR.init();\r\n    for (let city in CITIES_ARRAY) {\r\n      let av = await fetchVolunteer(city);\r\n      let { camps, awareness, donations } = await fetchCamps(city);\r\n      let { total } = await fecthHelplines(city);\r\n      tableStat.push({\r\n        city,\r\n        camps,\r\n        awareness,\r\n        donations,\r\n        helpline: total,\r\n        activeVolunteer: av,\r\n      });\r\n    }\r\n  } catch (e) {\r\n    return TABLESTATSDEMO;\r\n  }\r\n  \r\n  return TABLESTATSDEMO;\r\n};\r\n","import React, { ReactElement, useEffect, useState } from \"react\";\r\nimport {\r\n  VictoryBar,\r\n  VictoryChart,\r\n  VictoryAxis,\r\n  VictoryTheme,\r\n  VictoryLabel,\r\n  VictoryTooltip,\r\n} from \"victory\";\r\nimport \"./Chart.css\";\r\nimport { fetchCamps } from \"../../services\";\r\nimport { FiArrowLeft } from \"react-icons/fi\";\r\nimport { exportComponentAsPDF } from 'react-component-export-image'\r\n\r\ninterface Props {\r\n  selectedCity: string;\r\n}\r\n\r\ninterface dataProps {\r\n  month: number;\r\n  donations: number;\r\n  label: string;\r\n}\r\n\r\ninterface MonthData {\r\n  city: string;\r\n  date: string;\r\n  donations: number;\r\n}\r\n\r\nconst DonationCharts = ({ selectedCity }: Props) => {\r\n  // for year data  like jan, feb, mar\r\n  const initial_data = [\r\n    { month: 1, donations: 0, label: \"0\" },\r\n    { month: 2, donations: 0, label: \"0\" },\r\n    { month: 3, donations: 0, label: \"0\" },\r\n    { month: 4, donations: 0, label: \"0\" },\r\n    { month: 5, donations: 0, label: \"0\" },\r\n    { month: 6, donations: 0, label: \"0\" },\r\n    { month: 7, donations: 0, label: \"0\" },\r\n    { month: 8, donations: 0, label: \"0\" },\r\n    { month: 9, donations: 0, label: \"0\" },\r\n    { month: 10, donations: 0, label: \"0\" },\r\n    { month: 11, donations: 0, label: \"0\" },\r\n    { month: 12, donations: 0, label: \"0\" },\r\n  ];\r\n\r\n  const initial_month_data = [];\r\n\r\n  const [chartData, setData] = useState<dataProps[]>(initial_data);\r\n  const [city, setCity] = useState<string>(selectedCity);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [monthStatShown, showMonthStat] = useState<boolean>(false);\r\n\r\n  // month details\r\n  const [monthStat, setMonthStat] = useState<any>();\r\n  const [currMonthStat, setCurrMonthStat] = useState<MonthData[]>();\r\n\r\n  let ref = React.createRef<any>()\r\n\r\n  const downloadChart = () => {\r\n    \r\n    exportComponentAsPDF(ref)\r\n  };\r\n\r\n  const fetchYearData = async () => {\r\n    const { monthDonation, monthDetail } = await fetchCamps(city);\r\n    setData((data) => {\r\n      const newData = Array.from(data);\r\n      return newData.map((d) => {\r\n        d.donations = monthDonation[d.month - 1];\r\n        d.label = monthDonation[d.month - 1] + \" \";\r\n        return d;\r\n      });\r\n    });\r\n    console.log(monthDetail)\r\n    setMonthStat(monthDetail);\r\n  };\r\n\r\n  const handleClick = (i: number) => {\r\n    if (monthStat && monthStat[i]) setCurrMonthStat(monthStat[i]);\r\n    showMonthStat(true)\r\n    console.log('current month stat is ',i,currMonthStat)\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedCity !== city) setCity(selectedCity);\r\n  }, [selectedCity]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchYearData();\r\n  }, [city]);\r\n\r\n  return (\r\n    <>\r\n      {!monthStatShown ? (\r\n        <div id=\"chart\" ref={ref} className=\"container chart-container my-4\" >\r\n          <button className=\"mx-2\" onClick={() => downloadChart()}>\r\n            Download Chart\r\n          </button>\r\n          <VictoryChart\r\n            theme={VictoryTheme.material}\r\n            width={800}\r\n            height={400}\r\n            domainPadding={100}\r\n            animate={{\r\n              duration: 2000,\r\n              onLoad: { duration: 1000 },\r\n            }}\r\n          >\r\n            <VictoryLabel\r\n              text=\"Monthly Report\"\r\n              x={225}\r\n              y={30}\r\n              textAnchor=\"middle\"\r\n            />\r\n            <VictoryAxis\r\n              tickValues={chartData.map((f) => f.month)}\r\n              tickFormat={[\r\n                \"Jan\",\r\n                \"Feb\",\r\n                \"Mar\",\r\n                \"Apr\",\r\n                \"May\",\r\n                \"June\",\r\n                \"July\",\r\n                \"Aug\",\r\n                \"Sep\",\r\n                \"Oct\",\r\n                \"Nov\",\r\n                \"Dec\",\r\n              ]}\r\n            />\r\n            <VictoryAxis dependentAxis tickFormat={(x) => x} />\r\n            <VictoryBar\r\n              data={chartData}\r\n              x=\"month\"\r\n              y=\"donations\"\r\n              alignment=\"middle\"\r\n              events={[\r\n                {\r\n                  target: \"data\",\r\n                  eventHandlers: {\r\n                    onClick: () => {\r\n                      return [\r\n                        {\r\n                          target: \"data\",\r\n                          mutation: (props) => {\r\n                            console.log(props.index);\r\n                            handleClick(props.data[props.index].month - 1);\r\n                            return true;\r\n                          },\r\n                        },\r\n                      ];\r\n                    },\r\n                  },\r\n                },\r\n              ]}\r\n            />\r\n          </VictoryChart>\r\n        </div>\r\n      ) : (\r\n        <CampDonationChart\r\n          back={() => {\r\n              console.log(\"back pressed\")\r\n            showMonthStat(false);\r\n          }}\r\n          data={currMonthStat}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst CampDonationChart = ({ back, data }): ReactElement => {\r\n  const initial_data: Array<MonthData & { x: string; label: string }> = [\r\n    { city: \"Agra\", date: \"10-07-2020\", x: \"12\", donations: 20, label: \"20\" },\r\n    { city: \"Agra\", date: \"11-07-2020\", x: \"22\", donations: 20, label: \"20\" },\r\n    { city: \"Agra\", date: \"12-07-2020\", x: \"34\", donations: 20, label: \"20\" },\r\n  ];\r\n  const [chartData, setData] = useState<\r\n    Array<MonthData & { x: string; label: string }>\r\n  >(initial_data);\r\nuseEffect(() => {\r\n  if (data) {\r\n    let d2 = data.filter((d) => d.date != null && d.date.length > 0);\r\n    console.log(\"after update\", d2);\r\n    let d = d2.map((da) => {\r\n      return {\r\n        city: da.city,\r\n        date: da.date.split(\"-\")[0],\r\n        donations: parseInt(da.donations.toString()),\r\n        label: da.donations + ` donations on ${da.date} `,\r\n        x: da.date.split(\"-\")[0] + `(${da.city})`,\r\n      };\r\n    });\r\n    console.log(d);\r\n    let sorted = d.sort((a, b) => parseInt(a.date) - parseInt(b.date));\r\n    console.log(\"sorted data\", sorted);\r\n    setData(d);\r\n  }\r\n},[data])\r\n\r\n  return (\r\n    <div className=\"container chart-container my-4\">\r\n      <FiArrowLeft size={24} onClick={back} />\r\n      <VictoryChart\r\n        theme={VictoryTheme.material}\r\n        width={800}\r\n        height={400}\r\n        domainPadding={100}\r\n      >\r\n        <VictoryLabel\r\n          text=\"Monthly Donations\"\r\n          x={225}\r\n          y={30}\r\n          textAnchor=\"middle\"\r\n        />\r\n\r\n        <VictoryAxis\r\n          tickValues={chartData.map((f) => f.x)}\r\n          //tickFormat={['Jan','Feb','Mar','Apr','May','June','July','Aug','Sep','Oct','Nov','Dec']}\r\n        />\r\n        <VictoryAxis dependentAxis tickFormat={(x) => x} />\r\n        <VictoryBar\r\n          data={chartData}\r\n          labelComponent={<VictoryTooltip />}\r\n          x=\"x\"\r\n          y=\"donations\"\r\n          alignment=\"middle\"\r\n          barWidth={24}\r\n          events={[\r\n            {\r\n              target: \"data\",\r\n              eventHandlers: {\r\n                onClick: () => {\r\n                  return [\r\n                    {\r\n                      target: \"data\",\r\n                      mutation: (props) => {\r\n                        console.log(props.data[props.index].url);\r\n                        return true;\r\n                      },\r\n                    },\r\n                  ];\r\n                },\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n      </VictoryChart>\r\n    </div>\r\n  );\r\n};\r\nexport default DonationCharts;\r\n","import React, { useEffect, useState, ReactElement } from 'react'\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryLabel, VictoryGroup, VictoryLegend } from 'victory'\nimport './Chart.css'\n\ninterface Props {\n    camp?: number[];\n    awareness?: number[]\n}\ninterface dataProps {\n    month: number;\n    donations: number;\n    label: number;\n    url: string\n}\n\ninterface GraphData {\n    month: number;\n    count: number;\n    label: number;\n}\n\nexport default function MonthlyEventChart({ camp, awareness }: Props): ReactElement {\n    const initial_data = [\n        { month: 1, count: 0, label: 0 },\n        { month: 2, count: 0, label: 0 },\n        { month: 3, count: 0, label: 0 },\n        { month: 4, count: 0, label: 0 },\n        { month: 5, count: 0, label: 0 },\n        { month: 6, count: 0, label: 0 },\n        { month: 7, count: 0, label: 0 },\n        { month: 8, count: 0, label: 0 },\n        { month: 9, count: 0, label: 0 },\n        { month: 10, count: 0, label: 0 },\n        { month: 11, count: 0, label: 0 },\n        { month: 12, count: 0, label: 0 },\n    ];\n    const initial_data1 = [\n        { month: 1, count: 0, label: 0 },\n        { month: 2, count: 0, label: 0 },\n        { month: 3, count: 0, label: 0 },\n        { month: 4, count: 0, label: 0 },\n        { month: 5, count: 0, label: 0 },\n        { month: 6, count: 0, label: 0 },\n        { month: 7, count: 0, label: 0 },\n        { month: 8, count: 0, label: 0 },\n        { month: 9, count: 0, label: 0 },\n        { month: 10, count: 0, label: 0 },\n        { month: 11, count: 0, label: 0 },\n        { month: 12, count: 0, label: 0 },\n    ];\n\n    const [campData, setCampData] = useState<GraphData[]>(initial_data)\n    const [awarenessData, setAwarenessData] = useState<GraphData[]>(initial_data1)\n    useEffect(() => {\n        if (camp) {\n            setCampData((d: GraphData[]) => {\n                return d.map(da => {\n                    da.count = camp[da.month - 1]\n                    da.label = camp[da.month - 1]\n                    return da\n                })\n            })\n        }\n    }, [camp])\n\n    useEffect(() => {\n        if (awareness) {\n            setAwarenessData((d: GraphData[]) => {\n                return d.map(da => {\n                    da.count = awareness[da.month - 1]\n                    da.label = awareness[da.month - 1]\n                    return da\n                })\n            })\n        }\n    }, [awareness])\n    return (\n        <div className=\"container chart-container my-4\">\n            <VictoryChart\n                theme={VictoryTheme.material}\n                width={800}\n                height={400}\n                domainPadding={100}\n            >\n\n                <VictoryLabel text=\"Monthly Report\" x={225} y={30} textAnchor=\"middle\" />\n                <VictoryLegend x={125} y={50}\n                    title=\"Legend\"\n                    centerTitle\n                    orientation=\"horizontal\"\n                    gutter={20}\n                    style={{ border: { stroke: \"black\" }, title: { fontSize: 20 } }}\n                    data={[\n                        { name: \"Camp\", symbol: { fill: \"blue\", type:\"rectangle\" } },\n                        { name: \"Awareness\", symbol: { fill: \"cyan\" } }\n                    ]}\n                />\n                <VictoryAxis\n\n                    tickValues={campData.map(f => f.month)}\n                    tickFormat={['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']}\n                />\n                <VictoryAxis\n                    dependentAxis\n\n                    tickFormat={x => x}\n                />\n                <VictoryGroup\n                    offset={20}\n                    colorScale={'qualitative'}\n                    animate={{\n                        duration: 2000,\n                        onLoad: { duration: 1000 }\n                    }}\n                >\n                    <VictoryBar\n                        data={campData}\n                        x=\"month\"\n                        y=\"count\"\n                        alignment='middle'\n                        events={[{\n                            target: \"data\",\n                            eventHandlers: {\n                                onClick: () => {\n                                    return [{\n                                        target: \"data\",\n                                        mutation: (props) => {\n                                            console.log(props.data[props.index].url)\n                                            return true\n                                        }\n                                    }];\n                                }\n                            }\n                        }]}\n                    />\n                    <VictoryBar\n                        data={awarenessData}\n                        x=\"month\"\n                        y=\"count\"\n                        alignment='middle'\n                        events={[{\n                            target: \"data\",\n                            eventHandlers: {\n                                onClick: () => {\n                                    return [{\n                                        target: \"data\",\n                                        mutation: (props) => {\n                                            console.log(props.data[props.index].url)\n                                            return true\n                                        }\n                                    }];\n                                }\n                            }\n                        }]}\n                    />\n                </VictoryGroup>\n            </VictoryChart>\n        </div>\n    )\n}","import React, { useEffect, useState } from \"react\";\nimport { FiUser, FiCalendar, FiUsers } from \"react-icons/fi\";\nimport Lottie from \"react-lottie\";\nimport { fecthHelplines } from \"../../services\";\n\ninterface Props {\n  searchedCity: string;\n}\n\nconst HelplineComponent = ({ searchedCity }: Props) => {\n  const [city, setCity] = useState<string>(\"All\");\n  const [isLoading, setLoading] = useState<boolean>(true);\n  const [helpline, setHelpline] = useState(0);\n  const [openHelpline, setOpen] = useState(0);\n  const [closedHelpline, setClosed] = useState(0);\n\n  // function to fecth helpline stats\n  const fetchData = async () => {\n    const { total, open, closed } = await fecthHelplines(city);\n    console.log(\"Fetched helpline data\");\n    setHelpline((s) => total);\n    setClosed((s) => closed);\n    setOpen((s) => open);\n    setLoading(false);\n    console.log(total, open, closed);\n  };\n\n  // changing city only if new city is selected\n  useEffect(() => {\n    console.log(\"City changed\", searchedCity);\n    if (searchedCity !== city) setCity(searchedCity);\n  }, [searchedCity]);\n\n  useEffect(() => {\n    setLoading(true)\n    fetchData();\n  }, [city]);\n\n \n\n  const Loading = () => {\n    return (\n      <div>\n        <Lottie\n          options={{\n            animationData: require(\"../../assets/animation/dot.json\"),\n            loop: true,\n            autoplay: true,\n          }}\n          height={100}\n          width={100}\n          isStopped={!isLoading}\n        />\n      </div>\n    );\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \">\n            {!isLoading  ? (\n              <div>\n                <p className=\"card-heading\"> Total Requests</p>\n                <p className=\"display-4\">{helpline}</p>\n              </div>\n            ) : (\n              <Loading />\n            )}\n            <div className=\"stat-icon-container\">\n              <FiUser size={34} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \">\n            {!isLoading ? (\n              <div>\n                <p className=\"card-heading\"> Open</p>\n                <p className=\"display-4\">{openHelpline}</p>\n              </div>\n            ) : (\n              <Loading />\n            )}\n            <div className=\"stat-icon-container\">\n              <FiCalendar size={34} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \">\n            {!isLoading  ? (\n              <div>\n                <p className=\"card-heading\"> Closed</p>\n                <p className=\"display-4\">{closedHelpline}</p>\n              </div>\n            ) : (\n              <Loading />\n            )}\n            <div className=\"stat-icon-container\">\n              <FiCalendar size={34} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \">\n            {true ? (\n              <div>\n                <p className=\"card-heading\"> Toatal Donation </p>\n                <p className=\"display-4\">1245</p>\n              </div>\n            ) : (\n              <Loading />\n            )}\n            <div className=\"stat-icon-container\">\n              <FiUsers size={34} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HelplineComponent;\n","import React, { ReactElement, useState } from 'react'\r\nimport { FiSearch } from 'react-icons/fi'\r\nimport Autosuggest from 'react-autosuggest';\r\n\r\nimport './Search.css'\r\nimport theme from \"./SearchTheme.module.css\"\r\ninterface Props {\r\n    handleChange: (c: string) => void\r\n}\r\ninterface CityProps {\r\n    name: string\r\n}\r\n\r\nexport default function Search({ handleChange }: Props): ReactElement {\r\n\r\n    const [suggestions, setSuggestion] = useState<CityProps[]>([])\r\n    const [value, setValue] = useState('')\r\n    const city = [\r\n        { name: 'Delhi NCR' },\r\n        { name: 'Agra' },\r\n        { name: 'Lucknow' },\r\n        { name: 'Jaipur' },\r\n        { name: 'Kolkata' },\r\n        { name: 'Ranchi' },\r\n        { name: 'Odisha' },\r\n        { name: 'Varanasi' },\r\n        { name: 'Pune' },\r\n        { name: 'Kanpur' },\r\n        { name: 'Consulting' }\r\n    ]\r\n    const getSuggestions = (value: string) => {\r\n        const inputValue = value.trim().toLowerCase();\r\n        const inputLength = inputValue.length;\r\n\r\n        return inputLength === 0 ? [] : city.filter(c =>\r\n            c.name.toLowerCase().slice(0, inputLength) === inputValue\r\n        );\r\n    };\r\n\r\n    const getSuggestionValue = suggestion => suggestion.name;\r\n\r\n    // Use your imagination to render suggestions.\r\n    const renderSuggestion = suggestion => (\r\n        <div className=\"suggestion\">\r\n            {suggestion.name}\r\n        </div>\r\n    );\r\n\r\n    const onSuggestionsFetchRequested = ({ value }) => {\r\n        setSuggestion(getSuggestions(value))\r\n    };\r\n\r\n    const onSuggestionsClearRequested = () => {\r\n        setSuggestion([])\r\n    }\r\n    const onChange = (event, { newValue }) => {\r\n        setValue(newValue)\r\n    };\r\n\r\n    const handleKeyDown = (e) => {\r\n        if(e.key === 'Enter') {\r\n            handleChange(e.target.value)\r\n        }\r\n    }\r\n\r\n    const inputProps = {\r\n        placeholder: 'Enter the city',\r\n        value,\r\n        onChange: onChange,\r\n        onKeyDown: handleKeyDown\r\n    };\r\n    return (\r\n        <div className=\"my-4 col-lg-6\">\r\n            <div className=\"d-flex container\">\r\n                <Autosuggest\r\n                    suggestions={suggestions}\r\n                    onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n                    onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n                    getSuggestionValue={getSuggestionValue}\r\n                    renderSuggestion={renderSuggestion}\r\n                    inputProps={inputProps}\r\n                    theme={theme}\r\n                />\r\n                \r\n                <div className=\"search-icon\" onClick={() => {\r\n                    console.log(value)\r\n                    handleChange(value)\r\n                }}>\r\n                    <FiSearch color=\"white\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport { Loading } from \"../../App\";\nimport { getTableStat } from \"../../services\";\nimport { TableStatsType } from \"../../Types\";\nimport \"./Table.css\";\n\ninterface Props {}\n\nexport default function StatTable({}: Props): ReactElement {\n  const [data, setData] = useState<TableStatsType[] | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const fetchData = async () => {\n    const d = await getTableStat();\n\n    if (d) {\n      setData(d);\n      setLoading(false);\n      console.log(d);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"called functin\");\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"container p-4\">\n      <div id=\"wrapper\">\n        <table id=\"keywords\" cellSpacing=\"0\" cellPadding=\"0\">\n          <thead>\n            <tr>\n              <th>\n                <span>City</span>\n              </th>\n              <th>\n                <span>Camps</span>\n              </th>\n              <th>\n                <span>Awareness</span>\n              </th>\n              <th>\n                <span>Helpline</span>\n              </th>\n              <th>\n                <span>Donations</span>\n              </th>\n              <th>\n                <span>Active Volunteer</span>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {!data ? (\n              <Loading loading={loading} />\n            ) : (\n              data.map(({city,camps,awareness,helpline,donations,activeVolunteer},index) => {\n                return (\n                  <tr key={index}>\n                    <td className=\"lalign\">{city}</td>\n                    <td>{camps}</td>\n                    <td>{awareness}</td>\n                    <td>{helpline}</td>\n                    <td>{donations}</td>\n                    <td>{activeVolunteer}</td>\n                  </tr>\n                );\n              })\n            )}\n            \n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\r\nimport { FiCalendar, FiUser, FiUsers } from \"react-icons/fi\";\r\nimport Lottie from \"react-lottie\";\r\nimport \"./App.css\";\r\nimport DonationCharts from \"./components/Chart/MonthlyDonation\";\r\nimport MonthlyEventChart from \"./components/Chart/MonthlyEventChart\";\r\nimport HelplineComponent from \"./components/Helpline\";\r\nimport Search from \"./components/Search/Search\";\r\nimport StatTable from \"./components/Table/StatTable\";\r\nimport { fetchCamps, fetchVolunteer } from \"./services/index\";\r\n\r\nconst App = () => {\r\n  let BASE_URL =\r\n    \"https://app.zohocreator.in/deepak64/bloodconnect-india-donor-system\";\r\n  if (\r\n    window.location.ancestorOrigins &&\r\n    window.location.ancestorOrigins[0] &&\r\n    !window.location.ancestorOrigins[0].includes(\"localhost\")\r\n  ) {\r\n    console.log(\"origin url is\", window.location.ancestorOrigins);\r\n    if (window.location.ancestorOrigins[0].includes(\"bloodconnect\"))\r\n      BASE_URL = window.location.ancestorOrigins[0];\r\n  }\r\n\r\n  const [city, setCity] = useState(\"All\");\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [aV, setAV] = useState(-1);\r\n  const [camps, setCamps] = useState(-1);\r\n  const [awareness, setAwareness] = useState(-1);\r\n  const [donations, setDonations] = useState(-1);\r\n\r\n  // Monthly Datas\r\n  // Donations data\r\n  // Camp data\r\n  const [monthlyCampData, setmonthlyCampData] = useState(Array(12).fill(0));\r\n  // Awareness data\r\n  const [monthlyAwarenessData, setmonthlyAwarenessData] = useState(\r\n    Array(12).fill(0)\r\n  );\r\n  const [aVUrl, setaVUrl] = useState(\r\n    `${BASE_URL}/#Report:BloodConnect_Team_Report?Status=Active`\r\n  );\r\n  const [campUrl, setcampUrl] = useState(\r\n    `${BASE_URL}/#Report:Camp_Awareness_Report?TypeOfEvent=Camp&Date_field_op=52`\r\n  );\r\n  const [awarenessUrl, setawarenessUrl] = useState(\r\n    `${BASE_URL}/#Report:Camp_Awareness_Report?TypeOfEvent=Awareness&Date_field_op=52`\r\n  );\r\n\r\n  const loadAV = async () => {\r\n    const av = await fetchVolunteer(city);\r\n    setAV(av);\r\n  };\r\n  const loadCamps = async () => {\r\n    const {\r\n      camps,\r\n      awareness,\r\n      monthCampData,\r\n      monthAwarnessData,\r\n      donations,\r\n    } = await fetchCamps(city);\r\n\r\n    setCamps(camps);\r\n    setAwareness(awareness);\r\n    setDonations(donations);\r\n    setmonthlyCampData(monthCampData);\r\n    setmonthlyAwarenessData(monthAwarnessData);\r\n  };\r\n\r\n  const loadAllData = () => {\r\n    loadAV().then(() => {\r\n      loadCamps().then(() => {\r\n        setLoading(false);\r\n      });\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    loadAllData();\r\n  }, [city]);\r\n\r\n  // useEffect(() => {\r\n  //     loadCityStat()\r\n  // }, [])\r\n  const setSearch = (c: string): void => {\r\n    if (c !== city) {\r\n      setLoading(true);\r\n      setCity(c);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (city !== \"All\") {\r\n      setaVUrl(\r\n        `${BASE_URL}/#Report:BloodConnect_Team_Report?Status=Active&BloodConnect_City=${city}`\r\n      );\r\n      setcampUrl(\r\n        `${BASE_URL}/#Report:Camp_Awareness_Report?TypeOfEvent=Camp&BloodConnect_City=${city}&Date_field_op=52`\r\n      );\r\n      setawarenessUrl(\r\n        `${BASE_URL}/#Report:Camp_Awareness_Report?TypeOfEvent=Awareness&BloodConnect_City=${city}&Date_field_op=52`\r\n      );\r\n    }\r\n  }, [BASE_URL, city]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row justify-content-between \">\r\n        <h4 className=\"stat col-lg-4 col-sm-12  mt-2 d-flex align-items-center justify-content-center\">\r\n          {city === \"All\" ? \"BloodConnect\" : city}\r\n        </h4>\r\n        <Search handleChange={setSearch} />\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-3\">\r\n          <div\r\n            className=\"stat-card \"\r\n            onClick={() => {\r\n              window.open(aVUrl, \"_blank\");\r\n            }}\r\n          >\r\n            {!isLoading ? (\r\n              <div>\r\n                <p className=\"card-heading\"> Active Volunteer</p>\r\n                <p className=\"display-4\">{aV}</p>\r\n              </div>\r\n            ) : (\r\n              <Loading loading={isLoading} />\r\n            )}\r\n            <div className=\"stat-icon-container\">\r\n              <FiUser size={34} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-3\">\r\n          <div\r\n            className=\"stat-card \"\r\n            onClick={() => {\r\n              window.open(campUrl, \"_blank\");\r\n            }}\r\n          >\r\n            {!isLoading ? (\r\n              <div>\r\n                <p className=\"card-heading\"> Camps</p>\r\n                <p className=\"display-4\">{camps}</p>\r\n              </div>\r\n            ) : (\r\n              <Loading loading={isLoading}/>\r\n            )}\r\n            <div className=\"stat-icon-container\">\r\n              <FiCalendar size={34} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-3\">\r\n          <div\r\n            className=\"stat-card \"\r\n            onClick={() => {\r\n              window.open(awarenessUrl, \"_blank\");\r\n            }}\r\n          >\r\n            {!isLoading ? (\r\n              <div>\r\n                <p className=\"card-heading\"> Awareness</p>\r\n                <p className=\"display-4\">{awareness}</p>\r\n              </div>\r\n            ) : (\r\n              <Loading loading={isLoading} />\r\n            )}\r\n            <div className=\"stat-icon-container\">\r\n              <FiCalendar size={34} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-3\">\r\n          <div className=\"stat-card \">\r\n            {!isLoading ? (\r\n              <div>\r\n                <p className=\"card-heading\"> Toatal Donation </p>\r\n                <p className=\"display-4\">{donations}</p>\r\n              </div>\r\n            ) : (\r\n              <Loading loading={isLoading} />\r\n            )}\r\n            <div className=\"stat-icon-container\">\r\n              <FiUsers size={34} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <HelplineComponent searchedCity={city} />\r\n      <StatTable />\r\n      <DonationCharts selectedCity={city} />\r\n      <MonthlyEventChart\r\n        camp={monthlyCampData}\r\n        awareness={monthlyAwarenessData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Loading = ({loading}) => {\r\n  return (\r\n    <div>\r\n      <Lottie\r\n        options={{\r\n          animationData: require(\"./assets/animation/dot.json\"),\r\n          loop: true,\r\n          autoplay: true,\r\n        }}\r\n        height={100}\r\n        width={100}\r\n        isStopped={!loading}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}