{"version":3,"sources":["components/Search/SearchTheme.module.css","components/Search/Search.tsx","services/index.ts","components/Chart/MonthlyEventChart.tsx","components/Helpline/index.tsx","components/Chart/MonthlyDonation.tsx","App.tsx","index.tsx"],"names":["module","exports","Search","handleChange","useState","suggestions","setSuggestion","value","setValue","city","name","inputProps","placeholder","onChange","event","newValue","onKeyDown","e","key","target","className","onSuggestionsFetchRequested","inputValue","trim","toLowerCase","inputLength","length","filter","c","slice","getSuggestions","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","theme","onClick","console","log","color","CREATOR","window","ZOHO","getVolunteer","page","criteria","config","reportName","toString","pageSize","API","getAllRecords","getEvent","getCity","getHelplines","fetchVolunteer","a","init","data","l","total","fetchCamps","monthCampData","Array","fill","monthAwarnessData","monthDonation","monthDetail","map","x","donations","camps","d","TypeOfEvent","awareness","totalCamps","totalAwareness","forEach","date","Date_field","split","mon","year","parseInt","Date","getFullYear","push","BloodConnect_City","fecthHelplines","res","ID","returnData","open","closed","Status","MonthlyEventChart","camp","month","count","label","campData","setCampData","awarenessData","setAwarenessData","useEffect","da","VictoryTheme","material","width","height","domainPadding","text","y","textAnchor","title","centerTitle","orientation","gutter","style","border","stroke","fontSize","symbol","type","tickValues","f","tickFormat","dependentAxis","offset","colorScale","animate","duration","onLoad","alignment","events","eventHandlers","mutation","props","index","url","HelplineComponent","searchedCity","setCity","isLoading","setLoading","helpline","setHelpline","openHelpline","setOpen","closedHelpline","setClosed","fetchData","s","Loading","options","animationData","require","loop","autoplay","isStopped","size","CampDonationChart","back","chartData","setData","d2","sorted","sort","b","labelComponent","barWidth","DonationCharts","selectedCity","monthStatShown","showMonthStat","monthStat","setMonthStat","currMonthStat","setCurrMonthStat","fetchYearData","from","id","input","document","getElementById","html2canvas","then","canvas","imgData","toDataURL","pdf","jsPDF","addImage","save","downloadChart","i","App","BASE_URL","location","ancestorOrigins","includes","aV","setAV","setCamps","setAwareness","setDonations","setmonthlyData","monthlyCampData","setmonthlyCampData","setMonthCampDetail","monthlyAwarenessData","setmonthlyAwarenessData","aVUrl","setaVUrl","campUrl","setcampUrl","awarenessUrl","setawarenessUrl","loadAV","av","loadCamps","Helpline","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1e447a1d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchTheme_container__1nyy1\",\"suggestionsContainer\":\"SearchTheme_suggestionsContainer__11igi\",\"suggestionsList\":\"SearchTheme_suggestionsList__2fUzU\",\"suggestion\":\"SearchTheme_suggestion__1AGtJ\"};","import React, { ReactElement, useState } from 'react'\r\nimport { FiSearch } from 'react-icons/fi'\r\nimport Autosuggest from 'react-autosuggest';\r\n\r\nimport './Search.css'\r\nimport theme from \"./SearchTheme.module.css\"\r\ninterface Props {\r\n    handleChange: (c: string) => void\r\n}\r\ninterface CityProps {\r\n    name: string\r\n}\r\n\r\nexport default function Search({ handleChange }: Props): ReactElement {\r\n\r\n    const [suggestions, setSuggestion] = useState<CityProps[]>([])\r\n    const [value, setValue] = useState('')\r\n    const city = [\r\n        { name: 'Delhi NCR' },\r\n        { name: 'Agra' },\r\n        { name: 'Lucknow' },\r\n        { name: 'Jaipur' },\r\n        { name: 'Kolkata' },\r\n        { name: 'Ranchi' },\r\n        { name: 'Odisha' },\r\n        { name: 'Varanasi' },\r\n        { name: 'Pune' },\r\n        { name: 'Kanpur' },\r\n        { name: 'Consulting' }\r\n    ]\r\n    const getSuggestions = (value: string) => {\r\n        const inputValue = value.trim().toLowerCase();\r\n        const inputLength = inputValue.length;\r\n\r\n        return inputLength === 0 ? [] : city.filter(c =>\r\n            c.name.toLowerCase().slice(0, inputLength) === inputValue\r\n        );\r\n    };\r\n\r\n    const getSuggestionValue = suggestion => suggestion.name;\r\n\r\n    // Use your imagination to render suggestions.\r\n    const renderSuggestion = suggestion => (\r\n        <div className=\"suggestion\">\r\n            {suggestion.name}\r\n        </div>\r\n    );\r\n\r\n    const onSuggestionsFetchRequested = ({ value }) => {\r\n        setSuggestion(getSuggestions(value))\r\n    };\r\n\r\n    const onSuggestionsClearRequested = () => {\r\n        setSuggestion([])\r\n    }\r\n    const onChange = (event, { newValue }) => {\r\n        setValue(newValue)\r\n    };\r\n\r\n    const handleKeyDown = (e) => {\r\n        if(e.key === 'Enter') {\r\n            handleChange(e.target.value)\r\n        }\r\n    }\r\n\r\n    const inputProps = {\r\n        placeholder: 'Enter the city',\r\n        value,\r\n        onChange: onChange,\r\n        onKeyDown: handleKeyDown\r\n    };\r\n    return (\r\n        <div className=\"my-4 col-lg-6\">\r\n            <div className=\"d-flex container\">\r\n                <Autosuggest\r\n                    suggestions={suggestions}\r\n                    onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n                    onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n                    getSuggestionValue={getSuggestionValue}\r\n                    renderSuggestion={renderSuggestion}\r\n                    inputProps={inputProps}\r\n                    theme={theme}\r\n                />\r\n                \r\n                <div className=\"search-icon\" onClick={() => {\r\n                    console.log(value)\r\n                    handleChange(value)\r\n                }}>\r\n                    <FiSearch color=\"white\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","declare global {\r\n  interface Window {\r\n    ZOHO: any;\r\n  }\r\n}\r\n\r\ninterface overall {\r\n  city: string;\r\n  donations: number;\r\n}\r\ninterface API<Data> {\r\n  code: number;\r\n  data: Data[];\r\n}\r\ninterface PostCamp {\r\n  Number_of_Donation: any;\r\n  Camp_Awareness: {\r\n    display_value: string;\r\n  };\r\n}\r\n\r\ninterface MonthData {\r\n    city: string;\r\n    date: string;\r\n    donations: number;\r\n}\r\n\r\nconst CREATOR = window.ZOHO.CREATOR;\r\n\r\nexport const get = () => {\r\n  CREATOR.init()\r\n    .then((d) => {\r\n      let config = {\r\n        reportName: \"BloodConnect_Team_Report\",\r\n        page: \"1\",\r\n        pageSize: \"200\",\r\n      };\r\n\r\n      //get all records API\r\n      CREATOR.API.getAllRecords(config).then(function (response) {\r\n        //callback block\r\n        console.log(response);\r\n      });\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });\r\n};\r\n\r\nconst getVolunteer = (page: number, city: string) => {\r\n  let criteria = '(Status==\"Active\")';\r\n  if (city !== \"All\") {\r\n    criteria = `(Status==\"Active\" && BloodConnect_City==\"${city}\")`;\r\n  }\r\n\r\n  let config = {\r\n    reportName: \"BloodConnect_Team_Report\",\r\n    criteria,\r\n    page: page.toString(),\r\n    pageSize: \"200\",\r\n  };\r\n  return CREATOR.API.getAllRecords(config);\r\n};\r\n\r\nconst getEvent = (page: number, city: string) => {\r\n  let criteria = \"\";\r\n  if (city !== \"All\") {\r\n    criteria = `(BloodConnect_City==\"${city}\")`;\r\n  }\r\n\r\n  let config = {\r\n    reportName: \"Camp_Awareness_Report\",\r\n    criteria,\r\n    page: page.toString(),\r\n    pageSize: \"200\",\r\n  };\r\n  return CREATOR.API.getAllRecords(config);\r\n};\r\n\r\nconst getCity = (city: string) => {\r\n  let config = {\r\n    reportName: \"Vlookup_Report\",\r\n    criteria: `City==\"${city}\"`,\r\n    page: 1,\r\n    pageSize: \"1\",\r\n  };\r\n  return CREATOR.API.getAllRecords(config);\r\n};\r\n\r\nconst getHelplines = (page: number, city: string) => {\r\n  let criteria = \"\";\r\n  if (city !== \"All\") {\r\n    criteria = `(City_Region==${city})`;\r\n  }\r\n\r\n  let config = {\r\n    reportName: \"Helpline_Report\",\r\n    criteria,\r\n    page: page.toString(),\r\n    pageSize: \"200\",\r\n  };\r\n  return CREATOR.API.getAllRecords(config);\r\n};\r\n\r\nconst getPostCamp = (page: number, city: string): Promise<API<PostCamp>> => {\r\n  let criteria = \"\";\r\n  if (city !== \"All\") {\r\n    criteria = `(BloodConnect_City==\"${city}\")`;\r\n  }\r\n  let config = {\r\n    reportName: \"Post_Camp_Form_Report\",\r\n    criteria: criteria,\r\n    page: page.toString(),\r\n    pageSize: \"200\",\r\n  };\r\n  return CREATOR.API.getAllRecords(config);\r\n  // return new Promise((resolve, reject) => {\r\n  //     let response = CREATOR.API.getAllRecords(config)\r\n  //     if (response)\r\n  //         resolve(response)\r\n  //     else\r\n  //         reject({ code: 500, data: []})\r\n  // })\r\n};\r\nexport const fetchVolunteer = async (city: string) => {\r\n  await CREATOR.init();\r\n  let page = 1;\r\n  let { data } = await getVolunteer(page++, city);\r\n  let l = data.length;\r\n  let total = l;\r\n  while (l === 200) {\r\n    let { data } = await getVolunteer(page++, city);\r\n    l = data.length;\r\n    total = total + l;\r\n  }\r\n  return total;\r\n};\r\n\r\nexport const fetchCamps = async (city: string) => {\r\n  await CREATOR.init()\r\n  let monthCampData = Array(12).fill(0);\r\n  let monthAwarnessData = Array(12).fill(0);\r\n  let monthDonation = Array(12).fill(0);\r\n  let monthDetail = Array(12)\r\n    .fill(0)\r\n    .map((x) => [{}]);\r\n  let donations = 0;\r\n  let page = 1;\r\n  let { data } = await getEvent(page++, city);\r\n  let l = data.length;\r\n  let camps = data.filter((d) => d.TypeOfEvent === \"Camp\");\r\n  let awareness = data.filter((d) => d.TypeOfEvent !== \"Camp\");\r\n  let totalCamps = 0;\r\n  let totalAwareness = 0;\r\n  camps.forEach((c) => {\r\n    let date = c.Date_field;\r\n    let [_, mon, year] = date.split(\"-\");\r\n    if (parseInt(year) === new Date().getFullYear()) {\r\n      monthCampData[parseInt(mon) - 1] = monthCampData[parseInt(mon) - 1] + 1;\r\n      if (c[\"Post_Camp_ID.Number_of_Donation\"]) {\r\n        monthDonation[parseInt(mon) - 1] =\r\n          monthDonation[parseInt(mon) - 1] +\r\n          parseInt(c[\"Post_Camp_ID.Number_of_Donation\"]);\r\n        donations = donations + parseInt(c[\"Post_Camp_ID.Number_of_Donation\"]);\r\n      }\r\n      monthDetail[parseInt(mon) - 1].push({\r\n        city: c.BloodConnect_City,\r\n        date,\r\n        donations: c[\"Post_Camp_ID.Number_of_Donation\"]\r\n          ? c[\"Post_Camp_ID.Number_of_Donation\"]\r\n          : 0,\r\n      });\r\n      totalCamps++;\r\n    }\r\n  });\r\n  awareness.forEach((c) => {\r\n    let date = c.Date_field;\r\n    let [_, mon, year] = date.split(\"-\");\r\n    if (parseInt(year) === new Date().getFullYear()) {\r\n      monthAwarnessData[parseInt(mon) - 1] =\r\n        monthAwarnessData[parseInt(mon) - 1] + 1;\r\n      totalAwareness++;\r\n    }\r\n  });\r\n\r\n  console.log(totalCamps, totalAwareness);\r\n  return {\r\n    camps: totalCamps,\r\n    awareness: totalAwareness,\r\n    monthCampData,\r\n    monthAwarnessData,\r\n    monthDonation,\r\n    monthDetail,\r\n    donations,\r\n  };\r\n};\r\n\r\nexport const fetchPostCamp = async (city: string) => {\r\n  let monthData = Array(12).fill(0);\r\n  let donation = 0;\r\n  let d = await getPostCamp(0, city).then(\r\n    (res) => {\r\n      res.data.forEach((postCamp) => {\r\n        let date = postCamp.Camp_Awareness.display_value.split(\"_\").pop();\r\n        if (!date) return;\r\n        let [_, mon, year] = date.split(\"-\");\r\n        if (parseInt(year) === new Date().getFullYear()) {\r\n          monthData[parseInt(mon) - 1] =\r\n            monthData[parseInt(mon) - 1] +\r\n            parseInt(postCamp.Number_of_Donation);\r\n          donation = donation + parseInt(postCamp.Number_of_Donation);\r\n        }\r\n      });\r\n    },\r\n    (error) => {\r\n      console.log(\"error\", error, city);\r\n      donation = 0;\r\n    }\r\n  );\r\n\r\n  return { totalDonation: donation, monthData };\r\n};\r\n\r\nexport const fecthHelplines = async (city: string) => {\r\n  await CREATOR.init();\r\n  if (city !== \"All\") {\r\n    let res = await getCity(city);\r\n    city = res.data[0].ID;\r\n  }\r\n  let page = 1;\r\n  let returnData = {\r\n    open: 0,\r\n    closed: 0,\r\n  };\r\n  let { data }: { data: any[] } = await getHelplines(page++, city);\r\n  console.log(data);\r\n  let l = data.length;\r\n  returnData.open += data.filter((d) => d.Status === \"Open\").length;\r\n  returnData.closed += data.filter((d) => d.Status === \"Closed\").length;\r\n  let total = l;\r\n  while (l === 200) {\r\n    let { data } = await getHelplines(page++, city);\r\n    returnData.open += data.filter((d) => d.Status === \"Open\").length;\r\n    returnData.closed += data.filter((d) => d.Status === \"Closed\").length;\r\n    l = data.length;\r\n    total += l;\r\n  }\r\n  return {\r\n    ...returnData,\r\n    total: total,\r\n  };\r\n};\r\n","import React, { useEffect, useState, ReactElement } from 'react'\r\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryLabel, VictoryGroup, VictoryLegend } from 'victory'\r\nimport './Chart.css'\r\n\r\ninterface Props {\r\n    camp?: number[];\r\n    awareness?: number[]\r\n}\r\ninterface dataProps {\r\n    month: number;\r\n    donations: number;\r\n    label: number;\r\n    url: string\r\n}\r\n\r\ninterface GraphData {\r\n    month: number;\r\n    count: number;\r\n    label: number;\r\n}\r\n\r\nexport default function MonthlyEventChart({ camp, awareness }: Props): ReactElement {\r\n    const initial_data = [\r\n        { month: 1, count: 0, label: 0 },\r\n        { month: 2, count: 0, label: 0 },\r\n        { month: 3, count: 0, label: 0 },\r\n        { month: 4, count: 0, label: 0 },\r\n        { month: 5, count: 0, label: 0 },\r\n        { month: 6, count: 0, label: 0 },\r\n        { month: 7, count: 0, label: 0 },\r\n        { month: 8, count: 0, label: 0 },\r\n        { month: 9, count: 0, label: 0 },\r\n        { month: 10, count: 0, label: 0 },\r\n        { month: 11, count: 0, label: 0 },\r\n        { month: 12, count: 0, label: 0 },\r\n    ];\r\n    const initial_data1 = [\r\n        { month: 1, count: 0, label: 0 },\r\n        { month: 2, count: 0, label: 0 },\r\n        { month: 3, count: 0, label: 0 },\r\n        { month: 4, count: 0, label: 0 },\r\n        { month: 5, count: 0, label: 0 },\r\n        { month: 6, count: 0, label: 0 },\r\n        { month: 7, count: 0, label: 0 },\r\n        { month: 8, count: 0, label: 0 },\r\n        { month: 9, count: 0, label: 0 },\r\n        { month: 10, count: 0, label: 0 },\r\n        { month: 11, count: 0, label: 0 },\r\n        { month: 12, count: 0, label: 0 },\r\n    ];\r\n\r\n    const [campData, setCampData] = useState<GraphData[]>(initial_data)\r\n    const [awarenessData, setAwarenessData] = useState<GraphData[]>(initial_data1)\r\n    useEffect(() => {\r\n        if (camp) {\r\n            setCampData((d: GraphData[]) => {\r\n                return d.map(da => {\r\n                    da.count = camp[da.month - 1]\r\n                    da.label = camp[da.month - 1]\r\n                    return da\r\n                })\r\n            })\r\n        }\r\n    }, [camp])\r\n\r\n    useEffect(() => {\r\n        if (awareness) {\r\n            setAwarenessData((d: GraphData[]) => {\r\n                return d.map(da => {\r\n                    da.count = awareness[da.month - 1]\r\n                    da.label = awareness[da.month - 1]\r\n                    return da\r\n                })\r\n            })\r\n        }\r\n    }, [awareness])\r\n    return (\r\n        <div className=\"container chart-container my-4\">\r\n            <VictoryChart\r\n                theme={VictoryTheme.material}\r\n                width={800}\r\n                height={400}\r\n                domainPadding={100}\r\n            >\r\n\r\n                <VictoryLabel text=\"Monthly Report\" x={225} y={30} textAnchor=\"middle\" />\r\n                <VictoryLegend x={125} y={50}\r\n                    title=\"Legend\"\r\n                    centerTitle\r\n                    orientation=\"horizontal\"\r\n                    gutter={20}\r\n                    style={{ border: { stroke: \"black\" }, title: { fontSize: 20 } }}\r\n                    data={[\r\n                        { name: \"Camp\", symbol: { fill: \"blue\", type:\"rectangle\" } },\r\n                        { name: \"Awareness\", symbol: { fill: \"cyan\" } }\r\n                    ]}\r\n                />\r\n                <VictoryAxis\r\n\r\n                    tickValues={campData.map(f => f.month)}\r\n                    tickFormat={['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']}\r\n                />\r\n                <VictoryAxis\r\n                    dependentAxis\r\n\r\n                    tickFormat={x => x}\r\n                />\r\n                <VictoryGroup\r\n                    offset={20}\r\n                    colorScale={'qualitative'}\r\n                    animate={{\r\n                        duration: 2000,\r\n                        onLoad: { duration: 1000 }\r\n                    }}\r\n                >\r\n                    <VictoryBar\r\n                        data={campData}\r\n                        x=\"month\"\r\n                        y=\"count\"\r\n                        alignment='middle'\r\n                        events={[{\r\n                            target: \"data\",\r\n                            eventHandlers: {\r\n                                onClick: () => {\r\n                                    return [{\r\n                                        target: \"data\",\r\n                                        mutation: (props) => {\r\n                                            console.log(props.data[props.index].url)\r\n                                            return true\r\n                                        }\r\n                                    }];\r\n                                }\r\n                            }\r\n                        }]}\r\n                    />\r\n                    <VictoryBar\r\n                        data={awarenessData}\r\n                        x=\"month\"\r\n                        y=\"count\"\r\n                        alignment='middle'\r\n                        events={[{\r\n                            target: \"data\",\r\n                            eventHandlers: {\r\n                                onClick: () => {\r\n                                    return [{\r\n                                        target: \"data\",\r\n                                        mutation: (props) => {\r\n                                            console.log(props.data[props.index].url)\r\n                                            return true\r\n                                        }\r\n                                    }];\r\n                                }\r\n                            }\r\n                        }]}\r\n                    />\r\n                </VictoryGroup>\r\n            </VictoryChart>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\nimport { FiUser, FiCalendar, FiUsers } from \"react-icons/fi\";\nimport Lottie from \"react-lottie\";\nimport { fecthHelplines } from \"../../services\";\n\ninterface Props {\n  searchedCity: string;\n}\n\nconst HelplineComponent = ({ searchedCity }: Props) => {\n  const [city, setCity] = useState<string>(\"All\");\n  const [isLoading, setLoading] = useState<boolean>(true);\n  const [helpline, setHelpline] = useState(0);\n  const [openHelpline, setOpen] = useState(0);\n  const [closedHelpline, setClosed] = useState(0);\n\n  // function to fecth helpline stats\n  const fetchData = async () => {\n    const { total, open, closed } = await fecthHelplines(city);\n    console.log(\"Fetched helpline data\");\n    setHelpline((s) => total);\n    setClosed((s) => closed);\n    setOpen((s) => open);\n    setLoading(false);\n    console.log(total, open, closed);\n  };\n\n  // changing city only if new city is selected\n  useEffect(() => {\n    console.log(\"City changed\", searchedCity);\n    if (searchedCity !== city) setCity(searchedCity);\n  }, [searchedCity]);\n\n  useEffect(() => {\n    setLoading(true)\n    fetchData();\n  }, [city]);\n\n \n\n  const Loading = () => {\n    return (\n      <div>\n        <Lottie\n          options={{\n            animationData: require(\"../../assets/animation/dot.json\"),\n            loop: true,\n            autoplay: true,\n          }}\n          height={100}\n          width={100}\n          isStopped={!isLoading}\n        />\n      </div>\n    );\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \">\n            {!isLoading  ? (\n              <div>\n                <p className=\"card-heading\"> Total Requests</p>\n                <p className=\"display-4\">{helpline}</p>\n              </div>\n            ) : (\n              <Loading />\n            )}\n            <div className=\"stat-icon-container\">\n              <FiUser size={34} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \">\n            {!isLoading ? (\n              <div>\n                <p className=\"card-heading\"> Open</p>\n                <p className=\"display-4\">{openHelpline}</p>\n              </div>\n            ) : (\n              <Loading />\n            )}\n            <div className=\"stat-icon-container\">\n              <FiCalendar size={34} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \">\n            {!isLoading  ? (\n              <div>\n                <p className=\"card-heading\"> Closed</p>\n                <p className=\"display-4\">{closedHelpline}</p>\n              </div>\n            ) : (\n              <Loading />\n            )}\n            <div className=\"stat-icon-container\">\n              <FiCalendar size={34} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \">\n            {true ? (\n              <div>\n                <p className=\"card-heading\"> Toatal Donation </p>\n                <p className=\"display-4\">1245</p>\n              </div>\n            ) : (\n              <Loading />\n            )}\n            <div className=\"stat-icon-container\">\n              <FiUsers size={34} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HelplineComponent;\n","import React, { ReactElement, useEffect, useState } from \"react\";\r\nimport {\r\n  VictoryBar,\r\n  VictoryChart,\r\n  VictoryAxis,\r\n  VictoryTheme,\r\n  VictoryLabel,\r\n  VictoryTooltip,\r\n} from \"victory\";\r\nimport html2canvas from \"html2canvas\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport \"./Chart.css\";\r\nimport { fetchCamps } from \"../../services\";\r\nimport { FiArrowLeft } from \"react-icons/fi\";\r\n\r\ninterface Props {\r\n  selectedCity: string;\r\n}\r\n\r\ninterface dataProps {\r\n  month: number;\r\n  donations: number;\r\n  label: string;\r\n}\r\n\r\ninterface MonthData {\r\n  city: string;\r\n  date: string;\r\n  donations: number;\r\n}\r\n\r\nconst DonationCharts = ({ selectedCity }: Props) => {\r\n  // for year data  like jan, feb, mar\r\n  const initial_data = [\r\n    { month: 1, donations: 0, label: \"0\" },\r\n    { month: 2, donations: 0, label: \"0\" },\r\n    { month: 3, donations: 0, label: \"0\" },\r\n    { month: 4, donations: 0, label: \"0\" },\r\n    { month: 5, donations: 0, label: \"0\" },\r\n    { month: 6, donations: 0, label: \"0\" },\r\n    { month: 7, donations: 0, label: \"0\" },\r\n    { month: 8, donations: 0, label: \"0\" },\r\n    { month: 9, donations: 0, label: \"0\" },\r\n    { month: 10, donations: 0, label: \"0\" },\r\n    { month: 11, donations: 0, label: \"0\" },\r\n    { month: 12, donations: 0, label: \"0\" },\r\n  ];\r\n\r\n  const initial_month_data = [];\r\n\r\n  const [chartData, setData] = useState<dataProps[]>(initial_data);\r\n  const [city, setCity] = useState<string>(selectedCity);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [monthStatShown, showMonthStat] = useState<boolean>(false);\r\n\r\n  // month details\r\n  const [monthStat, setMonthStat] = useState<any>();\r\n  const [currMonthStat, setCurrMonthStat] = useState<MonthData[]>();\r\n\r\n  const downloadChart = () => {\r\n    const input = document.getElementById(\"chart\");\r\n\r\n    html2canvas(input!).then((canvas) => {\r\n      const imgData = canvas.toDataURL(\"image/png\");\r\n      const pdf = new jsPDF();\r\n      pdf.addImage(imgData, \"JPEG\", 0, 0, 100, 200);\r\n      // pdf.output('dataurlnewwindow');\r\n      pdf.save(\"download.pdf\");\r\n    });\r\n  };\r\n\r\n  const fetchYearData = async () => {\r\n    const { monthDonation, monthDetail } = await fetchCamps(city);\r\n    setData((data) => {\r\n      const newData = Array.from(data);\r\n      return newData.map((d) => {\r\n        d.donations = monthDonation[d.month - 1];\r\n        d.label = monthDonation[d.month - 1] + \" \";\r\n        return d;\r\n      });\r\n    });\r\n    console.log(monthDetail)\r\n    setMonthStat(monthDetail);\r\n  };\r\n\r\n  const handleClick = (i: number) => {\r\n    if (monthStat && monthStat[i]) setCurrMonthStat(monthStat[i]);\r\n    showMonthStat(true)\r\n    console.log('current month stat is ',i,currMonthStat)\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedCity !== city) setCity(selectedCity);\r\n  }, [selectedCity]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchYearData();\r\n  }, [city]);\r\n\r\n  return (\r\n    <>\r\n      {!monthStatShown ? (\r\n        <div id=\"chart\" className=\"container chart-container my-4\">\r\n          <button className=\"mx-2\" onClick={() => downloadChart()}>\r\n            Download Chart\r\n          </button>\r\n          <VictoryChart\r\n            theme={VictoryTheme.material}\r\n            width={800}\r\n            height={400}\r\n            domainPadding={100}\r\n            animate={{\r\n              duration: 2000,\r\n              onLoad: { duration: 1000 },\r\n            }}\r\n          >\r\n            <VictoryLabel\r\n              text=\"Monthly Report\"\r\n              x={225}\r\n              y={30}\r\n              textAnchor=\"middle\"\r\n            />\r\n            <VictoryAxis\r\n              tickValues={chartData.map((f) => f.month)}\r\n              tickFormat={[\r\n                \"Jan\",\r\n                \"Feb\",\r\n                \"Mar\",\r\n                \"Apr\",\r\n                \"May\",\r\n                \"June\",\r\n                \"July\",\r\n                \"Aug\",\r\n                \"Sep\",\r\n                \"Oct\",\r\n                \"Nov\",\r\n                \"Dec\",\r\n              ]}\r\n            />\r\n            <VictoryAxis dependentAxis tickFormat={(x) => x} />\r\n            <VictoryBar\r\n              data={chartData}\r\n              x=\"month\"\r\n              y=\"donations\"\r\n              alignment=\"middle\"\r\n              events={[\r\n                {\r\n                  target: \"data\",\r\n                  eventHandlers: {\r\n                    onClick: () => {\r\n                      return [\r\n                        {\r\n                          target: \"data\",\r\n                          mutation: (props) => {\r\n                            console.log(props.index);\r\n                            handleClick(props.data[props.index].month - 1);\r\n                            return true;\r\n                          },\r\n                        },\r\n                      ];\r\n                    },\r\n                  },\r\n                },\r\n              ]}\r\n            />\r\n          </VictoryChart>\r\n        </div>\r\n      ) : (\r\n        <CampDonationChart\r\n          back={() => {\r\n              console.log(\"back pressed\")\r\n            showMonthStat(false);\r\n          }}\r\n          data={currMonthStat}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst CampDonationChart = ({ back, data }): ReactElement => {\r\n  const initial_data: Array<MonthData & { x: string; label: string }> = [\r\n    { city: \"Agra\", date: \"10-07-2020\", x: \"12\", donations: 20, label: \"20\" },\r\n    { city: \"Agra\", date: \"11-07-2020\", x: \"22\", donations: 20, label: \"20\" },\r\n    { city: \"Agra\", date: \"12-07-2020\", x: \"34\", donations: 20, label: \"20\" },\r\n  ];\r\n  const [chartData, setData] = useState<\r\n    Array<MonthData & { x: string; label: string }>\r\n  >(initial_data);\r\nuseEffect(() => {\r\n  if (data) {\r\n    let d2 = data.filter((d) => d.date != null && d.date.length > 0);\r\n    console.log(\"after update\", d2);\r\n    let d = d2.map((da) => {\r\n      return {\r\n        city: da.city,\r\n        date: da.date.split(\"-\")[0],\r\n        donations: parseInt(da.donations.toString()),\r\n        label: da.donations + ` donations on ${da.date} `,\r\n        x: da.date.split(\"-\")[0] + `(${da.city})`,\r\n      };\r\n    });\r\n    console.log(d);\r\n    let sorted = d.sort((a, b) => parseInt(a.date) - parseInt(b.date));\r\n    console.log(\"sorted data\", sorted);\r\n    setData(d);\r\n  }\r\n},[data])\r\n\r\n  return (\r\n    <div className=\"container chart-container my-4\">\r\n      <FiArrowLeft size={24} onClick={back} />\r\n      <VictoryChart\r\n        theme={VictoryTheme.material}\r\n        width={800}\r\n        height={400}\r\n        domainPadding={100}\r\n      >\r\n        <VictoryLabel\r\n          text=\"Monthly Report\"\r\n          x={225}\r\n          y={30}\r\n          textAnchor=\"middle\"\r\n        />\r\n\r\n        <VictoryAxis\r\n          tickValues={chartData.map((f) => f.x)}\r\n          //tickFormat={['Jan','Feb','Mar','Apr','May','June','July','Aug','Sep','Oct','Nov','Dec']}\r\n        />\r\n        <VictoryAxis dependentAxis tickFormat={(x) => x} />\r\n        <VictoryBar\r\n          data={chartData}\r\n          labelComponent={<VictoryTooltip />}\r\n          x=\"x\"\r\n          y=\"donations\"\r\n          alignment=\"middle\"\r\n          barWidth={24}\r\n          events={[\r\n            {\r\n              target: \"data\",\r\n              eventHandlers: {\r\n                onClick: () => {\r\n                  return [\r\n                    {\r\n                      target: \"data\",\r\n                      mutation: (props) => {\r\n                        console.log(props.data[props.index].url);\r\n                        return true;\r\n                      },\r\n                    },\r\n                  ];\r\n                },\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n      </VictoryChart>\r\n    </div>\r\n  );\r\n};\r\nexport default DonationCharts;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FiUser, FiCalendar, FiUsers } from \"react-icons/fi\";\r\nimport \"./App.css\";\r\nimport Search from \"./components/Search/Search\";\r\n//import { useQuery } from '@apollo/client';\r\n//import { STATS_QUERY, ALL_STAT } from './query';\r\nimport { fetchVolunteer, fetchCamps, fecthHelplines } from \"./services/index\";\r\nimport Lottie from \"react-lottie\";\r\nimport MonthlyChart from \"./components/Chart/MonthlyChart\";\r\n// import { OverallStat } from './components/schema';\r\nimport MonthlyEventChart from \"./components/Chart/MonthlyEventChart\";\r\nimport CampDonationChart from \"./components/Chart/CampDonationChart\";\r\nimport HelplineComponent from \"./components/Helpline\";\r\nimport DonationCharts from \"./components/Chart/MonthlyDonation\";\r\n\r\ninterface Citystat {\r\n  [key: string]: number;\r\n}\r\ninterface MonthStat {\r\n  city: string;\r\n  donations: number;\r\n  label: string;\r\n  date: string;\r\n}\r\nconst App = () => {\r\n  let BASE_URL =\r\n    \"https://app.zohocreator.in/deepak64/bloodconnect-india-donor-system\";\r\n  if (\r\n    window.location.ancestorOrigins &&\r\n    !window.location.ancestorOrigins[0].includes(\"localhost\")\r\n  ) {\r\n    console.log('origin url is',window.location.ancestorOrigins);\r\n    if(window.location.ancestorOrigins[0].includes(\"bloodconnect\"))\r\n      BASE_URL = window.location.ancestorOrigins[0];\r\n  }\r\n\r\n  const [city, setCity] = useState(\"All\");\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [isMonthStat, showMonthStat] = useState(false);\r\n  const [monthStat, setMonthStat] = useState<MonthStat[]>([]);\r\n  const [aV, setAV] = useState(-1);\r\n  const [camps, setCamps] = useState(-1);\r\n  const [awareness, setAwareness] = useState(-1);\r\n  const [donations, setDonations] = useState(-1);\r\n\r\n  // Monthly Datas\r\n  // Donations data\r\n  const [monthlyData, setmonthlyData] = useState(Array(12).fill(0));\r\n  // Camp data\r\n  const [monthlyCampData, setmonthlyCampData] = useState(Array(12).fill(0));\r\n  const [monthCampDetail, setMonthCampDetail] = useState<any>();\r\n  // Awareness data\r\n  const [monthlyAwarenessData, setmonthlyAwarenessData] = useState(\r\n    Array(12).fill(0)\r\n  );\r\n  const [aVUrl, setaVUrl] = useState(\r\n    `${BASE_URL}/#Report:BloodConnect_Team_Report?Status=Active`\r\n  );\r\n  const [campUrl, setcampUrl] = useState(\r\n    `${BASE_URL}/#Report:Camp_Awareness_Report?TypeOfEvent=Camp&Date_field_op=52`\r\n  );\r\n  const [awarenessUrl, setawarenessUrl] = useState(\r\n    `${BASE_URL}/#Report:Camp_Awareness_Report?TypeOfEvent=Awareness&Date_field_op=52`\r\n  );\r\n\r\n  const loadAV = async () => {\r\n    const av = await fetchVolunteer(city);\r\n    setAV(av);\r\n  };\r\n  const loadCamps = async () => {\r\n    const {\r\n      camps,\r\n      awareness,\r\n      monthCampData,\r\n      monthAwarnessData,\r\n      donations,\r\n      monthDetail,\r\n      monthDonation,\r\n    } = await fetchCamps(city);\r\n\r\n    setMonthCampDetail(monthDetail);\r\n    setCamps(camps);\r\n    setAwareness(awareness);\r\n    setDonations(donations);\r\n    setmonthlyCampData(monthCampData);\r\n    setmonthlyAwarenessData(monthAwarnessData);\r\n    setmonthlyData(monthDonation);\r\n    \r\n  };\r\n\r\n  const loadAllData = () => {\r\n    loadAV().then(() => {\r\n      loadCamps().then(() => {\r\n        setLoading(false);\r\n      });\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    loadAllData();\r\n  }, [city]);\r\n\r\n  // useEffect(() => {\r\n  //     loadCityStat()\r\n  // }, [])\r\n  const setSearch = (c: string): void => {\r\n    if (c !== city) {\r\n      setLoading(true);\r\n      setCity(c);\r\n    }\r\n  };\r\n\r\n  const setMonth = (i: number): void => {\r\n    if (monthCampDetail && monthCampDetail[i]) setMonthStat(monthCampDetail[i]);\r\n    else\r\n      setMonthCampDetail([{ city: \"null\", date: \"12-07-2012\", donations: 20 }]);\r\n    showMonthStat(true);\r\n  };\r\n\r\n  const hideMonthStat = (): void => {\r\n    showMonthStat(false);\r\n  };\r\n  useEffect(() => {\r\n    if (city !== \"All\") {\r\n      setaVUrl(\r\n        `${BASE_URL}/#Report:BloodConnect_Team_Report?Status=Active&BloodConnect_City=${city}`\r\n      );\r\n      setcampUrl(\r\n        `${BASE_URL}/#Report:Camp_Awareness_Report?TypeOfEvent=Camp&BloodConnect_City=${city}&Date_field_op=52`\r\n      );\r\n      setawarenessUrl(\r\n        `${BASE_URL}/#Report:Camp_Awareness_Report?TypeOfEvent=Awareness&BloodConnect_City=${city}&Date_field_op=52`\r\n      );\r\n    }\r\n  }, [BASE_URL, city]);\r\n\r\n  const Loading = () => {\r\n    return (\r\n      <div>\r\n        <Lottie\r\n          options={{\r\n            animationData: require(\"./assets/animation/dot.json\"),\r\n            loop: true,\r\n            autoplay: true,\r\n          }}\r\n          height={100}\r\n          width={100}\r\n          isStopped={!isLoading}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row justify-content-between \">\r\n        <h4 className=\"stat col-lg-4 col-sm-12  mt-2 d-flex align-items-center justify-content-center\">\r\n          {city === \"All\" ? \"BloodConnect\" : city}\r\n        </h4>\r\n        <Search handleChange={setSearch} />\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-3\">\r\n          <div\r\n            className=\"stat-card \"\r\n            onClick={() => {\r\n              window.open(aVUrl, \"_blank\");\r\n            }}\r\n          >\r\n            {!isLoading ? (\r\n              <div>\r\n                <p className=\"card-heading\"> Active Volunteer</p>\r\n                <p className=\"display-4\">{aV}</p>\r\n              </div>\r\n            ) : (\r\n              <Loading />\r\n            )}\r\n            <div className=\"stat-icon-container\">\r\n              <FiUser size={34} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-3\">\r\n          <div\r\n            className=\"stat-card \"\r\n            onClick={() => {\r\n              window.open(campUrl, \"_blank\");\r\n            }}\r\n          >\r\n            {!isLoading ? (\r\n              <div>\r\n                <p className=\"card-heading\"> Camps</p>\r\n                <p className=\"display-4\">{camps}</p>\r\n              </div>\r\n            ) : (\r\n              <Loading />\r\n            )}\r\n            <div className=\"stat-icon-container\">\r\n              <FiCalendar size={34} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-3\">\r\n          <div\r\n            className=\"stat-card \"\r\n            onClick={() => {\r\n              window.open(awarenessUrl, \"_blank\");\r\n            }}\r\n          >\r\n            {!isLoading ? (\r\n              <div>\r\n                <p className=\"card-heading\"> Awareness</p>\r\n                <p className=\"display-4\">{awareness}</p>\r\n              </div>\r\n            ) : (\r\n              <Loading />\r\n            )}\r\n            <div className=\"stat-icon-container\">\r\n              <FiCalendar size={34} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-3\">\r\n          <div className=\"stat-card \">\r\n            {!isLoading ? (\r\n              <div>\r\n                <p className=\"card-heading\"> Toatal Donation </p>\r\n                <p className=\"display-4\">{donations}</p>\r\n              </div>\r\n            ) : (\r\n              <Loading />\r\n            )}\r\n            <div className=\"stat-icon-container\">\r\n              <FiUsers size={34} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <HelplineComponent searchedCity={city} />\r\n      <DonationCharts selectedCity={city} />\r\n      {/* {isMonthStat ? (\r\n        <CampDonationChart\r\n          data={monthStat}\r\n          loading={isMonthStat}\r\n          back={hideMonthStat}\r\n        />\r\n      ) : (\r\n        <MonthlyChart\r\n          data={monthlyData}\r\n          loading={isLoading}\r\n          handleClick={setMonth}\r\n        />\r\n      )} */}\r\n      <MonthlyEventChart\r\n        camp={monthlyCampData}\r\n        awareness={monthlyAwarenessData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"https://bc-apiv2.herokuapp.com/graphql\",\r\n  cache: new InMemoryCache()\r\n})\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}