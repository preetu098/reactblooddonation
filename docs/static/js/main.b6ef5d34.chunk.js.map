{"version":3,"sources":["components/Search/SearchTheme.module.css","components/Search/Search.tsx","components/Chart/CityChart.tsx","query/index.tsx","services/index.ts","components/Chart/MonthlyChart.tsx","components/Chart/MonthlyEventChart.tsx","App.tsx","index.tsx"],"names":["module","exports","Search","handleChange","useState","suggestions","setSuggestion","value","setValue","city","name","inputProps","placeholder","onChange","event","newValue","className","onSuggestionsFetchRequested","inputValue","trim","toLowerCase","inputLength","length","filter","c","slice","getSuggestions","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","theme","onClick","console","log","color","CityChart","data","setSearch","domainPadding","VictoryTheme","material","width","height","containerComponent","allowZoom","text","x","y","textAnchor","tickValues","map","f","tickFormat","dependentAxis","events","target","eventHandlers","mutation","props","index","gql","ALL_STAT","CREATOR","window","ZOHO","getVolunteer","from","criteria","config","reportName","page","toString","pageSize","API","getAllRecords","fetchVolunteer","a","init","l","total","MonthlyChart","loading","month","donations","label","url","chartData","setData","useEffect","d","da","animate","duration","onLoad","alignment","MonthlyEventChart","camp","awareness","count","campData","setCampData","awarenessData","setAwarenessData","title","centerTitle","orientation","gutter","style","border","stroke","fontSize","symbol","fill","type","offset","colorScale","App","BASE_URL","location","href","includes","origin","pathname","citiesData","setCity","cd","useQuery","isLoading","setLoading","aV","setAV","camps","Array","monthlyData","monthlyCampData","monthlyAwarenessData","aVUrl","setaVUrl","setVolunteerData","av","Loading","options","animationData","require","loop","autoplay","isStopped","open","size","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6ef5d34.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchTheme_container__1nyy1\",\"suggestionsContainer\":\"SearchTheme_suggestionsContainer__11igi\",\"suggestionsList\":\"SearchTheme_suggestionsList__2fUzU\",\"suggestion\":\"SearchTheme_suggestion__1AGtJ\"};","import React, { ReactElement, useState } from 'react'\nimport { FiSearch } from 'react-icons/fi'\nimport Autosuggest from 'react-autosuggest';\n\nimport './Search.css'\nimport theme from \"./SearchTheme.module.css\"\ninterface Props {\n    handleChange: (c: string) => void\n}\ninterface CityProps {\n    name: string\n}\n\nexport default function Search({ handleChange }: Props): ReactElement {\n\n    const [suggestions, setSuggestion] = useState<CityProps[]>([])\n    const [value, setValue] = useState('')\n    const city = [\n        { name: 'Delhi NCR' },\n        { name: 'Agra' },\n        { name: 'Lucknow' },\n        { name: 'Jaipur' },\n        { name: 'Kolkata' },\n        { name: 'Ranchi' },\n        { name: 'Odisha' },\n        { name: 'Varanasi' },\n        { name: 'Pune' },\n        { name: 'Kanpur' },\n        { name: 'Consulting' }\n    ]\n    const getSuggestions = (value: string) => {\n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n\n        return inputLength === 0 ? [] : city.filter(c =>\n            c.name.toLowerCase().slice(0, inputLength) === inputValue\n        );\n    };\n\n    const getSuggestionValue = suggestion => suggestion.name;\n\n    // Use your imagination to render suggestions.\n    const renderSuggestion = suggestion => (\n        <div className=\"suggestion\">\n            {suggestion.name}\n        </div>\n    );\n\n    const onSuggestionsFetchRequested = ({ value }) => {\n        setSuggestion(getSuggestions(value))\n    };\n\n    const onSuggestionsClearRequested = () => {\n        setSuggestion([])\n    }\n    const onChange = (event, { newValue }) => {\n        setValue(newValue)\n    };\n\n    const inputProps = {\n        placeholder: 'Enter the city',\n        value,\n        onChange: onChange\n    };\n    return (\n        <div className=\"my-4 col-lg-6\">\n            <div className=\"d-flex container\">\n                <Autosuggest\n                    suggestions={suggestions}\n                    onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={onSuggestionsClearRequested}\n                    getSuggestionValue={getSuggestionValue}\n                    renderSuggestion={renderSuggestion}\n                    inputProps={inputProps}\n                    theme={theme}\n                />\n                <div className=\"search-icon\" onClick={() => {\n                    console.log(value)\n                    handleChange(value)\n                }}>\n                    <FiSearch color=\"white\" />\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryLabel, VictoryZoomContainer } from 'victory'\nimport './Chart.css'\n\ninterface DataItem {\n    city: string,\n    donations: number,\n    label: number\n}\ninterface Props {\n    data: DataItem[],\n    setSearch: (c: string) => void\n}\n\nconst CityChart = ({ data, setSearch }: Props) => {\n    \n\n    return (\n        <div className=\"container chart-container my-4\">\n            <VictoryChart\n                domainPadding={50}\n                theme={VictoryTheme.material}\n                width={800}\n                height={400}\n                containerComponent={ <VictoryZoomContainer allowZoom={false} />}\n            >\n                <VictoryLabel text=\"City Report\" x={225} y={30} textAnchor=\"middle\" />\n                <VictoryAxis\n\n                    tickValues={data.map(f => f.city)}\n                    tickFormat={x => x}\n                />\n                <VictoryAxis\n                    dependentAxis\n                    tickFormat={x => x}\n                />\n                <VictoryBar\n                    data={data}\n                    x=\"city\"\n                    y=\"donations\"\n                    events={[{\n                        target: \"data\",\n                        eventHandlers: {\n                            onClick: () => {\n                                return [{\n                                    target: \"data\",\n                                    mutation: (props) => {\n                                        console.log(props.data[props.index].city)\n                                        setSearch(props.data[props.index].city)\n                                        return true\n                                    }\n                                }];\n                            }\n                        }\n                    }]}\n                />\n            </VictoryChart>\n        </div>\n    )\n}\n\nexport default CityChart\n","import { gql } from '@apollo/client'\nexport const STATS_QUERY = gql`\nquery getStats($city:String) {\n    stats(city:$city){\n        camps,\n        awareness,\n        activeVolunteer,\n        donations,\n        monthwiseDonation\n    }\n}\n\n`\n\nexport const ALL_STAT = gql`\n    query getStat {\n        overallStat{\n            city,\n            stat{\n                camps,\n                awareness,\n                activeVolunteer,\n                donations,\n                monthwiseDonation,\n                monthAwarnessData,\n                monthCampData\n            }\n        }\n    }\n`","declare global {\n    interface Window {\n        ZOHO: any\n    }\n}\n\nconst CREATOR = window.ZOHO.CREATOR\n\nexport const get = () => {\n\n    CREATOR.init().then((d) => {\n        let config = {\n            reportName: \"BloodConnect_Team_Report\",\n            page: \"1\",\n            pageSize: \"200\"\n        }\n\n        //get all records API\n        CREATOR.API.getAllRecords(config).then(function (response) {\n            //callback block\n            console.log(response)\n        });\n    }).catch(e => {\n        console.log(e)\n    })\n}\n\nconst getVolunteer = (from: number, city: string) => {\n    let criteria = \"(Status==\\\"Active\\\")\"\n    if(city !== 'All'){\n        criteria = `(Status==\"Active\" && BloodConnect_City==\"${city}\")`\n    }\n    console.log(criteria)\n    let config = {\n        reportName: \"BloodConnect_Team_Report\",\n        criteria,\n        page: from.toString(),\n        pageSize: \"200\"\n\n    }\n    return CREATOR.API.getAllRecords(config)\n}\n\nexport const fetchVolunteer = async (city: string) => {\n    await CREATOR.init()\n    let { data } = await getVolunteer( 0, city)\n    let l = data.length\n    let total = l\n    while (l === 200) {\n        let { data } = await getVolunteer(total, city)\n        l = data.length\n        total = total + l\n    }\n    return total\n}\n\n\n","import React, { useEffect, useState } from 'react'\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryLabel } from 'victory'\nimport './Chart.css'\n\ninterface Props {\n    data?:number[];\n    loading?:boolean\n}\n\ninterface dataProps {\n    month: number;\n    donations: number;\n    label: String;\n    url: String\n}\n\nconst MonthlyChart = ({ data, loading }: Props) => {\n    const initial_data = [\n        { month: 1, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 2, donations: 0, label: 'heya', url: 'https://anish-yadav.github.ioio' },\n        { month: 3, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 4, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 5, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 6, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 7, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 8, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 9, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 10, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 11, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 12, donations: 0, label: 'heya', url: 'https://anish-yadav.github.ioio' },\n    ];\n\n    const [chartData, setData] = useState<dataProps[]>(initial_data)\n\n    useEffect(() => {\n        if(!loading && data) {\n            setData((d:dataProps[]) => {\n                return d.map(da => {\n                    da.donations = data[da.month -1]\n                    da.label = data[da.month -1 ]+ ''\n                    return da\n                })\n            })\n        }\n    },[loading, data])\n\n    return (\n        <div className=\"container chart-container my-4\">\n            <VictoryChart\n                theme={VictoryTheme.material}\n                width={800}\n                height={400}\n                domainPadding={100}\n                animate={{\n                    duration: 2000,\n                    onLoad:{ duration: 1000 }\n                }}\n            >\n                <VictoryLabel text=\"Monthly Report\" x={225} y={30} textAnchor=\"middle\"/>\n                <VictoryAxis\n\n                    tickValues={chartData.map(f => f.month)}\n                    tickFormat={['Jan','Feb','Mar','Apr','May','June','July','Aug','Sep','Oct','Nov','Dec']}\n                />\n                <VictoryAxis\n                    dependentAxis\n\n                    tickFormat={x => x}\n                />\n                <VictoryBar\n                    data={chartData}\n                    x=\"month\"\n                    y=\"donations\"\n                    alignment='middle'\n                    events={[{\n                        target: \"data\",\n                        eventHandlers: {\n                            onClick: () => {\n                                return [{\n                                    target: \"data\",\n                                    mutation: (props) => {\n                                        console.log(props.data[props.index].url)\n                                        return true\n                                    }\n                                }];\n                            }\n                        }\n                    }]}\n                />\n            </VictoryChart>\n        </div>\n    )\n}\n\nexport default MonthlyChart\n","import React, { useEffect, useState, ReactElement } from 'react'\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryLabel, VictoryGroup, VictoryLegend } from 'victory'\nimport './Chart.css'\n\ninterface Props {\n    camp?: number[];\n    awareness?: number[]\n}\ninterface dataProps {\n    month: number;\n    donations: number;\n    label: number;\n    url: string\n}\n\ninterface GraphData {\n    month: number;\n    count: number;\n    label: number;\n}\n\nexport default function MonthlyEventChart({ camp, awareness }: Props): ReactElement {\n    const initial_data = [\n        { month: 1, count: 0, label: 0 },\n        { month: 2, count: 0, label: 0 },\n        { month: 3, count: 0, label: 0 },\n        { month: 4, count: 0, label: 0 },\n        { month: 5, count: 0, label: 0 },\n        { month: 6, count: 0, label: 0 },\n        { month: 7, count: 0, label: 0 },\n        { month: 8, count: 0, label: 0 },\n        { month: 9, count: 0, label: 0 },\n        { month: 10, count: 0, label: 0 },\n        { month: 11, count: 0, label: 0 },\n        { month: 12, count: 0, label: 0 },\n    ];\n    const initial_data1 = [\n        { month: 1, count: 0, label: 0 },\n        { month: 2, count: 0, label: 0 },\n        { month: 3, count: 0, label: 0 },\n        { month: 4, count: 0, label: 0 },\n        { month: 5, count: 0, label: 0 },\n        { month: 6, count: 0, label: 0 },\n        { month: 7, count: 0, label: 0 },\n        { month: 8, count: 0, label: 0 },\n        { month: 9, count: 0, label: 0 },\n        { month: 10, count: 0, label: 0 },\n        { month: 11, count: 0, label: 0 },\n        { month: 12, count: 0, label: 0 },\n    ];\n\n    const [campData, setCampData] = useState<GraphData[]>(initial_data)\n    const [awarenessData, setAwarenessData] = useState<GraphData[]>(initial_data1)\n    useEffect(() => {\n        if (camp) {\n            setCampData((d: GraphData[]) => {\n                return d.map(da => {\n                    da.count = camp[da.month - 1]\n                    da.label = camp[da.month - 1]\n                    return da\n                })\n            })\n        }\n    }, [camp])\n\n    useEffect(() => {\n        if (awareness) {\n            console.log('Awarenss is', awareness)\n            setAwarenessData((d: GraphData[]) => {\n                return d.map(da => {\n                    da.count = awareness[da.month - 1]\n                    da.label = awareness[da.month - 1]\n                    return da\n                })\n            })\n        }\n    }, [awareness])\n    return (\n        <div className=\"container chart-container my-4\">\n            <VictoryChart\n                theme={VictoryTheme.material}\n                width={800}\n                height={400}\n                domainPadding={100}\n            >\n\n                <VictoryLabel text=\"Monthly Report\" x={225} y={30} textAnchor=\"middle\" />\n                <VictoryLegend x={125} y={50}\n                    title=\"Legend\"\n                    centerTitle\n                    orientation=\"horizontal\"\n                    gutter={20}\n                    style={{ border: { stroke: \"black\" }, title: { fontSize: 20 } }}\n                    data={[\n                        { name: \"Camp\", symbol: { fill: \"blue\", type:\"rectangle\" } },\n                        { name: \"Awareness\", symbol: { fill: \"cyan\" } }\n                    ]}\n                />\n                <VictoryAxis\n\n                    tickValues={campData.map(f => f.month)}\n                    tickFormat={['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']}\n                />\n                <VictoryAxis\n                    dependentAxis\n\n                    tickFormat={x => x}\n                />\n                <VictoryGroup\n                    offset={20}\n                    colorScale={'qualitative'}\n                    animate={{\n                        duration: 2000,\n                        onLoad: { duration: 1000 }\n                    }}\n                >\n                    <VictoryBar\n                        data={campData}\n                        x=\"month\"\n                        y=\"count\"\n                        alignment='middle'\n                        events={[{\n                            target: \"data\",\n                            eventHandlers: {\n                                onClick: () => {\n                                    return [{\n                                        target: \"data\",\n                                        mutation: (props) => {\n                                            console.log(props.data[props.index].url)\n                                            return true\n                                        }\n                                    }];\n                                }\n                            }\n                        }]}\n                    />\n                    <VictoryBar\n                        data={awarenessData}\n                        x=\"month\"\n                        y=\"count\"\n                        alignment='middle'\n                        events={[{\n                            target: \"data\",\n                            eventHandlers: {\n                                onClick: () => {\n                                    return [{\n                                        target: \"data\",\n                                        mutation: (props) => {\n                                            console.log(props.data[props.index].url)\n                                            return true\n                                        }\n                                    }];\n                                }\n                            }\n                        }]}\n                    />\n                </VictoryGroup>\n            </VictoryChart>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { FiUser } from 'react-icons/fi';\nimport './App.css';\nimport Search from './components/Search/Search';\nimport CityChart from './components/Chart/CityChart';\nimport { useQuery } from '@apollo/client';\nimport { STATS_QUERY, ALL_STAT } from './query';\nimport { fetchVolunteer } from './services/index'\nimport Lottie from 'react-lottie';\nimport MonthlyChart from './components/Chart/MonthlyChart';\nimport { OverallStat } from './components/schema';\nimport MonthlyEventChart from './components/Chart/MonthlyEventChart';\n\nconst App = () => {\n\n\n  let BASE_URL = 'https://app.zohocreator.in/deepak64/bloodconnect-india-donor-system'\n  if (!window.location.href.includes('localhost')) {\n    BASE_URL = window.location.origin + window.location.pathname\n  }\n\n  let citiesData = [\n    { city: 'Delhi NCR', donations: 0, label: 0 },\n    { city: 'Agra', donations: 0, label: 0 },\n    { city: 'Lucknow', donations: 0, label: 0 },\n    { city: 'Jaipur', donations: 0, label: 0 },\n    { city: 'Kolkata', donations: 0, label: 0 },\n    { city: 'Ranchi', donations: 0, label: 0 },\n    { city: 'Odisha', donations: 0, label: 0 },\n    { city: 'Varanasi', donations: 0, label: 0 },\n    { city: 'Pune', donations: 0, label: 0 },\n    { city: 'Kanpur', donations: 0, label: 0 },\n    { city: 'Consulting', donations: 0, label: 0 }\n  ]\n\n  const [city, setCity] = useState('All')\n  //const { data, loading } = useQuery(STATS_QUERY, { variables: { city } })\n  const [cd, setCitiesData] = useState(citiesData)\n  const { data, loading } = useQuery(ALL_STAT)\n  const [isLoading, setLoading] = useState(true)\n  const [aV, setAV] = useState(-1)\n  const [camps, setCamps] = useState(-1)\n  const [awareness, setAwareness] = useState(-1)\n  const [donations, setDonations] = useState(-1)\n\n  // Monthly Datas\n  // Donations data\n  const [monthlyData, setmonthlyData] = useState(Array(12).fill(0))\n  // Camp data\n  const [monthlyCampData, setmonthlyCampData] = useState(Array(12).fill(0))\n  // Awareness data\n  const [monthlyAwarenessData, setmonthlyAwarenessData] = useState(Array(12).fill(0))\n  const [aVUrl, setaVUrl] = useState(`${BASE_URL}/#Report:BloodConnect_Team_Report?Status=Active`)\n\n\n  const setCityChartData = (d: OverallStat[]) => {\n    d.forEach(da => {\n      let i = citiesData.findIndex(c => c.city === da.city)\n      if (i < 0)\n        return\n      citiesData[i].donations = da.stat.donations\n      citiesData[i].label = da.stat.donations\n    })\n\n    setCitiesData(citiesData)\n  }\n\n  // useEffect(() => {\n  //   if (!loading && data && data.overallStat) {\n  //     setLoading(false)\n  //     setCityChartData(data.overallStat)\n  //     let curr = data.overallStat.find((a: OverallStat) => a.city === city)\n  //     //console.log(curr)\n  //     setAV(curr.stat.activeVolunteer)\n  //     setCamps(curr.stat.camps)\n  //     setAwareness(curr.stat.awareness)\n  //     setDonations(curr.stat.donations)\n  //     setmonthlyData(curr.stat.monthwiseDonation)\n  //     setmonthlyCampData(curr.stat.monthCampData)\n  //     setmonthlyAwarenessData(curr.stat.monthAwarnessData)\n  //   }\n  // }, [data, loading, city])\n\n  const setVolunteerData = async () => {\n    const av = await fetchVolunteer(city)\n    setLoading(false)\n    console.log('ACtive v',av)\n    setAV(av)\n  }\n  useEffect(() => {\n    setVolunteerData()\n  },[city])\n  const setSearch = (c: string): void => {\n    if (c !== city) {\n      setLoading(true)\n      setCity(c)\n    }\n\n  }\n\n  useEffect(() => {\n    if (city !== 'All')\n      setaVUrl(`${BASE_URL}/#Report:BloodConnect_Team_Report?Status=Active&&BloodConnect_City=${city}`)\n  }, [BASE_URL, city])\n\n  const Loading = () => {\n    return (\n      <div>\n        <Lottie\n          options={{\n            animationData: require('./assets/animation/loading.json'),\n            loop: true,\n            autoplay: true\n          }}\n          height={100}\n          width={100}\n          isStopped={!isLoading}\n        />\n      </div>\n    )\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-between \">\n        <h4 className=\"stat col-lg-4 col-sm-12  mt-2 d-flex align-items-center justify-content-center\">{city === 'All' ? 'BloodConnect' : city}</h4>\n        <Search handleChange={setSearch} />\n      </div>\n      <div className=\"row\">\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \" onClick={() => {\n            window.open(aVUrl, '_blank')\n          }}>\n            {\n              aV >= 0 && !isLoading ?\n                <div>\n                  <p className=\"card-heading\"> Active Volunteer</p>\n                  <p className=\"display-4\">{aV}</p>\n                </div>\n                : <Loading />\n            }\n            <div className=\"stat-icon-container\">\n              <FiUser size={34} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \">\n            {\n              camps >= 0 && !isLoading ?\n                <div>\n                  <p className=\"card-heading\"> Camps</p>\n                  <p className=\"display-4\">{camps}</p>\n                </div>\n                : <Loading />\n            }\n            <div className=\"stat-icon-container\">\n              <FiUser size={34} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \">\n            {\n              awareness >= 0 && !isLoading ?\n                <div>\n                  <p className=\"card-heading\"> Awareness</p>\n                  <p className=\"display-4\">{awareness}</p>\n                </div>\n                : <Loading />\n            }\n            <div className=\"stat-icon-container\">\n              <FiUser size={34} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \">\n            {\n              donations >= 0 && !isLoading ?\n                <div>\n                  <p className=\"card-heading\"> Toatal Donation </p>\n                  <p className=\"display-4\">{donations}</p>\n                </div>\n                : <Loading />\n            }\n            <div className=\"stat-icon-container\">\n              <FiUser size={34} />\n            </div>\n          </div>\n        </div>\n\n      </div>\n      {\n        city === 'All' ?\n          <CityChart data={cd} setSearch={setSearch} />\n          : <></>\n      }\n      <MonthlyChart data={monthlyData} loading={isLoading} />\n      <MonthlyEventChart camp={monthlyCampData} awareness={monthlyAwarenessData} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: \"https://bc-apiv2.herokuapp.com/graphql\",\n  cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}