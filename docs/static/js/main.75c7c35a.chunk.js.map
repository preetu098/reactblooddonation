{"version":3,"sources":["components/Search/SearchTheme.module.css","components/Search/Search.tsx","components/Chart/CityChart.tsx","services/index.ts","components/Chart/MonthlyChart.tsx","components/Chart/MonthlyEventChart.tsx","App.tsx","index.tsx"],"names":["module","exports","Search","handleChange","useState","suggestions","setSuggestion","value","setValue","city","name","inputProps","placeholder","onChange","event","newValue","className","onSuggestionsFetchRequested","inputValue","trim","toLowerCase","inputLength","length","filter","c","slice","getSuggestions","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","theme","onClick","console","log","color","CityChart","data","setSearch","loading","donations","label","chartData","setData","useEffect","updateArray","map","da","d1","Array","from","i","d2","VictoryTheme","material","width","height","domainPadding","text","x","y","textAnchor","tickValues","f","dependentAxis","tickFormat","alignment","events","target","eventHandlers","mutation","props","index","url","CREATOR","window","ZOHO","getVolunteer","page","criteria","config","reportName","toString","pageSize","API","getAllRecords","getEvent","getPostCamp","fetchVolunteer","a","init","l","total","fetchCamps","monthCampData","fill","monthAwarnessData","camps","d","TypeOfEvent","awareness","forEach","Date_field","split","mon","year","parseInt","totalCamps","fetchPostCamp","monthData","donation","then","res","postCamp","date","Camp_Awareness","display_value","pop","Number_of_Donation","error","totalDonation","fetchCitiesStat","response","MonthlyChart","month","animate","duration","onLoad","MonthlyEventChart","camp","count","campData","setCampData","awarenessData","setAwarenessData","title","centerTitle","orientation","gutter","style","border","stroke","fontSize","symbol","type","offset","colorScale","App","BASE_URL","location","ancestorOrigins","includes","setCity","cd","setCitiesData","isLoading","setLoading","aV","setAV","setCamps","setAwareness","setDonations","monthlyData","setmonthlyData","monthlyCampData","setmonthlyCampData","monthlyAwarenessData","setmonthlyAwarenessData","aVUrl","setaVUrl","loadAV","av","loadCamps","loadDonationData","loadCityStat","overall","Loading","options","animationData","require","loop","autoplay","isStopped","open","size","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75c7c35a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchTheme_container__1nyy1\",\"suggestionsContainer\":\"SearchTheme_suggestionsContainer__11igi\",\"suggestionsList\":\"SearchTheme_suggestionsList__2fUzU\",\"suggestion\":\"SearchTheme_suggestion__1AGtJ\"};","import React, { ReactElement, useState } from 'react'\nimport { FiSearch } from 'react-icons/fi'\nimport Autosuggest from 'react-autosuggest';\n\nimport './Search.css'\nimport theme from \"./SearchTheme.module.css\"\ninterface Props {\n    handleChange: (c: string) => void\n}\ninterface CityProps {\n    name: string\n}\n\nexport default function Search({ handleChange }: Props): ReactElement {\n\n    const [suggestions, setSuggestion] = useState<CityProps[]>([])\n    const [value, setValue] = useState('')\n    const city = [\n        { name: 'Delhi NCR' },\n        { name: 'Agra' },\n        { name: 'Lucknow' },\n        { name: 'Jaipur' },\n        { name: 'Kolkata' },\n        { name: 'Ranchi' },\n        { name: 'Odisha' },\n        { name: 'Varanasi' },\n        { name: 'Pune' },\n        { name: 'Kanpur' },\n        { name: 'Consulting' }\n    ]\n    const getSuggestions = (value: string) => {\n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n\n        return inputLength === 0 ? [] : city.filter(c =>\n            c.name.toLowerCase().slice(0, inputLength) === inputValue\n        );\n    };\n\n    const getSuggestionValue = suggestion => suggestion.name;\n\n    // Use your imagination to render suggestions.\n    const renderSuggestion = suggestion => (\n        <div className=\"suggestion\">\n            {suggestion.name}\n        </div>\n    );\n\n    const onSuggestionsFetchRequested = ({ value }) => {\n        setSuggestion(getSuggestions(value))\n    };\n\n    const onSuggestionsClearRequested = () => {\n        setSuggestion([])\n    }\n    const onChange = (event, { newValue }) => {\n        setValue(newValue)\n    };\n\n    const inputProps = {\n        placeholder: 'Enter the city',\n        value,\n        onChange: onChange\n    };\n    return (\n        <div className=\"my-4 col-lg-6\">\n            <div className=\"d-flex container\">\n                <Autosuggest\n                    suggestions={suggestions}\n                    onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={onSuggestionsClearRequested}\n                    getSuggestionValue={getSuggestionValue}\n                    renderSuggestion={renderSuggestion}\n                    inputProps={inputProps}\n                    theme={theme}\n                />\n                <div className=\"search-icon\" onClick={() => {\n                    console.log(value)\n                    handleChange(value)\n                }}>\n                    <FiSearch color=\"white\" />\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryLabel, VictoryZoomContainer } from 'victory'\nimport './Chart.css'\n\ninterface DataItem {\n    city: string;\n    donations: number;\n    label: number;\n}\ninterface Data {\n    [key: string]: number;\n}\ninterface Props {\n    data: any;\n    setSearch: (c: string) => void,\n    loading: boolean\n}\n\nconst CityChart = ({ data, setSearch, loading }: Props) => {\n\n    let initial_data = [\n        { city: 'Delhi NCR', donations: 100, label: 0 },\n        { city: 'Agra', donations: 0, label: 0 },\n        { city: 'Lucknow', donations: 0, label: 0 },\n        { city: 'Jaipur', donations: 0, label: 0 },\n        { city: 'Kolkata', donations: 0, label: 0 },\n        { city: 'Ranchi', donations: 0, label: 0 },\n        { city: 'Odisha', donations: 0, label: 0 },\n        { city: 'Varanasi', donations: 0, label: 0 },\n        { city: 'Pune', donations: 0, label: 0 },\n        { city: 'Kanpur', donations: 0, label: 0 },\n        { city: 'Consulting', donations: 0, label: 0 }\n    ]\n\n\n\n    const [chartData, setData] = useState<DataItem[]>(initial_data)\n    useEffect(() => {\n        if (data) {\n            let updateArray = [...chartData]\n            console.log('setting the data', data)\n            console.log('to',updateArray)\n            setData(updateArray.map((da: DataItem) => {\n                da.donations = data[da.city]\n                da.label = data[da.city]\n                return da\n            }))\n            console.log('data updated', chartData)\n            const d1 = Array.from(chartData)\n            for( let i = 0; i < d1.length ; i++) {\n                d1[i].donations = data[d1[i].city]\n                d1[i].label = data[d1[i].city]\n            }\n            setData(d1)\n            console.log('data updated 2', chartData)\n            const d2 = chartData.slice(0)\n            for( let i = 0; i < d2.length ; i++) {\n                d2[i].donations = data[d2[i].city]\n                d2[i].label = data[d2[i].city]\n            }\n            setData(d2)\n            console.log('data updated 3', chartData)\n        }\n    }, [data])\n\n    return (\n        <div className=\"container chart-container my-4\">\n            <VictoryChart\n                theme={VictoryTheme.material}\n                width={800}\n                height={400}\n                domainPadding={100}\n            >\n                <VictoryLabel text=\"Monthly Report\" x={225} y={30} textAnchor=\"middle\" />\n                <VictoryAxis\n                    \n                    tickValues={chartData.map(f => f.city)}\n                />\n                <VictoryAxis\n                    dependentAxis\n                    tickFormat={x => x}\n                />\n                <VictoryBar\n                    data={chartData}\n                    x=\"city\"\n                    y=\"donations\"\n                    alignment='middle'\n                    events={[{\n                        target: \"data\",\n                        eventHandlers: {\n                            onClick: () => {\n                                return [{\n                                    target: \"data\",\n                                    mutation: (props) => {\n                                        console.log(props.data[props.index].url)\n                                        return true\n                                    }\n                                }];\n                            }\n                        }\n                    }]}\n                />\n            </VictoryChart>\n        </div>\n    )\n}\n\nexport default CityChart\n","import { resolve } from \"dns\";\nimport { rejects } from \"assert\";\n\ndeclare global {\n    interface Window {\n        ZOHO: any\n    }\n}\n\ninterface overall {\n    city: string;\n    donations: number;\n}\ninterface API<Data> {\n    code : number;\n    data: Data[]\n}\ninterface PostCamp {\n    Number_of_Donation: any;\n    Camp_Awareness: {\n        display_value: string\n    }\n}\nconst CREATOR = window.ZOHO.CREATOR\n\nexport const get = () => {\n\n    CREATOR.init().then((d) => {\n        let config = {\n            reportName: \"BloodConnect_Team_Report\",\n            page: \"1\",\n            pageSize: \"200\"\n        }\n\n        //get all records API\n        CREATOR.API.getAllRecords(config).then(function (response) {\n            //callback block\n            console.log(response)\n        });\n    }).catch(e => {\n        console.log(e)\n    })\n}\n\nconst getVolunteer = (page: number, city: string) => {\n    let criteria = \"(Status==\\\"Active\\\")\"\n    if (city !== 'All') {\n        criteria = `(Status==\"Active\" && BloodConnect_City==\"${city}\")`\n    }\n    \n    let config = {\n        reportName: \"BloodConnect_Team_Report\",\n        criteria,\n        page: page.toString(),\n        pageSize: \"200\"\n\n    }\n    return CREATOR.API.getAllRecords(config)\n}\n\nconst getEvent = (page: number, city: string) => {\n    let criteria = \"\"\n    if (city !== 'All') {\n        criteria = `(BloodConnect_City==\"${city}\")`\n    }\n    \n    let config = {\n        reportName: \"Camp_Awareness_Report\",\n        criteria,\n        page: page.toString(),\n        pageSize: \"200\"\n\n    }\n    return CREATOR.API.getAllRecords(config)\n}\n\nconst getPostCamp = (page: number, city: string): Promise<API<PostCamp>> => {\n    let criteria = \"\"\n    if (city !== 'All') {\n        criteria = `(BloodConnect_City==\"${city}\")`\n    }\n    let config = {\n        reportName: \"Post_Camp_Form_Report\",\n        criteria: criteria,\n        page: page.toString(),\n        pageSize: \"200\"\n\n    }\n    return CREATOR.API.getAllRecords(config)\n    // return new Promise((resolve, reject) => {\n    //     let response = CREATOR.API.getAllRecords(config)\n    //     if (response)\n    //         resolve(response)\n    //     else\n    //         reject({ code: 500, data: []})\n    // })\n}\nexport const fetchVolunteer = async (city: string) => {\n    await CREATOR.init()\n    let page = 1\n    let { data } = await getVolunteer(page++, city)\n    let l = data.length\n    let total = l\n    while (l === 200) {\n        let { data } = await getVolunteer(page++, city)\n        l = data.length\n        total = total + l\n    }\n    return total\n}\n\nexport const fetchCamps = async (city: string) => {\n    let monthCampData = Array(12).fill(0)\n    let monthAwarnessData = Array(12).fill(0)\n    let page = 1\n    let { data } = await getEvent(page++, city)\n    let l = data.length\n    let camps = data.filter(d => d.TypeOfEvent === 'Camp')\n    let awareness = data.filter(d => d.TypeOfEvent !== 'Camp')\n    camps.forEach(c => {\n        let date = c.Date_field\n        let [_, mon, year] = date.split('-')\n        if (parseInt(year) === 2020) {\n            monthCampData[parseInt(mon) - 1] = monthCampData[parseInt(mon) - 1] + 1\n        }\n    })\n    awareness.forEach(c => {\n        let date = c.Date_field\n        let [_, mon, year] = date.split('-')\n        if (parseInt(year) === 2020) {\n            monthAwarnessData[parseInt(mon) - 1] = monthAwarnessData[parseInt(mon) - 1] + 1\n        }\n    })\n\n    let totalCamps = camps.length\n    let total = l\n    while (l === 200) {\n        let { data } = await getEvent(page++, city)\n        l = data.length\n        totalCamps = data.filter(d => d.TypeOfEvent === 'Camp').length\n        total = total + l\n        let camps = data.filter(d => d.TypeOfEvent === 'Camp')\n        let awareness = data.filter(d => d.TypeOfEvent !== 'Camp')\n        camps.forEach(c => {\n            let date = c.Date_field\n            let [_, mon, year] = date.split('-')\n            if (parseInt(year) === 2020) {\n                monthCampData[parseInt(mon) - 1] = monthCampData[parseInt(mon) - 1] + 1\n            }\n        })\n        awareness.forEach(c => {\n            let date = c.Date_field\n            let [_, mon, year] = date.split('-')\n            if (parseInt(year) === 2020) {\n                monthAwarnessData[parseInt(mon) - 1] = monthAwarnessData[parseInt(mon) - 1] + 1\n            }\n        })\n    }\n    return {\n        camps: totalCamps,\n        awareness: total - totalCamps,\n        monthCampData,\n        monthAwarnessData\n    }\n\n}\n\nexport const fetchPostCamp = async (city: string) => {\n    let monthData = Array(12).fill(0)\n    let donation = 0\n    console.log('Fetching post camp of ',city)\n    let d = await getPostCamp(0,city).then((res) => {\n        \n        res.data.forEach(postCamp => {\n\n            let date = postCamp.Camp_Awareness.display_value.split('_').pop()\n            if( !date)\n            return ;\n            let [_, mon, year] = date.split('-')\n            if (parseInt(year) === 2020) {\n                monthData[parseInt(mon) - 1] = monthData[parseInt(mon) - 1] + parseInt(postCamp.Number_of_Donation)\n                donation = donation + parseInt(postCamp.Number_of_Donation)\n            }\n        });\n    }, (error) => {\n        console.log('error', error,city)\n        donation = 0\n    })\n    console.log(city,donation)\n\n    return { totalDonation: donation, monthData }\n}\n\n// export const fetchPostCamp = async (city: string) => {\n//     let monthData = Array(12).fill(0)\n//     let donation = 0\n//     let page = 1\n//     let response\n//     try {\n//         response = await getPostCamp(page++, city)\n//     } catch (e) {\n//         console.log('No camps')\n//     }\n//     console.log('Response is',city, response)\n\n//     if (response === undefined)\n//         return { totalDonation: 0, monthData }\n//     else {\n//         const { data } = response\n//         if (!data)\n//             return { totalDonation: 0, monthData }\n\n//         data.forEach(postCamp => {\n\n//             let date = postCamp.Camp_Awareness.display_value.split('_').pop()\n//             let [_, mon, year] = date.split('-')\n//             if (parseInt(year) === 2020) {\n//                 monthData[parseInt(mon) - 1] = monthData[parseInt(mon) - 1] + parseInt(postCamp.Number_of_Donation)\n//                 donation = donation + parseInt(postCamp.Number_of_Donation)\n//             }\n//         });\n\n//         return { totalDonation: donation, monthData }\n//     }\n// }\n\n\n\nexport const fetchCitiesStat = async () => {\n    const cities = [\n        { name: 'Delhi NCR' },\n        { name: 'Agra' },\n        { name: 'Lucknow' },\n        { name: 'Jaipur' },\n        { name: 'Kolkata' },\n        { name: 'Ranchi' },\n        { name: 'Odisha' },\n        { name: 'Varanasi' },\n        { name: 'Pune' },\n        { name: 'Kanpur' },\n        { name: 'Consulting' }\n    ]\n\n\n\n    let response = {\n        'Delhi NCR':0,\n        'Agra': 0,\n        'Lucknow': 0,\n        'Jaipur': 0,\n        'Kolkata': 0,\n        'Ranchi': 0,\n        'Odisha': 0,\n        'Varanasi': 0,\n        'Pune': 0,\n        'Kanpur': 0,\n        'Consulting': 0\n    } ;\n    cities.forEach(async city => {\n        let donations = 0\n        try {\n            let { totalDonation } = await fetchPostCamp(city.name)\n            donations = totalDonation\n        } catch (e) {\n            console.log('Error at', city,e)\n            donations = 0\n        }\n        response[city.name] = donations\n    })\n\n    return response\n}\n","import React, { useEffect, useState } from 'react'\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryLabel } from 'victory'\nimport './Chart.css'\n\ninterface Props {\n    data?:number[];\n    loading?:boolean\n}\n\ninterface dataProps {\n    month: number;\n    donations: number;\n    label: String;\n    url: String\n}\n\nconst MonthlyChart = ({ data, loading }: Props) => {\n    const initial_data = [\n        { month: 1, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 2, donations: 0, label: 'heya', url: 'https://anish-yadav.github.ioio' },\n        { month: 3, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 4, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 5, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 6, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 7, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 8, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 9, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 10, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 11, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 12, donations: 0, label: 'heya', url: 'https://anish-yadav.github.ioio' },\n    ];\n\n    const [chartData, setData] = useState<dataProps[]>(initial_data)\n\n    useEffect(() => {\n        if(!loading && data) {\n            setData((d:dataProps[]) => {\n                return d.map(da => {\n                    da.donations = data[da.month -1]\n                    da.label = data[da.month -1 ]+ ''\n                    return da\n                })\n            })\n        }\n    },[loading, data])\n\n    return (\n        <div className=\"container chart-container my-4\">\n            <VictoryChart\n                theme={VictoryTheme.material}\n                width={800}\n                height={400}\n                domainPadding={100}\n                animate={{\n                    duration: 2000,\n                    onLoad:{ duration: 1000 }\n                }}\n            >\n                <VictoryLabel text=\"Monthly Report\" x={225} y={30} textAnchor=\"middle\"/>\n                <VictoryAxis\n\n                    tickValues={chartData.map(f => f.month)}\n                    tickFormat={['Jan','Feb','Mar','Apr','May','June','July','Aug','Sep','Oct','Nov','Dec']}\n                />\n                <VictoryAxis\n                    dependentAxis\n\n                    tickFormat={x => x}\n                />\n                <VictoryBar\n                    data={chartData}\n                    x=\"month\"\n                    y=\"donations\"\n                    alignment='middle'\n                    events={[{\n                        target: \"data\",\n                        eventHandlers: {\n                            onClick: () => {\n                                return [{\n                                    target: \"data\",\n                                    mutation: (props) => {\n                                        console.log(props.data[props.index].url)\n                                        return true\n                                    }\n                                }];\n                            }\n                        }\n                    }]}\n                />\n            </VictoryChart>\n        </div>\n    )\n}\n\nexport default MonthlyChart\n","import React, { useEffect, useState, ReactElement } from 'react'\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryLabel, VictoryGroup, VictoryLegend } from 'victory'\nimport './Chart.css'\n\ninterface Props {\n    camp?: number[];\n    awareness?: number[]\n}\ninterface dataProps {\n    month: number;\n    donations: number;\n    label: number;\n    url: string\n}\n\ninterface GraphData {\n    month: number;\n    count: number;\n    label: number;\n}\n\nexport default function MonthlyEventChart({ camp, awareness }: Props): ReactElement {\n    const initial_data = [\n        { month: 1, count: 0, label: 0 },\n        { month: 2, count: 0, label: 0 },\n        { month: 3, count: 0, label: 0 },\n        { month: 4, count: 0, label: 0 },\n        { month: 5, count: 0, label: 0 },\n        { month: 6, count: 0, label: 0 },\n        { month: 7, count: 0, label: 0 },\n        { month: 8, count: 0, label: 0 },\n        { month: 9, count: 0, label: 0 },\n        { month: 10, count: 0, label: 0 },\n        { month: 11, count: 0, label: 0 },\n        { month: 12, count: 0, label: 0 },\n    ];\n    const initial_data1 = [\n        { month: 1, count: 0, label: 0 },\n        { month: 2, count: 0, label: 0 },\n        { month: 3, count: 0, label: 0 },\n        { month: 4, count: 0, label: 0 },\n        { month: 5, count: 0, label: 0 },\n        { month: 6, count: 0, label: 0 },\n        { month: 7, count: 0, label: 0 },\n        { month: 8, count: 0, label: 0 },\n        { month: 9, count: 0, label: 0 },\n        { month: 10, count: 0, label: 0 },\n        { month: 11, count: 0, label: 0 },\n        { month: 12, count: 0, label: 0 },\n    ];\n\n    const [campData, setCampData] = useState<GraphData[]>(initial_data)\n    const [awarenessData, setAwarenessData] = useState<GraphData[]>(initial_data1)\n    useEffect(() => {\n        if (camp) {\n            setCampData((d: GraphData[]) => {\n                return d.map(da => {\n                    da.count = camp[da.month - 1]\n                    da.label = camp[da.month - 1]\n                    return da\n                })\n            })\n        }\n    }, [camp])\n\n    useEffect(() => {\n        if (awareness) {\n            setAwarenessData((d: GraphData[]) => {\n                return d.map(da => {\n                    da.count = awareness[da.month - 1]\n                    da.label = awareness[da.month - 1]\n                    return da\n                })\n            })\n        }\n    }, [awareness])\n    return (\n        <div className=\"container chart-container my-4\">\n            <VictoryChart\n                theme={VictoryTheme.material}\n                width={800}\n                height={400}\n                domainPadding={100}\n            >\n\n                <VictoryLabel text=\"Monthly Report\" x={225} y={30} textAnchor=\"middle\" />\n                <VictoryLegend x={125} y={50}\n                    title=\"Legend\"\n                    centerTitle\n                    orientation=\"horizontal\"\n                    gutter={20}\n                    style={{ border: { stroke: \"black\" }, title: { fontSize: 20 } }}\n                    data={[\n                        { name: \"Camp\", symbol: { fill: \"blue\", type:\"rectangle\" } },\n                        { name: \"Awareness\", symbol: { fill: \"cyan\" } }\n                    ]}\n                />\n                <VictoryAxis\n\n                    tickValues={campData.map(f => f.month)}\n                    tickFormat={['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']}\n                />\n                <VictoryAxis\n                    dependentAxis\n\n                    tickFormat={x => x}\n                />\n                <VictoryGroup\n                    offset={20}\n                    colorScale={'qualitative'}\n                    animate={{\n                        duration: 2000,\n                        onLoad: { duration: 1000 }\n                    }}\n                >\n                    <VictoryBar\n                        data={campData}\n                        x=\"month\"\n                        y=\"count\"\n                        alignment='middle'\n                        events={[{\n                            target: \"data\",\n                            eventHandlers: {\n                                onClick: () => {\n                                    return [{\n                                        target: \"data\",\n                                        mutation: (props) => {\n                                            console.log(props.data[props.index].url)\n                                            return true\n                                        }\n                                    }];\n                                }\n                            }\n                        }]}\n                    />\n                    <VictoryBar\n                        data={awarenessData}\n                        x=\"month\"\n                        y=\"count\"\n                        alignment='middle'\n                        events={[{\n                            target: \"data\",\n                            eventHandlers: {\n                                onClick: () => {\n                                    return [{\n                                        target: \"data\",\n                                        mutation: (props) => {\n                                            console.log(props.data[props.index].url)\n                                            return true\n                                        }\n                                    }];\n                                }\n                            }\n                        }]}\n                    />\n                </VictoryGroup>\n            </VictoryChart>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { FiUser } from 'react-icons/fi';\nimport './App.css';\nimport Search from './components/Search/Search';\nimport CityChart from './components/Chart/CityChart';\n//import { useQuery } from '@apollo/client';\n//import { STATS_QUERY, ALL_STAT } from './query';\nimport { fetchVolunteer, fetchCamps, fetchPostCamp, fetchCitiesStat } from './services/index'\nimport Lottie from 'react-lottie';\nimport MonthlyChart from './components/Chart/MonthlyChart';\n// import { OverallStat } from './components/schema';\nimport MonthlyEventChart from './components/Chart/MonthlyEventChart';\n\ninterface Citystat {\n  [key: string]: number\n}\nconst App = () => {\n\n\n  let BASE_URL = 'https://app.zohocreator.in/deepak64/bloodconnect-india-donor-system'\n  if (window.location.ancestorOrigins && !window.location.ancestorOrigins[0].includes('localhost')) {\n    BASE_URL = window.location.ancestorOrigins[0]\n  }\n\n\n\n  const [city, setCity] = useState('All')\n  //const { data, loading } = useQuery(STATS_QUERY, { variables: { city } })\n  const [cd, setCitiesData] = useState({})\n  //const { data, loading } = useQuery(ALL_STAT)\n  const [isLoading, setLoading] = useState(true)\n  const [aV, setAV] = useState(-1)\n  const [camps, setCamps] = useState(-1)\n  const [awareness, setAwareness] = useState(-1)\n  const [donations, setDonations] = useState(-1)\n\n  // Monthly Datas\n  // Donations data\n  const [monthlyData, setmonthlyData] = useState(Array(12).fill(0))\n  // Camp data\n  const [monthlyCampData, setmonthlyCampData] = useState(Array(12).fill(0))\n  // Awareness data\n  const [monthlyAwarenessData, setmonthlyAwarenessData] = useState(Array(12).fill(0))\n  const [aVUrl, setaVUrl] = useState(`${BASE_URL}/#Report:BloodConnect_Team_Report?Status=Active`)\n\n\n\n\n\n\n  const loadAV = async () => {\n    const av = await fetchVolunteer(city)\n    setAV(av)\n  }\n  const loadCamps = async () => {\n    const { camps, awareness, monthCampData, monthAwarnessData } = await fetchCamps(city)\n    setCamps(camps)\n    setAwareness(awareness)\n    setmonthlyCampData(monthCampData)\n    setmonthlyAwarenessData(monthAwarnessData)\n  }\n\n  const loadDonationData = async () => {\n    const { totalDonation, monthData } = await fetchPostCamp(city)\n    setDonations(totalDonation)\n    setmonthlyData(monthData)\n    setLoading(false)\n  }\n  const loadCityStat = async () => {\n    const overall = await fetchCitiesStat()\n    console.log('Overall is', overall)\n    setCitiesData(overall)\n  }\n\n  const loadAllData = () => {\n    loadAV().then(() => {\n      loadCamps().then(() => {\n        loadDonationData().then(() => {\n          loadCityStat().then(() => {\n            setLoading(false)\n          })\n        })\n      })\n    })\n  }\n  useEffect(() => {\n    loadAllData()\n  }, [city])\n\n \n\n\n\n  // useEffect(() => {\n  //     loadCityStat()\n  // }, [])\n  const setSearch = (c: string): void => {\n    if (c !== city) {\n      setLoading(true)\n      setCity(c)\n    }\n\n  }\n\n  useEffect(() => {\n    if (city !== 'All')\n      setaVUrl(`${BASE_URL}/#Report:BloodConnect_Team_Report?Status=Active&&BloodConnect_City=${city}`)\n  }, [BASE_URL, city])\n\n  const Loading = () => {\n    return (\n      <div>\n        <Lottie\n          options={{\n            animationData: require('./assets/animation/loading.json'),\n            loop: true,\n            autoplay: true\n          }}\n          height={100}\n          width={100}\n          isStopped={!isLoading}\n        />\n      </div>\n    )\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-between \">\n        <h4 className=\"stat col-lg-4 col-sm-12  mt-2 d-flex align-items-center justify-content-center\">{city === 'All' ? 'BloodConnect' : city}</h4>\n        <Search handleChange={setSearch} />\n      </div>\n      <div className=\"row\">\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \" onClick={() => {\n            window.open(aVUrl, '_blank')\n          }}>\n            {\n              !isLoading ?\n                <div>\n                  <p className=\"card-heading\"> Active Volunteer</p>\n                  <p className=\"display-4\">{aV}</p>\n                </div>\n                : <Loading />\n            }\n            <div className=\"stat-icon-container\">\n              <FiUser size={34} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \">\n            {\n              !isLoading ?\n                <div>\n                  <p className=\"card-heading\"> Camps</p>\n                  <p className=\"display-4\">{camps}</p>\n                </div>\n                : <Loading />\n            }\n            <div className=\"stat-icon-container\">\n              <FiUser size={34} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \">\n            {\n              !isLoading ?\n                <div>\n                  <p className=\"card-heading\"> Awareness</p>\n                  <p className=\"display-4\">{awareness}</p>\n                </div>\n                : <Loading />\n            }\n            <div className=\"stat-icon-container\">\n              <FiUser size={34} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \">\n            {\n              !isLoading ?\n                <div>\n                  <p className=\"card-heading\"> Toatal Donation </p>\n                  <p className=\"display-4\">{donations}</p>\n                </div>\n                : <Loading />\n            }\n            <div className=\"stat-icon-container\">\n              <FiUser size={34} />\n            </div>\n          </div>\n        </div>\n\n      </div>\n      {\n        city === 'All' ?\n          <CityChart data={cd} setSearch={setSearch} loading={isLoading} />\n          : <></>\n      }\n      <MonthlyChart data={monthlyData} loading={isLoading} />\n      <MonthlyEventChart camp={monthlyCampData} awareness={monthlyAwarenessData} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: \"https://bc-apiv2.herokuapp.com/graphql\",\n  cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}