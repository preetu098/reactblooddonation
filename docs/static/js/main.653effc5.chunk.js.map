{"version":3,"sources":["components/Search/SearchTheme.module.css","components/Search/Search.tsx","components/Chart/CityChart.tsx","services/index.ts","components/Chart/MonthlyChart.tsx","components/Chart/MonthlyEventChart.tsx","App.tsx","index.tsx"],"names":["module","exports","Search","handleChange","useState","suggestions","setSuggestion","value","setValue","city","name","inputProps","placeholder","onChange","event","newValue","className","onSuggestionsFetchRequested","inputValue","trim","toLowerCase","inputLength","length","filter","c","slice","getSuggestions","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","theme","onClick","console","log","color","CityChart","data","setSearch","domainPadding","VictoryTheme","material","width","height","containerComponent","allowZoom","text","x","y","textAnchor","tickValues","map","f","tickFormat","dependentAxis","events","target","eventHandlers","mutation","props","index","CREATOR","window","ZOHO","getVolunteer","page","criteria","config","reportName","toString","pageSize","API","getAllRecords","getEvent","getPostCamp","fetchVolunteer","a","init","l","total","fetchCamps","monthCampData","Array","fill","monthAwarnessData","camps","d","TypeOfEvent","awareness","forEach","Date_field","split","mon","year","parseInt","totalCamps","fetchPostCamp","monthData","donation","response","code","totalDonation","postCamp","Camp_Awareness","display_value","pop","Number_of_Donation","fetchCitiesStat","push","donations","MonthlyChart","loading","month","label","url","chartData","setData","useEffect","da","animate","duration","onLoad","alignment","MonthlyEventChart","camp","count","campData","setCampData","awarenessData","setAwarenessData","title","centerTitle","orientation","gutter","style","border","stroke","fontSize","symbol","type","offset","colorScale","App","BASE_URL","location","ancestorOrigins","includes","citiesData","setCity","cd","setCitiesData","isLoading","setLoading","aV","setAV","setCamps","setAwareness","setDonations","monthlyData","setmonthlyData","monthlyCampData","setmonthlyCampData","monthlyAwarenessData","setmonthlyAwarenessData","aVUrl","setaVUrl","loadData","av","overall","i","findIndex","Loading","options","animationData","require","loop","autoplay","isStopped","open","size","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.653effc5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchTheme_container__1nyy1\",\"suggestionsContainer\":\"SearchTheme_suggestionsContainer__11igi\",\"suggestionsList\":\"SearchTheme_suggestionsList__2fUzU\",\"suggestion\":\"SearchTheme_suggestion__1AGtJ\"};","import React, { ReactElement, useState } from 'react'\nimport { FiSearch } from 'react-icons/fi'\nimport Autosuggest from 'react-autosuggest';\n\nimport './Search.css'\nimport theme from \"./SearchTheme.module.css\"\ninterface Props {\n    handleChange: (c: string) => void\n}\ninterface CityProps {\n    name: string\n}\n\nexport default function Search({ handleChange }: Props): ReactElement {\n\n    const [suggestions, setSuggestion] = useState<CityProps[]>([])\n    const [value, setValue] = useState('')\n    const city = [\n        { name: 'Delhi NCR' },\n        { name: 'Agra' },\n        { name: 'Lucknow' },\n        { name: 'Jaipur' },\n        { name: 'Kolkata' },\n        { name: 'Ranchi' },\n        { name: 'Odisha' },\n        { name: 'Varanasi' },\n        { name: 'Pune' },\n        { name: 'Kanpur' },\n        { name: 'Consulting' }\n    ]\n    const getSuggestions = (value: string) => {\n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n\n        return inputLength === 0 ? [] : city.filter(c =>\n            c.name.toLowerCase().slice(0, inputLength) === inputValue\n        );\n    };\n\n    const getSuggestionValue = suggestion => suggestion.name;\n\n    // Use your imagination to render suggestions.\n    const renderSuggestion = suggestion => (\n        <div className=\"suggestion\">\n            {suggestion.name}\n        </div>\n    );\n\n    const onSuggestionsFetchRequested = ({ value }) => {\n        setSuggestion(getSuggestions(value))\n    };\n\n    const onSuggestionsClearRequested = () => {\n        setSuggestion([])\n    }\n    const onChange = (event, { newValue }) => {\n        setValue(newValue)\n    };\n\n    const inputProps = {\n        placeholder: 'Enter the city',\n        value,\n        onChange: onChange\n    };\n    return (\n        <div className=\"my-4 col-lg-6\">\n            <div className=\"d-flex container\">\n                <Autosuggest\n                    suggestions={suggestions}\n                    onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={onSuggestionsClearRequested}\n                    getSuggestionValue={getSuggestionValue}\n                    renderSuggestion={renderSuggestion}\n                    inputProps={inputProps}\n                    theme={theme}\n                />\n                <div className=\"search-icon\" onClick={() => {\n                    console.log(value)\n                    handleChange(value)\n                }}>\n                    <FiSearch color=\"white\" />\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryLabel, VictoryZoomContainer } from 'victory'\nimport './Chart.css'\n\ninterface DataItem {\n    city: string,\n    donations: number,\n    label: number\n}\ninterface Props {\n    data: DataItem[],\n    setSearch: (c: string) => void\n}\n\nconst CityChart = ({ data, setSearch }: Props) => {\n    \n\n    return (\n        <div className=\"container chart-container my-4\">\n            <VictoryChart\n                domainPadding={50}\n                theme={VictoryTheme.material}\n                width={800}\n                height={400}\n                containerComponent={ <VictoryZoomContainer allowZoom={false} />}\n            >\n                <VictoryLabel text=\"City Report\" x={225} y={30} textAnchor=\"middle\" />\n                <VictoryAxis\n\n                    tickValues={data.map(f => f.city)}\n                    tickFormat={x => x}\n                />\n                <VictoryAxis\n                    dependentAxis\n                    tickFormat={x => x}\n                />\n                <VictoryBar\n                    data={data}\n                    x=\"city\"\n                    y=\"donations\"\n                    events={[{\n                        target: \"data\",\n                        eventHandlers: {\n                            onClick: () => {\n                                return [{\n                                    target: \"data\",\n                                    mutation: (props) => {\n                                        console.log(props.data[props.index].city)\n                                        setSearch(props.data[props.index].city)\n                                        return true\n                                    }\n                                }];\n                            }\n                        }\n                    }]}\n                />\n            </VictoryChart>\n        </div>\n    )\n}\n\nexport default CityChart\n","declare global {\n    interface Window {\n        ZOHO: any\n    }\n}\n\ninterface overall {\n    city: string;\n    donations: number;\n}\nconst CREATOR = window.ZOHO.CREATOR\n\nexport const get = () => {\n\n    CREATOR.init().then((d) => {\n        let config = {\n            reportName: \"BloodConnect_Team_Report\",\n            page: \"1\",\n            pageSize: \"200\"\n        }\n\n        //get all records API\n        CREATOR.API.getAllRecords(config).then(function (response) {\n            //callback block\n            console.log(response)\n        });\n    }).catch(e => {\n        console.log(e)\n    })\n}\n\nconst getVolunteer = (page: number, city: string) => {\n    let criteria = \"(Status==\\\"Active\\\")\"\n    if(city !== 'All'){\n        criteria = `(Status==\"Active\" && BloodConnect_City==\"${city}\")`\n    }\n    console.log(criteria)\n    let config = {\n        reportName: \"BloodConnect_Team_Report\",\n        criteria,\n        page: page.toString(),\n        pageSize: \"200\"\n\n    }\n    return CREATOR.API.getAllRecords(config)\n}\n\nconst getEvent = (page: number, city: string) => {\n    let criteria = \"\"\n    if(city !== 'All'){\n        criteria = `(BloodConnect_City==\"${city}\")`\n    }\n    console.log(criteria)\n    let config = {\n        reportName: \"Camp_Awareness_Report\",\n        criteria,\n        page: page.toString(),\n        pageSize: \"200\"\n\n    }\n    return CREATOR.API.getAllRecords(config)\n}\n\nconst getPostCamp  = (page: number, city: string) => {\n    let criteria = \"\"\n    if(city !== 'All'){\n        criteria = `(BloodConnect_City==\"${city}\")`\n    }\n    let config = {\n        reportName: \"Post_Camp_Form_Report\",\n        criteria: criteria,\n        page: page.toString(),\n        pageSize: \"200\"\n\n    }\n    return CREATOR.API.getAllRecords(config)\n}\nexport const fetchVolunteer = async (city: string) => {\n    await CREATOR.init()\n    let page = 1\n    let { data } = await getVolunteer( page++, city)\n    let l = data.length\n    let total = l\n    while (l === 200) {\n        let { data } = await getVolunteer(page++, city)\n        l = data.length\n        total = total + l\n    }\n    return total\n}\n\nexport const fetchCamps = async (city: string ) => {\n    let monthCampData = Array(12).fill(0)\n    let monthAwarnessData = Array(12).fill(0)\n    let page = 1\n    let { data } = await getEvent(page++, city)\n    let l = data.length\n    let camps = data.filter(d => d.TypeOfEvent === 'Camp')\n    let awareness = data.filter(d => d.TypeOfEvent !== 'Camp')\n    camps.forEach(c => {\n        let date = c.Date_field\n        let [_, mon, year] = date.split('-')\n        if (parseInt(year) === 2020) {\n            monthCampData[parseInt(mon) - 1] = monthCampData[parseInt(mon) - 1] + 1\n        }\n    })\n    awareness.forEach(c => {\n        let date = c.Date_field\n        let [_, mon, year] = date.split('-')\n        if (parseInt(year) === 2020) {\n            monthAwarnessData[parseInt(mon) - 1] = monthAwarnessData[parseInt(mon) - 1] + 1\n        }\n    })\n\n    let totalCamps = camps.length\n    let total = l\n    while (l === 200) {\n        let {data} = await getEvent(page++, city)\n        l = data.length\n        totalCamps = data.filter(d => d.TypeOfEvent === 'Camp').length\n        total = total + l\n        let camps = data.filter(d => d.TypeOfEvent === 'Camp')\n        let awareness = data.filter(d => d.TypeOfEvent !== 'Camp')\n        camps.forEach(c => {\n            let date = c.Date_field\n            let [_, mon, year] = date.split('-')\n            if (parseInt(year) === 2020) {\n                monthCampData[parseInt(mon) - 1] = monthCampData[parseInt(mon) - 1] + 1\n            }\n        })\n        awareness.forEach(c => {\n            let date = c.Date_field\n            let [_, mon, year] = date.split('-')\n            if (parseInt(year) === 2020) {\n                monthAwarnessData[parseInt(mon) - 1] = monthAwarnessData[parseInt(mon) - 1] + 1\n            }\n        })\n    }\n    return {\n        camps: totalCamps,\n        awareness: total - totalCamps,\n        monthCampData,\n        monthAwarnessData\n    }\n\n}\n\nexport const fetchPostCamp = async (city: string) => {\n    let monthData = Array(12).fill(0)\n    let donation = 0\n    let page = 1\n    let response;\n    try {\n        response = await getPostCamp(page++, city)\n    } catch (e) {\n        console.log('No camps')\n    }\n    console.log(response)\n    const { code, data } = response\n    if (!response || !data)\n        return { totalDonation: 0, monthData }\n\n\n    data.forEach(postCamp => {\n        \n        let date = postCamp.Camp_Awareness.display_value.split('_').pop()\n        let [_, mon, year] = date.split('-')\n        if (parseInt(year) === 2020) {\n            monthData[parseInt(mon) - 1] = monthData[parseInt(mon) - 1] + parseInt(postCamp.Number_of_Donation)\n            donation = donation + parseInt(postCamp.Number_of_Donation)\n        }\n    });\n\n    return { totalDonation: donation, monthData }\n}\n\n\nexport const fetchCitiesStat = async () => {\n    const cities = [\n        { name: 'Delhi NCR' },\n        { name: 'Agra' },\n        { name: 'Lucknow' },\n        { name: 'Jaipur' },\n        { name: 'Kolkata' },\n        { name: 'Ranchi' },\n        { name: 'Odisha' },\n        { name: 'Varanasi' },\n        { name: 'Pune' },\n        { name: 'Kanpur' },\n        { name: 'Consulting' }\n    ]\n\n    let response: overall[] = []\n    cities.forEach(async city => {\n        let { totalDonation } = await getPostCamp(0,city.name)\n        response.push({ city: city.name, donations: totalDonation })\n    })\n\n    return response\n}\n","import React, { useEffect, useState } from 'react'\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryLabel } from 'victory'\nimport './Chart.css'\n\ninterface Props {\n    data?:number[];\n    loading?:boolean\n}\n\ninterface dataProps {\n    month: number;\n    donations: number;\n    label: String;\n    url: String\n}\n\nconst MonthlyChart = ({ data, loading }: Props) => {\n    const initial_data = [\n        { month: 1, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 2, donations: 0, label: 'heya', url: 'https://anish-yadav.github.ioio' },\n        { month: 3, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 4, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 5, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 6, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 7, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 8, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 9, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 10, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 11, donations: 0, label: 'heya', url: 'https://anish-yadav.github.io' },\n        { month: 12, donations: 0, label: 'heya', url: 'https://anish-yadav.github.ioio' },\n    ];\n\n    const [chartData, setData] = useState<dataProps[]>(initial_data)\n\n    useEffect(() => {\n        if(!loading && data) {\n            setData((d:dataProps[]) => {\n                return d.map(da => {\n                    da.donations = data[da.month -1]\n                    da.label = data[da.month -1 ]+ ''\n                    return da\n                })\n            })\n        }\n    },[loading, data])\n\n    return (\n        <div className=\"container chart-container my-4\">\n            <VictoryChart\n                theme={VictoryTheme.material}\n                width={800}\n                height={400}\n                domainPadding={100}\n                animate={{\n                    duration: 2000,\n                    onLoad:{ duration: 1000 }\n                }}\n            >\n                <VictoryLabel text=\"Monthly Report\" x={225} y={30} textAnchor=\"middle\"/>\n                <VictoryAxis\n\n                    tickValues={chartData.map(f => f.month)}\n                    tickFormat={['Jan','Feb','Mar','Apr','May','June','July','Aug','Sep','Oct','Nov','Dec']}\n                />\n                <VictoryAxis\n                    dependentAxis\n\n                    tickFormat={x => x}\n                />\n                <VictoryBar\n                    data={chartData}\n                    x=\"month\"\n                    y=\"donations\"\n                    alignment='middle'\n                    events={[{\n                        target: \"data\",\n                        eventHandlers: {\n                            onClick: () => {\n                                return [{\n                                    target: \"data\",\n                                    mutation: (props) => {\n                                        console.log(props.data[props.index].url)\n                                        return true\n                                    }\n                                }];\n                            }\n                        }\n                    }]}\n                />\n            </VictoryChart>\n        </div>\n    )\n}\n\nexport default MonthlyChart\n","import React, { useEffect, useState, ReactElement } from 'react'\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryLabel, VictoryGroup, VictoryLegend } from 'victory'\nimport './Chart.css'\n\ninterface Props {\n    camp?: number[];\n    awareness?: number[]\n}\ninterface dataProps {\n    month: number;\n    donations: number;\n    label: number;\n    url: string\n}\n\ninterface GraphData {\n    month: number;\n    count: number;\n    label: number;\n}\n\nexport default function MonthlyEventChart({ camp, awareness }: Props): ReactElement {\n    const initial_data = [\n        { month: 1, count: 0, label: 0 },\n        { month: 2, count: 0, label: 0 },\n        { month: 3, count: 0, label: 0 },\n        { month: 4, count: 0, label: 0 },\n        { month: 5, count: 0, label: 0 },\n        { month: 6, count: 0, label: 0 },\n        { month: 7, count: 0, label: 0 },\n        { month: 8, count: 0, label: 0 },\n        { month: 9, count: 0, label: 0 },\n        { month: 10, count: 0, label: 0 },\n        { month: 11, count: 0, label: 0 },\n        { month: 12, count: 0, label: 0 },\n    ];\n    const initial_data1 = [\n        { month: 1, count: 0, label: 0 },\n        { month: 2, count: 0, label: 0 },\n        { month: 3, count: 0, label: 0 },\n        { month: 4, count: 0, label: 0 },\n        { month: 5, count: 0, label: 0 },\n        { month: 6, count: 0, label: 0 },\n        { month: 7, count: 0, label: 0 },\n        { month: 8, count: 0, label: 0 },\n        { month: 9, count: 0, label: 0 },\n        { month: 10, count: 0, label: 0 },\n        { month: 11, count: 0, label: 0 },\n        { month: 12, count: 0, label: 0 },\n    ];\n\n    const [campData, setCampData] = useState<GraphData[]>(initial_data)\n    const [awarenessData, setAwarenessData] = useState<GraphData[]>(initial_data1)\n    useEffect(() => {\n        if (camp) {\n            setCampData((d: GraphData[]) => {\n                return d.map(da => {\n                    da.count = camp[da.month - 1]\n                    da.label = camp[da.month - 1]\n                    return da\n                })\n            })\n        }\n    }, [camp])\n\n    useEffect(() => {\n        if (awareness) {\n            console.log('Awarenss is', awareness)\n            setAwarenessData((d: GraphData[]) => {\n                return d.map(da => {\n                    da.count = awareness[da.month - 1]\n                    da.label = awareness[da.month - 1]\n                    return da\n                })\n            })\n        }\n    }, [awareness])\n    return (\n        <div className=\"container chart-container my-4\">\n            <VictoryChart\n                theme={VictoryTheme.material}\n                width={800}\n                height={400}\n                domainPadding={100}\n            >\n\n                <VictoryLabel text=\"Monthly Report\" x={225} y={30} textAnchor=\"middle\" />\n                <VictoryLegend x={125} y={50}\n                    title=\"Legend\"\n                    centerTitle\n                    orientation=\"horizontal\"\n                    gutter={20}\n                    style={{ border: { stroke: \"black\" }, title: { fontSize: 20 } }}\n                    data={[\n                        { name: \"Camp\", symbol: { fill: \"blue\", type:\"rectangle\" } },\n                        { name: \"Awareness\", symbol: { fill: \"cyan\" } }\n                    ]}\n                />\n                <VictoryAxis\n\n                    tickValues={campData.map(f => f.month)}\n                    tickFormat={['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']}\n                />\n                <VictoryAxis\n                    dependentAxis\n\n                    tickFormat={x => x}\n                />\n                <VictoryGroup\n                    offset={20}\n                    colorScale={'qualitative'}\n                    animate={{\n                        duration: 2000,\n                        onLoad: { duration: 1000 }\n                    }}\n                >\n                    <VictoryBar\n                        data={campData}\n                        x=\"month\"\n                        y=\"count\"\n                        alignment='middle'\n                        events={[{\n                            target: \"data\",\n                            eventHandlers: {\n                                onClick: () => {\n                                    return [{\n                                        target: \"data\",\n                                        mutation: (props) => {\n                                            console.log(props.data[props.index].url)\n                                            return true\n                                        }\n                                    }];\n                                }\n                            }\n                        }]}\n                    />\n                    <VictoryBar\n                        data={awarenessData}\n                        x=\"month\"\n                        y=\"count\"\n                        alignment='middle'\n                        events={[{\n                            target: \"data\",\n                            eventHandlers: {\n                                onClick: () => {\n                                    return [{\n                                        target: \"data\",\n                                        mutation: (props) => {\n                                            console.log(props.data[props.index].url)\n                                            return true\n                                        }\n                                    }];\n                                }\n                            }\n                        }]}\n                    />\n                </VictoryGroup>\n            </VictoryChart>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { FiUser } from 'react-icons/fi';\nimport './App.css';\nimport Search from './components/Search/Search';\nimport CityChart from './components/Chart/CityChart';\nimport { useQuery } from '@apollo/client';\nimport { STATS_QUERY, ALL_STAT } from './query';\nimport { fetchVolunteer, fetchCamps, fetchPostCamp, fetchCitiesStat } from './services/index'\nimport Lottie from 'react-lottie';\nimport MonthlyChart from './components/Chart/MonthlyChart';\nimport { OverallStat } from './components/schema';\nimport MonthlyEventChart from './components/Chart/MonthlyEventChart';\n\nconst App = () => {\n\n\n  let BASE_URL = 'https://app.zohocreator.in/deepak64/bloodconnect-india-donor-system'\n  if (window.location.ancestorOrigins && !window.location.ancestorOrigins[0].includes('localhost')) {\n    BASE_URL = window.location.ancestorOrigins[0]\n  }\n  console.log(window.location)\n\n  let citiesData = [\n    { city: 'Delhi NCR', donations: 0, label: 0 },\n    { city: 'Agra', donations: 0, label: 0 },\n    { city: 'Lucknow', donations: 0, label: 0 },\n    { city: 'Jaipur', donations: 0, label: 0 },\n    { city: 'Kolkata', donations: 0, label: 0 },\n    { city: 'Ranchi', donations: 0, label: 0 },\n    { city: 'Odisha', donations: 0, label: 0 },\n    { city: 'Varanasi', donations: 0, label: 0 },\n    { city: 'Pune', donations: 0, label: 0 },\n    { city: 'Kanpur', donations: 0, label: 0 },\n    { city: 'Consulting', donations: 0, label: 0 }\n  ]\n\n  const [city, setCity] = useState('All')\n  //const { data, loading } = useQuery(STATS_QUERY, { variables: { city } })\n  const [cd, setCitiesData] = useState(citiesData)\n  //const { data, loading } = useQuery(ALL_STAT)\n  const [isLoading, setLoading] = useState(true)\n  const [aV, setAV] = useState(-1)\n  const [camps, setCamps] = useState(-1)\n  const [awareness, setAwareness] = useState(-1)\n  const [donations, setDonations] = useState(-1)\n\n  // Monthly Datas\n  // Donations data\n  const [monthlyData, setmonthlyData] = useState(Array(12).fill(0))\n  // Camp data\n  const [monthlyCampData, setmonthlyCampData] = useState(Array(12).fill(0))\n  // Awareness data\n  const [monthlyAwarenessData, setmonthlyAwarenessData] = useState(Array(12).fill(0))\n  const [aVUrl, setaVUrl] = useState(`${BASE_URL}/#Report:BloodConnect_Team_Report?Status=Active`)\n\n\n  const setCityChartData = (d) => {\n    d.forEach(da => {\n      let i = citiesData.findIndex(c => c.city === da.city)\n      if (i < 0)\n        return\n      citiesData[i].donations = da.donations\n      citiesData[i].label = da.donations\n    })\n\n    setCitiesData(citiesData)\n  }\n\n  // useEffect(() => {\n  //   if (!loading && data && data.overallStat) {\n  //     setLoading(false)\n  //     setCityChartData(data.overallStat)\n  //     let curr = data.overallStat.find((a: OverallStat) => a.city === city)\n  //     //console.log(curr)\n  //     setAV(curr.stat.activeVolunteer)\n  //     setCamps(curr.stat.camps)\n  //     setAwareness(curr.stat.awareness)\n  //     setDonations(curr.stat.donations)\n  //     setmonthlyData(curr.stat.monthwiseDonation)\n  //     setmonthlyCampData(curr.stat.monthCampData)\n  //     setmonthlyAwarenessData(curr.stat.monthAwarnessData)\n  //   }\n  // }, [data, loading, city])\n\n  const loadData = async () => {\n    const av = await fetchVolunteer(city)\n    setLoading(false)\n    console.log('ACtive v',av)\n    const { camps, awareness, monthCampData, monthAwarnessData } = await fetchCamps(city)\n    console.log(camps, awareness)\n    const { totalDonation, monthData } = await fetchPostCamp(city)\n    console.log(totalDonation)\n    const overall = await fetchCitiesStat()\n    setCityChartData(overall)\n    setCamps(camps)\n    setAwareness(awareness)\n    setmonthlyCampData(monthCampData)\n    setmonthlyAwarenessData(monthAwarnessData)\n    setDonations(totalDonation)\n    setmonthlyData(monthData)\n    \n    setAV(av)\n  }\n  useEffect(() => {\n    loadData()\n  },[city])\n  const setSearch = (c: string): void => {\n    if (c !== city) {\n      setLoading(true)\n      setCity(c)\n    }\n\n  }\n\n  useEffect(() => {\n    if (city !== 'All')\n      setaVUrl(`${BASE_URL}/#Report:BloodConnect_Team_Report?Status=Active&&BloodConnect_City=${city}`)\n  }, [BASE_URL, city])\n\n  const Loading = () => {\n    return (\n      <div>\n        <Lottie\n          options={{\n            animationData: require('./assets/animation/loading.json'),\n            loop: true,\n            autoplay: true\n          }}\n          height={100}\n          width={100}\n          isStopped={!isLoading}\n        />\n      </div>\n    )\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-between \">\n        <h4 className=\"stat col-lg-4 col-sm-12  mt-2 d-flex align-items-center justify-content-center\">{city === 'All' ? 'BloodConnect' : city}</h4>\n        <Search handleChange={setSearch} />\n      </div>\n      <div className=\"row\">\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \" onClick={() => {\n            window.open(aVUrl, '_blank')\n          }}>\n            {\n              !isLoading ?\n                <div>\n                  <p className=\"card-heading\"> Active Volunteer</p>\n                  <p className=\"display-4\">{aV}</p>\n                </div>\n                : <Loading />\n            }\n            <div className=\"stat-icon-container\">\n              <FiUser size={34} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \">\n            {\n              !isLoading ?\n                <div>\n                  <p className=\"card-heading\"> Camps</p>\n                  <p className=\"display-4\">{camps}</p>\n                </div>\n                : <Loading />\n            }\n            <div className=\"stat-icon-container\">\n              <FiUser size={34} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \">\n            {\n              !isLoading ?\n                <div>\n                  <p className=\"card-heading\"> Awareness</p>\n                  <p className=\"display-4\">{awareness}</p>\n                </div>\n                : <Loading />\n            }\n            <div className=\"stat-icon-container\">\n              <FiUser size={34} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \">\n            {\n             !isLoading ?\n                <div>\n                  <p className=\"card-heading\"> Toatal Donation </p>\n                  <p className=\"display-4\">{donations}</p>\n                </div>\n                : <Loading />\n            }\n            <div className=\"stat-icon-container\">\n              <FiUser size={34} />\n            </div>\n          </div>\n        </div>\n\n      </div>\n      {\n        city === 'All' ?\n          <CityChart data={cd} setSearch={setSearch} />\n          : <></>\n      }\n      <MonthlyChart data={monthlyData} loading={isLoading} />\n      <MonthlyEventChart camp={monthlyCampData} awareness={monthlyAwarenessData} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: \"https://bc-apiv2.herokuapp.com/graphql\",\n  cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}