{"version":3,"sources":["components/Search/SearchTheme.module.css","Constans/index.ts","Constans/DemoData.ts","Helplers/index.ts","services/index.ts","components/Chart/MonthlyDonation.tsx","components/Chart/MonthlyEventChart.tsx","components/Helpline/index.tsx","components/Search/Search.tsx","components/Table/StatTable.tsx","App.tsx","index.tsx"],"names":["module","exports","CITIES_ARRAY","MONTH_END","TABLESTATSDEMO","i","push","city","camps","Math","floor","random","awareness","helpline","donations","activeVolunteer","getDateRange","month","year","startDate","endDate","toString","mon","join","CREATOR","window","ZOHO","getVolunteer","page","criteria","config","reportName","pageSize","API","getAllRecords","getEvent","thisYear","getCity","getHelplines","fetchVolunteer","a","init","data","l","length","total","fetchCamps","monthCampData","Array","fill","monthAwarnessData","monthDonation","monthDetail","map","startTimestamp","Date","getTime","endTimestamp","console","log","t","split","parseInt","filter","d","TypeOfEvent","totalCamps","totalAwareness","forEach","c","date","Date_field","timeStamp","BloodConnect_City","fecthHelplines","res","ID","returnData","open","closed","Status","getTableStat","tableStat","av","CampDonationChart","back","useState","x","label","chartData","setData","useEffect","d2","da","sorted","sort","b","className","size","onClick","theme","VictoryTheme","material","width","height","domainPadding","text","y","textAnchor","tickValues","f","dependentAxis","tickFormat","labelComponent","alignment","barWidth","events","target","eventHandlers","mutation","props","index","url","DonationCharts","selectedCity","setCity","setLoading","monthStatShown","showMonthStat","monthStat","setMonthStat","currMonthStat","setCurrMonthStat","ref","React","createRef","fetchYearData","getFullYear","from","id","exportComponentAsPDF","animate","duration","onLoad","MonthlyEventChart","camp","count","campData","setCampData","awarenessData","setAwarenessData","title","centerTitle","orientation","gutter","style","border","stroke","fontSize","name","symbol","type","offset","colorScale","HelplineComponent","searchedCity","isLoading","setHelpline","openHelpline","setOpen","closedHelpline","setClosed","fetchData","s","Loading","options","animationData","require","loop","autoplay","isStopped","Search","handleChange","suggestions","setSuggestion","value","setValue","inputProps","placeholder","onChange","event","newValue","onKeyDown","e","key","onSuggestionsFetchRequested","inputValue","trim","toLowerCase","inputLength","slice","getSuggestions","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","color","StatTable","loading","setMonth","setYear","totalHelpline","totalVolunteer","totalDonation","htmlFor","cellSpacing","cellPadding","backgroundColor","App","BASE_URL","location","ancestorOrigins","includes","aV","setAV","setCamps","setAwareness","setDonations","monthlyCampData","setmonthlyCampData","monthlyAwarenessData","setmonthlyAwarenessData","aVUrl","setaVUrl","campUrl","setcampUrl","awarenessUrl","setawarenessUrl","loadAV","loadCamps","then","Helpline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.943e99e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchTheme_container__1nyy1\",\"suggestionsContainer\":\"SearchTheme_suggestionsContainer__11igi\",\"suggestionsList\":\"SearchTheme_suggestionsList__2fUzU\",\"suggestion\":\"SearchTheme_suggestion__1AGtJ\"};","export const CITIES_ARRAY = [ \"Agra\",\"Consulting\",\"Delhi NCR\",\"Jaipur\",\"Kanpur\",\"Kolkata\",\"Lucknow\",\"Odisha\",\"Pune\",\"Ranchi\",\"Varanasi\"];\nexport const __IS_DEV__ = false \n\nexport const MONTH_END = [31,28,31,30,31,30,31,31,30,31,30,31];","import { CITIES_ARRAY } from \".\";\nimport { sleep } from \"../Helplers\";\nimport { TableStatsType } from \"../Types\";\nimport CAMPDATA from \"./CAMP.json\";\nimport HELPLINEDATA from \"./HELPLINE.json\";\nimport TEAMDATA from \"./TEAM.json\";\n\nexport const TABLESTATSDEMO: TableStatsType[] = [];\n\nfor (let i in CITIES_ARRAY) {\n    TABLESTATSDEMO.push({\n        city: CITIES_ARRAY[i],\n        camps: Math.floor(Math.random() * 10),\n        awareness: Math.floor(Math.random() * 5),\n        helpline: Math.floor(Math.random() * 20),\n        donations: Math.floor(Math.random() * 25),\n        activeVolunteer: Math.floor(Math.random() * 150),\n    });\n}\n\nexport const CAMP_DATA_DEMO = CAMPDATA;\n\nexport const getDemoVolunteerData = async (city?: string) => {\n    if (!city) return TEAMDATA;\n    // await sleep(300);\n    return {\n        code: 3000,\n        data: TEAMDATA.data.filter((t) => t.BloodConnect_City === city),\n    };\n};\n\nexport const getDemoCampData = async (city?: string) => {\n    if (!city) return CAMPDATA;\n    // await sleep(300);\n    return {\n        code: 3000,\n        data: CAMPDATA.data.filter((c) => c.BloodConnect_City === city),\n    };\n};\n\nexport const getDemoHelplineData = async (city?: string) => {\n    // await sleep(300);\n    if (!city) return HELPLINEDATA;\n    return {\n        code: 3000,\n        data: HELPLINEDATA.data.filter(\n                //@ts-ignore\n            (h) =>city !== \"Consulting\" ?  h.City_Region.display_value === city : !CITIES_ARRAY.includes(h.City_Region.display_value))\n    };\n};\n","import { MONTH_END } from \"../Constans\";\n\nexport const sleep = (ms:number) => {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n\n// inputs \n// Jan - Dec - [1 - 12] 0 - All Months\n// year = 0 means all years\nexport const getDateRange = (month:number,year: number):string []=> {\n\n    // start and end date for filter \n    let startDate: Array<string> = [],\n        endDate: Array<string> = [];\n    startDate[0] = \"01\";\n\n    // selecting all years\n    if (year === 0) {\n        startDate[2] = \"2000\";\n        endDate[2] = \"2099\";\n    }else {\n      startDate[2] = year.toString();\n      endDate[2] = year.toString();\n    }\n    // selecting all month\n    if (month === 0) {\n        startDate[1] = \"01\";\n        endDate[1] = \"12\";\n        endDate[0] = \"31\"\n    } else {\n      let mon = month > 9 ? month.toString() : \"0\"+month.toString()\n      startDate[1] = mon\n      endDate[1] = mon\n      endDate[0] = MONTH_END[month-1].toString();\n    }\n    return [startDate.join(\"-\") , endDate.join(\"-\")]\n}","import { CITIES_ARRAY, MONTH_END, __IS_DEV__ } from \"../Constans\";\r\nimport {\r\n    getDemoCampData,\r\n    getDemoHelplineData,\r\n    getDemoVolunteerData,\r\n    TABLESTATSDEMO,\r\n} from \"../Constans/DemoData\";\r\nimport { getDateRange, sleep } from \"../Helplers\";\r\nimport { TableStatsType } from \"../Types\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        ZOHO: any;\r\n    }\r\n}\r\n\r\ninterface overall {\r\n    city: string;\r\n    donations: number;\r\n}\r\ninterface API<Data> {\r\n    code: number;\r\n    data: Data[];\r\n}\r\ninterface PostCamp {\r\n    Number_of_Donation: any;\r\n    Camp_Awareness: {\r\n        display_value: string;\r\n    };\r\n}\r\n\r\ninterface MonthData {\r\n    city: string;\r\n    date: string;\r\n    donations: number;\r\n}\r\n\r\nconst CREATOR = window.ZOHO.CREATOR;\r\n\r\nexport const get = () => {\r\n    CREATOR.init()\r\n        .then((d) => {\r\n            let config = {\r\n                reportName: \"BloodConnect_Team_Report\",\r\n                page: \"1\",\r\n                pageSize: \"200\",\r\n            };\r\n\r\n            //get all records API\r\n            CREATOR.API.getAllRecords(config).then(function (response) {\r\n                //callback block\r\n                console.log(response);\r\n            });\r\n        })\r\n        .catch((e) => {\r\n            console.log(e);\r\n        });\r\n};\r\n\r\nconst getVolunteer = (page: number, city: string) => {\r\n    let criteria = '(Status==\"Active\")';\r\n    if (city !== \"All\") {\r\n        criteria = `(Status==\"Active\" && BloodConnect_City==\"${city}\")`;\r\n    }\r\n    if (__IS_DEV__) {\r\n        if (city !== \"All\") return getDemoVolunteerData(city);\r\n        return getDemoVolunteerData();\r\n    }\r\n\r\n    let config = {\r\n        reportName: \"BloodConnect_Team_Report\",\r\n        criteria,\r\n        page: page.toString(),\r\n        pageSize: \"200\",\r\n    };\r\n    return CREATOR.API.getAllRecords(config);\r\n};\r\n\r\nconst getEvent = (page: number, city: string,thisYear?:boolean) => {\r\n    let criteria = \"\";\r\n    if (city !== \"All\" && thisYear ) { // test = false \r\n        criteria = `(BloodConnect_City==\"${city}\")`;\r\n    }else if (thisYear === false) {\r\n        criteria = \"(Date_field>=\\\"01-01-2020\\\")\"\r\n    }\r\n\r\n    if (__IS_DEV__) {\r\n        if (city !== \"All\") return getDemoCampData(city);\r\n        return getDemoCampData();\r\n    }\r\n    let config = {\r\n        reportName: \"Camp_Awareness_Report\",\r\n        criteria,\r\n        page: page.toString(),\r\n        pageSize: \"200\",\r\n    };\r\n    return CREATOR.API.getAllRecords(config);\r\n};\r\n\r\nconst getCity = (city: string) => {\r\n    let config = {\r\n        reportName: \"Vlookup_Report\",\r\n        criteria: `City==\"${city}\"`,\r\n        page: 1,\r\n        pageSize: \"1\",\r\n    };\r\n    return CREATOR.API.getAllRecords(config);\r\n};\r\n\r\nconst getHelplines = (page: number, city: string) => {\r\n    let criteria = \"\";\r\n    if (city !== \"All\" && city !== \"Consulting\") {\r\n        criteria = `(City_Region==${city})`;\r\n    }\r\n\r\n    if (__IS_DEV__) {\r\n        if (city !== \"All\") return getDemoHelplineData(city);\r\n        return getDemoHelplineData();\r\n    }\r\n\r\n    let config = {\r\n        reportName: \"Helpline_Report\",\r\n        criteria,\r\n        page: page.toString(),\r\n        pageSize: \"200\",\r\n    };\r\n    return CREATOR.API.getAllRecords(config);\r\n};\r\n\r\nconst getPostCamp = (page: number, city: string): Promise<API<PostCamp>> => {\r\n    let criteria = \"\";\r\n    if (city !== \"All\") {\r\n        criteria = `(BloodConnect_City==\"${city}\")`;\r\n    }\r\n    let config = {\r\n        reportName: \"Post_Camp_Form_Report\",\r\n        criteria: criteria,\r\n        page: page.toString(),\r\n        pageSize: \"200\",\r\n    };\r\n    return CREATOR.API.getAllRecords(config);\r\n    // return new Promise((resolve, reject) => {\r\n    //     let response = CREATOR.API.getAllRecords(config)\r\n    //     if (response)\r\n    //         resolve(response)\r\n    //     else\r\n    //         reject({ code: 500, data: []})\r\n    // })\r\n};\r\nexport const fetchVolunteer = async (city: string) => {\r\n    if (!__IS_DEV__) await CREATOR.init();\r\n    let page = 1;\r\n    let { data } = await getVolunteer(page++, city);\r\n    let l = data.length;\r\n    let total = l;\r\n    while (l === 200) {\r\n        let { data } = await getVolunteer(page++, city);\r\n        l = data.length;\r\n        total = total + l;\r\n    }\r\n    return total;\r\n};\r\n\r\nexport const fetchCamps = async (\r\n    city: string,\r\n    startDate?: string,\r\n    endDate?: string\r\n) => {\r\n    if (!__IS_DEV__) await CREATOR.init();\r\n    // intializing data\r\n    let monthCampData = Array(12).fill(0); // no of camps in each month\r\n    let monthAwarnessData = Array(12).fill(0); // no of awareness each month\r\n    let monthDonation = Array(12).fill(0); // no of donations each month\r\n    let monthDetail = Array(12) // camps and their donation details each month\r\n        .fill(0)\r\n        .map(() => [{}]);\r\n\r\n    let donations = 0; // total donations till now\r\n    let page = 1;\r\n    let startTimestamp =  new Date(\"2000-01-01\").getTime();\r\n    let endTimestamp = new Date(\"2999-12-31\").getTime();\r\n    console.log(startDate,endDate)\r\n    if(startDate ){\r\n        let t = startDate.split(\"-\")\r\n        startTimestamp = new Date(parseInt(t[2]),parseInt(t[1]),parseInt(t[0])).getTime()\r\n    }\r\n    if(endDate ){\r\n        let t = endDate.split(\"-\")\r\n        endTimestamp = new Date(parseInt(t[2]),parseInt(t[1]),parseInt(t[0])).getTime()\r\n    }\r\n\r\n\r\n    // to return  data ; data has both camp and awareness data\r\n    let { data } = await getEvent(page++, city);\r\n    let l = data.length;\r\n\r\n    // filtering camps and awareness\r\n    let camps = data.filter((d) => d.TypeOfEvent === \"Camp\");\r\n    let awareness = data.filter((d) => d.TypeOfEvent !== \"Camp\");\r\n    let totalCamps = 0;\r\n    let totalAwareness = 0;\r\n\r\n    // add filter for the the date i.e. the date must be between start and end\r\n    camps.forEach((c) => {\r\n        let date = c.Date_field;\r\n        let [d, mon, year] = date.split(\"-\");\r\n        let timeStamp = new Date(year,mon,d).getTime()\r\n        //inseting data into monthCampData\r\n        if (timeStamp >= startTimestamp && timeStamp <= endTimestamp) {\r\n            monthCampData[parseInt(mon) - 1] =\r\n                monthCampData[parseInt(mon) - 1] + 1;\r\n\r\n            if (c[\"Post_Camp_ID.Number_of_Donation\"]) {\r\n                monthDonation[parseInt(mon) - 1] =\r\n                    monthDonation[parseInt(mon) - 1] +\r\n                    parseInt(c[\"Post_Camp_ID.Number_of_Donation\"]);\r\n                donations =\r\n                    donations + parseInt(c[\"Post_Camp_ID.Number_of_Donation\"]);\r\n            }\r\n\r\n            monthDetail[parseInt(mon) - 1].push({\r\n                city: c.BloodConnect_City,\r\n                date,\r\n                donations: c[\"Post_Camp_ID.Number_of_Donation\"]\r\n                    ? c[\"Post_Camp_ID.Number_of_Donation\"]\r\n                    : 0,\r\n            });\r\n\r\n            totalCamps++;\r\n        }\r\n    });\r\n\r\n    awareness.forEach((c) => {\r\n        let date = c.Date_field;\r\n        let [d, mon, year] = date.split(\"-\");\r\n        let timeStamp = new Date(year,mon,d).getTime()\r\n        //inseting data into monthCampData\r\n        if (timeStamp >= startTimestamp && timeStamp <= endTimestamp) {\r\n            monthAwarnessData[parseInt(mon) - 1] =\r\n                monthAwarnessData[parseInt(mon) - 1] + 1;\r\n            totalAwareness++;\r\n        }\r\n    });\r\n\r\n    console.log(totalCamps, totalAwareness);\r\n    return {\r\n        camps: totalCamps,\r\n        awareness: totalAwareness,\r\n        monthCampData,\r\n        monthAwarnessData,\r\n        monthDonation,\r\n        monthDetail,\r\n        donations,\r\n    };\r\n};\r\n\r\nexport const fetchPostCamp = async (city: string) => {\r\n    let monthData = Array(12).fill(0);\r\n    let donation = 0;\r\n    let d = await getPostCamp(0, city).then(\r\n        (res) => {\r\n            res.data.forEach((postCamp) => {\r\n                let date = postCamp.Camp_Awareness.display_value\r\n                    .split(\"_\")\r\n                    .pop();\r\n                if (!date) return;\r\n                let [_, mon, year] = date.split(\"-\");\r\n                if (parseInt(year) === new Date().getFullYear()) {\r\n                    monthData[parseInt(mon) - 1] =\r\n                        monthData[parseInt(mon) - 1] +\r\n                        parseInt(postCamp.Number_of_Donation);\r\n                    donation = donation + parseInt(postCamp.Number_of_Donation);\r\n                }\r\n            });\r\n        },\r\n        (error) => {\r\n            console.log(\"error\", error, city);\r\n            donation = 0;\r\n        }\r\n    );\r\n\r\n    return { totalDonation: donation, monthData };\r\n};\r\n\r\nexport const fecthHelplines = async (city: string,startDate?:string,endDate?:string) => {\r\n    if (!__IS_DEV__) await CREATOR.init();\r\n    if (city !== \"All\" && !__IS_DEV__) {\r\n        let res = await getCity(city);\r\n        city = res.data[0].ID;\r\n    }\r\n    let page = 1;\r\n    let returnData = {\r\n        open: 0,\r\n        closed: 0,\r\n    };\r\n    let { data }: { data: any[] } = await getHelplines(page++, city);\r\n    console.log(data);\r\n    let l = data.length;\r\n    returnData.open += data.filter((d) => d.Status === \"Open\").length;\r\n    returnData.closed += data.filter((d) => d.Status === \"Closed\").length;\r\n    let total = l;\r\n    while (l === 200) {\r\n        let { data } = await getHelplines(page++, city);\r\n        returnData.open += data.filter((d) => d.Status === \"Open\").length;\r\n        returnData.closed += data.filter((d) => d.Status === \"Closed\").length;\r\n        l = data.length;\r\n        total += l;\r\n    }\r\n    return {\r\n        ...returnData,\r\n        total: total,\r\n    };\r\n};\r\n\r\n// fetching stats for the table\r\nexport const getTableStat = async (\r\n    month: number,\r\n    year: number\r\n): Promise<TableStatsType[] | null> => {\r\n    const tableStat: TableStatsType[] = [];\r\n\r\n    // start and end date for filter\r\n    const [startDate, endDate] = getDateRange(month, year);\r\n\r\n    // if in development send demo data\r\n\r\n    // this wont run in development\r\n    try {\r\n        if (!__IS_DEV__) await CREATOR.init();\r\n        for (let i in CITIES_ARRAY) {\r\n            let city = CITIES_ARRAY[i];\r\n            // no filter for this\r\n            let av = await fetchVolunteer(city);\r\n\r\n            // filter needed\r\n            let { camps, awareness, donations } = await fetchCamps(city,startDate,endDate);\r\n            let helpline = 0;\r\n            let d = await getEvent(1,\"All\",false)\r\n            console.log(\"The data awaited\",d)\r\n            // filter needed and need to sort the criteria for consulting helplines\r\n            let { total } = await fecthHelplines(city,startDate,endDate);\r\n            helpline = total;\r\n            tableStat.push({\r\n                city,\r\n                camps,\r\n                awareness,\r\n                donations,\r\n                helpline: helpline,\r\n                activeVolunteer: av,\r\n            });\r\n        }\r\n    } catch (e) {\r\n        console.log(e);\r\n        return null;\r\n    }\r\n\r\n    return tableStat;\r\n};\r\n","import React, { ReactElement, useEffect, useState } from \"react\";\r\nimport {\r\n  VictoryBar,\r\n  VictoryChart,\r\n  VictoryAxis,\r\n  VictoryTheme,\r\n  VictoryLabel,\r\n  VictoryTooltip,\r\n} from \"victory\";\r\nimport \"./Chart.css\";\r\nimport { fetchCamps } from \"../../services\";\r\nimport { FiArrowLeft } from \"react-icons/fi\";\r\nimport { exportComponentAsPDF } from 'react-component-export-image'\r\n\r\ninterface Props {\r\n  selectedCity: string;\r\n}\r\n\r\ninterface dataProps {\r\n  month: number;\r\n  donations: number;\r\n  label: string;\r\n}\r\n\r\ninterface MonthData {\r\n  city: string;\r\n  date: string;\r\n  donations: number;\r\n}\r\n\r\nconst DonationCharts = ({ selectedCity }: Props) => {\r\n  // for year data  like jan, feb, mar\r\n  const initial_data = [\r\n    { month: 1, donations: 0, label: \"0\" },\r\n    { month: 2, donations: 0, label: \"0\" },\r\n    { month: 3, donations: 0, label: \"0\" },\r\n    { month: 4, donations: 0, label: \"0\" },\r\n    { month: 5, donations: 0, label: \"0\" },\r\n    { month: 6, donations: 0, label: \"0\" },\r\n    { month: 7, donations: 0, label: \"0\" },\r\n    { month: 8, donations: 0, label: \"0\" },\r\n    { month: 9, donations: 0, label: \"0\" },\r\n    { month: 10, donations: 0, label: \"0\" },\r\n    { month: 11, donations: 0, label: \"0\" },\r\n    { month: 12, donations: 0, label: \"0\" },\r\n  ];\r\n\r\n\r\n  const [chartData, setData] = useState<dataProps[]>(initial_data);\r\n  const [city, setCity] = useState<string>(selectedCity);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [monthStatShown, showMonthStat] = useState<boolean>(false);\r\n\r\n  // month details\r\n  const [monthStat, setMonthStat] = useState<any>();\r\n  const [currMonthStat, setCurrMonthStat] = useState<MonthData[]>();\r\n\r\n  let ref = React.createRef<any>()\r\n\r\n  const downloadChart = () => {\r\n    \r\n    exportComponentAsPDF(ref)\r\n  };\r\n\r\n  const fetchYearData = async () => {\r\n    const year  = new Date().getFullYear()\r\n    const { monthDonation, monthDetail } = await fetchCamps(city,'01-01-'+year,'31-12-'+year);\r\n    setData((data) => {\r\n      const newData = Array.from(data);\r\n      return newData.map((d) => {\r\n        d.donations = monthDonation[d.month - 1];\r\n        d.label = monthDonation[d.month - 1] + \" \";\r\n        return d;\r\n      });\r\n    });\r\n    console.log(monthDetail)\r\n    setMonthStat(monthDetail);\r\n  };\r\n\r\n  const handleClick = (i: number) => {\r\n    if (monthStat && monthStat[i]) setCurrMonthStat(monthStat[i]);\r\n    showMonthStat(true)\r\n    console.log('current month stat is ',i,currMonthStat)\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedCity !== city) setCity(selectedCity);\r\n  }, [selectedCity]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchYearData();\r\n  }, [city]);\r\n\r\n  return (\r\n    <>\r\n      {!monthStatShown ? (\r\n        <div id=\"chart\" ref={ref} className=\"container chart-container my-4\" >\r\n          <button className=\"mx-2\" onClick={() => downloadChart()}>\r\n            Download Chart\r\n          </button>\r\n          <VictoryChart\r\n            theme={VictoryTheme.material}\r\n            width={800}\r\n            height={400}\r\n            domainPadding={100}\r\n            animate={{\r\n              duration: 2000,\r\n              onLoad: { duration: 1000 },\r\n            }}\r\n          >\r\n            <VictoryLabel\r\n              text=\"Monthly Report\"\r\n              x={225}\r\n              y={30}\r\n              textAnchor=\"middle\"\r\n            />\r\n            <VictoryAxis\r\n              tickValues={chartData.map((f) => f.month)}\r\n              tickFormat={[\r\n                \"Jan\",\r\n                \"Feb\",\r\n                \"Mar\",\r\n                \"Apr\",\r\n                \"May\",\r\n                \"June\",\r\n                \"July\",\r\n                \"Aug\",\r\n                \"Sep\",\r\n                \"Oct\",\r\n                \"Nov\",\r\n                \"Dec\",\r\n              ]}\r\n            />\r\n            <VictoryAxis dependentAxis tickFormat={(x) => x} />\r\n            <VictoryBar\r\n              data={chartData}\r\n              x=\"month\"\r\n              y=\"donations\"\r\n              alignment=\"middle\"\r\n              events={[\r\n                {\r\n                  target: \"data\",\r\n                  eventHandlers: {\r\n                    onClick: () => {\r\n                      return [\r\n                        {\r\n                          target: \"data\",\r\n                          mutation: (props) => {\r\n                            console.log(props.index);\r\n                            handleClick(props.data[props.index].month - 1);\r\n                            return true;\r\n                          },\r\n                        },\r\n                      ];\r\n                    },\r\n                  },\r\n                },\r\n              ]}\r\n            />\r\n          </VictoryChart>\r\n        </div>\r\n      ) : (\r\n        <CampDonationChart\r\n          back={() => {\r\n              console.log(\"back pressed\")\r\n            showMonthStat(false);\r\n          }}\r\n          data={currMonthStat}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst CampDonationChart = ({ back, data }): ReactElement => {\r\n  const initial_data: Array<MonthData & { x: string; label: string }> = [\r\n    { city: \"Agra\", date: \"10-07-2020\", x: \"12\", donations: 20, label: \"20\" },\r\n    { city: \"Agra\", date: \"11-07-2020\", x: \"22\", donations: 20, label: \"20\" },\r\n    { city: \"Agra\", date: \"12-07-2020\", x: \"34\", donations: 20, label: \"20\" },\r\n  ];\r\n  const [chartData, setData] = useState<\r\n    Array<MonthData & { x: string; label: string }>\r\n  >(initial_data);\r\nuseEffect(() => {\r\n  if (data) {\r\n    let d2 = data.filter((d) => d.date != null && d.date.length > 0);\r\n    console.log(\"after update\", d2);\r\n    let d = d2.map((da) => {\r\n      return {\r\n        city: da.city,\r\n        date: da.date.split(\"-\")[0],\r\n        donations: parseInt(da.donations.toString()),\r\n        label: da.donations + ` donations on ${da.date} `,\r\n        x: da.date.split(\"-\")[0] + `(${da.city})`,\r\n      };\r\n    });\r\n    console.log(d);\r\n    let sorted = d.sort((a, b) => parseInt(a.date) - parseInt(b.date));\r\n    console.log(\"sorted data\", sorted);\r\n    setData(d);\r\n  }\r\n},[data])\r\n\r\n  return (\r\n    <div className=\"container chart-container my-4\">\r\n      <FiArrowLeft size={24} onClick={back} />\r\n      <VictoryChart\r\n        theme={VictoryTheme.material}\r\n        width={800}\r\n        height={400}\r\n        domainPadding={100}\r\n      >\r\n        <VictoryLabel\r\n          text=\"Monthly Donations\"\r\n          x={225}\r\n          y={30}\r\n          textAnchor=\"middle\"\r\n        />\r\n\r\n        <VictoryAxis\r\n          tickValues={chartData.map((f) => f.x)}\r\n          //tickFormat={['Jan','Feb','Mar','Apr','May','June','July','Aug','Sep','Oct','Nov','Dec']}\r\n        />\r\n        <VictoryAxis dependentAxis tickFormat={(x) => x} />\r\n        <VictoryBar\r\n          data={chartData}\r\n          labelComponent={<VictoryTooltip />}\r\n          x=\"x\"\r\n          y=\"donations\"\r\n          alignment=\"middle\"\r\n          barWidth={24}\r\n          events={[\r\n            {\r\n              target: \"data\",\r\n              eventHandlers: {\r\n                onClick: () => {\r\n                  return [\r\n                    {\r\n                      target: \"data\",\r\n                      mutation: (props) => {\r\n                        console.log(props.data[props.index].url);\r\n                        return true;\r\n                      },\r\n                    },\r\n                  ];\r\n                },\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n      </VictoryChart>\r\n    </div>\r\n  );\r\n};\r\nexport default DonationCharts;\r\n","import React, { useEffect, useState, ReactElement } from 'react'\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryLabel, VictoryGroup, VictoryLegend } from 'victory'\nimport './Chart.css'\n\ninterface Props {\n    camp?: number[];\n    awareness?: number[]\n}\ninterface dataProps {\n    month: number;\n    donations: number;\n    label: number;\n    url: string\n}\n\ninterface GraphData {\n    month: number;\n    count: number;\n    label: number;\n}\n\nexport default function MonthlyEventChart({ camp, awareness }: Props): ReactElement {\n    const initial_data = [\n        { month: 1, count: 0, label: 0 },\n        { month: 2, count: 0, label: 0 },\n        { month: 3, count: 0, label: 0 },\n        { month: 4, count: 0, label: 0 },\n        { month: 5, count: 0, label: 0 },\n        { month: 6, count: 0, label: 0 },\n        { month: 7, count: 0, label: 0 },\n        { month: 8, count: 0, label: 0 },\n        { month: 9, count: 0, label: 0 },\n        { month: 10, count: 0, label: 0 },\n        { month: 11, count: 0, label: 0 },\n        { month: 12, count: 0, label: 0 },\n    ];\n    const initial_data1 = [\n        { month: 1, count: 0, label: 0 },\n        { month: 2, count: 0, label: 0 },\n        { month: 3, count: 0, label: 0 },\n        { month: 4, count: 0, label: 0 },\n        { month: 5, count: 0, label: 0 },\n        { month: 6, count: 0, label: 0 },\n        { month: 7, count: 0, label: 0 },\n        { month: 8, count: 0, label: 0 },\n        { month: 9, count: 0, label: 0 },\n        { month: 10, count: 0, label: 0 },\n        { month: 11, count: 0, label: 0 },\n        { month: 12, count: 0, label: 0 },\n    ];\n\n    const [campData, setCampData] = useState<GraphData[]>(initial_data)\n    const [awarenessData, setAwarenessData] = useState<GraphData[]>(initial_data1)\n    useEffect(() => {\n        if (camp) {\n            setCampData((d: GraphData[]) => {\n                return d.map(da => {\n                    da.count = camp[da.month - 1]\n                    da.label = camp[da.month - 1]\n                    return da\n                })\n            })\n        }\n    }, [camp])\n\n    useEffect(() => {\n        if (awareness) {\n            setAwarenessData((d: GraphData[]) => {\n                return d.map(da => {\n                    da.count = awareness[da.month - 1]\n                    da.label = awareness[da.month - 1]\n                    return da\n                })\n            })\n        }\n    }, [awareness])\n    return (\n        <div className=\"container chart-container my-4\">\n            <VictoryChart\n                theme={VictoryTheme.material}\n                width={800}\n                height={400}\n                domainPadding={100}\n            >\n\n                <VictoryLabel text=\"Monthly Report\" x={225} y={30} textAnchor=\"middle\" />\n                <VictoryLegend x={125} y={50}\n                    title=\"Legend\"\n                    centerTitle\n                    orientation=\"horizontal\"\n                    gutter={20}\n                    style={{ border: { stroke: \"black\" }, title: { fontSize: 20 } }}\n                    data={[\n                        { name: \"Camp\", symbol: { fill: \"blue\", type:\"rectangle\" } },\n                        { name: \"Awareness\", symbol: { fill: \"cyan\" } }\n                    ]}\n                />\n                <VictoryAxis\n\n                    tickValues={campData.map(f => f.month)}\n                    tickFormat={['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']}\n                />\n                <VictoryAxis\n                    dependentAxis\n\n                    tickFormat={x => x}\n                />\n                <VictoryGroup\n                    offset={20}\n                    colorScale={'qualitative'}\n                    animate={{\n                        duration: 2000,\n                        onLoad: { duration: 1000 }\n                    }}\n                >\n                    <VictoryBar\n                        data={campData}\n                        x=\"month\"\n                        y=\"count\"\n                        alignment='middle'\n                        events={[{\n                            target: \"data\",\n                            eventHandlers: {\n                                onClick: () => {\n                                    return [{\n                                        target: \"data\",\n                                        mutation: (props) => {\n                                            console.log(props.data[props.index].url)\n                                            return true\n                                        }\n                                    }];\n                                }\n                            }\n                        }]}\n                    />\n                    <VictoryBar\n                        data={awarenessData}\n                        x=\"month\"\n                        y=\"count\"\n                        alignment='middle'\n                        events={[{\n                            target: \"data\",\n                            eventHandlers: {\n                                onClick: () => {\n                                    return [{\n                                        target: \"data\",\n                                        mutation: (props) => {\n                                            console.log(props.data[props.index].url)\n                                            return true\n                                        }\n                                    }];\n                                }\n                            }\n                        }]}\n                    />\n                </VictoryGroup>\n            </VictoryChart>\n        </div>\n    )\n}","import React, { useEffect, useState } from \"react\";\nimport { FiUser, FiCalendar, FiUsers } from \"react-icons/fi\";\nimport Lottie from \"react-lottie\";\nimport { fecthHelplines } from \"../../services\";\n\ninterface Props {\n  searchedCity: string;\n}\n\nconst HelplineComponent = ({ searchedCity }: Props) => {\n  const [city, setCity] = useState<string>(\"All\");\n  const [isLoading, setLoading] = useState<boolean>(true);\n  const [helpline, setHelpline] = useState(0);\n  const [openHelpline, setOpen] = useState(0);\n  const [closedHelpline, setClosed] = useState(0);\n\n  // function to fecth helpline stats\n  const fetchData = async () => {\n    const { total, open, closed } = await fecthHelplines(city);\n    console.log(\"Fetched helpline data\");\n    setHelpline((s) => total);\n    setClosed((s) => closed);\n    setOpen((s) => open);\n    setLoading(false);\n    console.log(total, open, closed);\n  };\n\n  // changing city only if new city is selected\n  useEffect(() => {\n    console.log(\"City changed\", searchedCity);\n    if (searchedCity !== city) setCity(searchedCity);\n  }, [searchedCity]);\n\n  useEffect(() => {\n    setLoading(true)\n    fetchData();\n  }, [city]);\n\n \n\n  const Loading = () => {\n    return (\n      <div>\n        <Lottie\n          options={{\n            animationData: require(\"../../assets/animation/dot.json\"),\n            loop: true,\n            autoplay: true,\n          }}\n          height={100}\n          width={100}\n          isStopped={!isLoading}\n        />\n      </div>\n    );\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \">\n            {!isLoading  ? (\n              <div>\n                <p className=\"card-heading\"> Total Requests</p>\n                <p className=\"display-4\">{helpline}</p>\n              </div>\n            ) : (\n              <Loading />\n            )}\n            <div className=\"stat-icon-container\">\n              <FiUser size={34} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \">\n            {!isLoading ? (\n              <div>\n                <p className=\"card-heading\"> Open</p>\n                <p className=\"display-4\">{openHelpline}</p>\n              </div>\n            ) : (\n              <Loading />\n            )}\n            <div className=\"stat-icon-container\">\n              <FiCalendar size={34} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \">\n            {!isLoading  ? (\n              <div>\n                <p className=\"card-heading\"> Closed</p>\n                <p className=\"display-4\">{closedHelpline}</p>\n              </div>\n            ) : (\n              <Loading />\n            )}\n            <div className=\"stat-icon-container\">\n              <FiCalendar size={34} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-lg-3\">\n          <div className=\"stat-card \">\n            {true ? (\n              <div>\n                <p className=\"card-heading\"> Toatal Donation </p>\n                <p className=\"display-4\">1245</p>\n              </div>\n            ) : (\n              <Loading />\n            )}\n            <div className=\"stat-icon-container\">\n              <FiUsers size={34} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HelplineComponent;\n","import React, { ReactElement, useState } from 'react'\r\nimport { FiSearch } from 'react-icons/fi'\r\nimport Autosuggest from 'react-autosuggest';\r\n\r\nimport './Search.css'\r\nimport theme from \"./SearchTheme.module.css\"\r\ninterface Props {\r\n    handleChange: (c: string) => void\r\n}\r\ninterface CityProps {\r\n    name: string\r\n}\r\n\r\nexport default function Search({ handleChange }: Props): ReactElement {\r\n\r\n    const [suggestions, setSuggestion] = useState<CityProps[]>([])\r\n    const [value, setValue] = useState('')\r\n    const city = [\r\n        { name: 'Delhi NCR' },\r\n        { name: 'Agra' },\r\n        { name: 'Lucknow' },\r\n        { name: 'Jaipur' },\r\n        { name: 'Kolkata' },\r\n        { name: 'Ranchi' },\r\n        { name: 'Odisha' },\r\n        { name: 'Varanasi' },\r\n        { name: 'Pune' },\r\n        { name: 'Kanpur' },\r\n        { name: 'Consulting' }\r\n    ]\r\n    const getSuggestions = (value: string) => {\r\n        const inputValue = value.trim().toLowerCase();\r\n        const inputLength = inputValue.length;\r\n\r\n        return inputLength === 0 ? [] : city.filter(c =>\r\n            c.name.toLowerCase().slice(0, inputLength) === inputValue\r\n        );\r\n    };\r\n\r\n    const getSuggestionValue = suggestion => suggestion.name;\r\n\r\n    // Use your imagination to render suggestions.\r\n    const renderSuggestion = suggestion => (\r\n        <div className=\"suggestion\">\r\n            {suggestion.name}\r\n        </div>\r\n    );\r\n\r\n    const onSuggestionsFetchRequested = ({ value }) => {\r\n        setSuggestion(getSuggestions(value))\r\n    };\r\n\r\n    const onSuggestionsClearRequested = () => {\r\n        setSuggestion([])\r\n    }\r\n    const onChange = (event, { newValue }) => {\r\n        setValue(newValue)\r\n    };\r\n\r\n    const handleKeyDown = (e) => {\r\n        if(e.key === 'Enter') {\r\n            handleChange(e.target.value)\r\n        }\r\n    }\r\n\r\n    const inputProps = {\r\n        placeholder: 'Enter the city',\r\n        value,\r\n        onChange: onChange,\r\n        onKeyDown: handleKeyDown\r\n    };\r\n    return (\r\n        <div className=\"my-4 col-lg-6\">\r\n            <div className=\"d-flex container\">\r\n                <Autosuggest\r\n                    suggestions={suggestions}\r\n                    onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n                    onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n                    getSuggestionValue={getSuggestionValue}\r\n                    renderSuggestion={renderSuggestion}\r\n                    inputProps={inputProps}\r\n                    theme={theme}\r\n                />\r\n                \r\n                <div className=\"search-icon\" onClick={() => {\r\n                    console.log(value)\r\n                    handleChange(value)\r\n                }}>\r\n                    <FiSearch color=\"white\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport { Loading } from \"../../App\";\nimport { getTableStat } from \"../../services\";\nimport { TableStatsType } from \"../../Types\";\nimport \"./Table.css\";\nimport { exportComponentAsPDF } from \"react-component-export-image\";\n\ninterface Props {}\n\nexport default function StatTable({}: Props): ReactElement {\n  const [data, setData] = useState<TableStatsType[] | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [month,setMonth] = useState<number>(0);\n  const [year,setYear] = useState<number>(0);\n\n\n  let totalCamps = 0,\n    totalAwareness = 0,\n    totalHelpline = 0,\n    totalVolunteer = 0,\n    totalDonation = 0;\n  const ref = React.createRef<any>();\n\n  const fetchData = async () => {\n    const d = await getTableStat(month,year);\n\n    if (d) {\n      setData(d);\n      setLoading(false);\n      console.log(d);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"called functin\");\n    setLoading(true)\n    fetchData();\n  }, [month,year]);\n\n\n  return (\n    <div className=\"container p-4\" ref={ref}>\n      <div id=\"wrapper\" className=\"d-flex flex-column\">\n        <div className=\"d-flex flex-row justify-content-between py-4 px-3\">\n          <h4>Report Table</h4>\n          <div className=\"d-flex flex-row\">\n            <div className=\"d-flex flex-column max-2\">\n              <label htmlFor=\"month\">Month</label>\n              <select id=\"month\" onChange={({ target }) => setMonth(parseInt(target.value))}>\n                <option value=\"0\">All</option>\n                <option value=\"1\">January</option>\n                <option value=\"2\">Febraury</option>\n                <option value=\"3\">March</option>\n                <option value=\"4\">April</option>\n                <option value=\"5\">May</option>\n                <option value=\"6\">June</option>\n                <option value=\"7\">July</option>\n                <option value=\"8\">August</option>\n                <option value=\"9\">September</option>\n                <option value=\"10\">October</option>\n                <option value=\"11\">November</option>\n                <option value=\"12\">Decenmber</option>\n              </select>\n            </div>\n\n            {/* Year filter */}\n\n            <div className=\"d-flex flex-column mx-2\">\n              <label htmlFor=\"month\">Year</label>\n              <select id=\"month\" onChange={({ target }) => setYear(parseInt(target.value))}>\n                <option value=\"0\">All</option>\n                <option value=\"2020\">2020</option>\n                <option value=\"2021\">2021</option>\n              </select>\n            </div>\n            <div className=\"d-flex flex-column mx-2\">\n              <p className=\"mb-1\">Download Table</p>\n            <button onClick={() => exportComponentAsPDF(ref)}>Download</button>\n            </div>\n          </div>\n        </div>\n        <table id=\"keywords\" cellSpacing=\"0\" cellPadding=\"0\">\n          <thead>\n            <tr>\n              <th>\n                <span>City</span>\n              </th>\n              <th>\n                <span>Camps</span>\n              </th>\n              <th>\n                <span>Awareness</span>\n              </th>\n              <th>\n                <span>Helpline</span>\n              </th>\n              <th>\n                <span>Donations</span>\n              </th>\n              <th>\n                <span>Active Volunteer</span>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {loading ? (\n              <div className=\"container-fluid d-flex justiify-content-center align-items-center\">\n                <Loading loading={loading} />\n              </div>\n            ) : (\n              data!.map(\n                (\n                  {\n                    city,\n                    camps,\n                    awareness,\n                    helpline,\n                    donations,\n                    activeVolunteer,\n                  },\n                  index\n                ) => {\n                  totalCamps += camps;\n                  totalAwareness += awareness;\n                  totalDonation += donations;\n                  totalHelpline += helpline;\n                  totalVolunteer += activeVolunteer;\n                  return (\n                    <tr key={index}>\n                      <td className=\"lalign\">{city}</td>\n                      <td>{camps}</td>\n                      <td>{awareness}</td>\n                      <td>{helpline}</td>\n                      <td>{donations}</td>\n                      <td>{activeVolunteer}</td>\n                    </tr>\n                  );\n                }\n              )\n            )}\n\n            <tr style={{ backgroundColor: \"#ececec\" }}>\n              <td className=\"lalign\">Total</td>\n              <td>{totalCamps}</td>\n              <td>{totalAwareness}</td>\n              <td>{totalHelpline}</td>\n              <td>{totalDonation}</td>\n              <td>{totalVolunteer}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\r\nimport { FiCalendar, FiUser, FiUsers } from \"react-icons/fi\";\r\nimport Lottie from \"react-lottie\";\r\nimport \"./App.css\";\r\nimport DonationCharts from \"./components/Chart/MonthlyDonation\";\r\nimport MonthlyEventChart from \"./components/Chart/MonthlyEventChart\";\r\nimport HelplineComponent from \"./components/Helpline\";\r\nimport Search from \"./components/Search/Search\";\r\nimport StatTable from \"./components/Table/StatTable\";\r\nimport { fetchCamps, fetchVolunteer } from \"./services/index\";\r\n\r\nconst App = () => {\r\n  let BASE_URL =\r\n    \"https://app.zohocreator.in/deepak64/bloodconnect-india-donor-system\";\r\n  if (\r\n    window.location.ancestorOrigins &&\r\n    window.location.ancestorOrigins[0] &&\r\n    !window.location.ancestorOrigins[0].includes(\"localhost\")\r\n  ) {\r\n    console.log(\"origin url is\", window.location.ancestorOrigins);\r\n    if (window.location.ancestorOrigins[0].includes(\"bloodconnect\"))\r\n      BASE_URL = window.location.ancestorOrigins[0];\r\n  }\r\n\r\n  const [city, setCity] = useState(\"All\");\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [aV, setAV] = useState(-1);\r\n  const [camps, setCamps] = useState(-1);\r\n  const [awareness, setAwareness] = useState(-1);\r\n  const [donations, setDonations] = useState(-1);\r\n\r\n  // Monthly Datas\r\n  // Donations data\r\n  // Camp data\r\n  const [monthlyCampData, setmonthlyCampData] = useState(Array(12).fill(0));\r\n  // Awareness data\r\n  const [monthlyAwarenessData, setmonthlyAwarenessData] = useState(\r\n    Array(12).fill(0)\r\n  );\r\n  const [aVUrl, setaVUrl] = useState(\r\n    `${BASE_URL}/#Report:BloodConnect_Team_Report?Status=Active`\r\n  );\r\n  const [campUrl, setcampUrl] = useState(\r\n    `${BASE_URL}/#Report:Camp_Awareness_Report?TypeOfEvent=Camp&Date_field_op=52`\r\n  );\r\n  const [awarenessUrl, setawarenessUrl] = useState(\r\n    `${BASE_URL}/#Report:Camp_Awareness_Report?TypeOfEvent=Awareness&Date_field_op=52`\r\n  );\r\n\r\n  const loadAV = async () => {\r\n    const av = await fetchVolunteer(city);\r\n    setAV(av);\r\n  };\r\n  const loadCamps = async () => {\r\n    const {\r\n      camps,\r\n      awareness,\r\n      donations,\r\n    } = await fetchCamps(city);\r\n\r\n    let year = new Date().getFullYear()\r\n    const { monthCampData , monthAwarnessData } = await fetchCamps(city,\"01-01-\"+year,\"31-12-\"+year)\r\n    setCamps(camps);\r\n    setAwareness(awareness);\r\n    setDonations(donations);\r\n    setmonthlyCampData(monthCampData);\r\n    setmonthlyAwarenessData(monthAwarnessData);\r\n  };\r\n\r\n  const loadAllData = () => {\r\n    loadAV().then(() => {\r\n      loadCamps().then(() => {\r\n        setLoading(false);\r\n      });\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    loadAllData();\r\n  }, [city]);\r\n\r\n  // useEffect(() => {\r\n  //     loadCityStat()\r\n  // }, [])\r\n  const setSearch = (c: string): void => {\r\n    if (c !== city) {\r\n      setLoading(true);\r\n      setCity(c);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (city !== \"All\") {\r\n      setaVUrl(\r\n        `${BASE_URL}/#Report:BloodConnect_Team_Report?Status=Active&BloodConnect_City=${city}`\r\n      );\r\n      setcampUrl(\r\n        `${BASE_URL}/#Report:Camp_Awareness_Report?TypeOfEvent=Camp&BloodConnect_City=${city}&Date_field_op=52`\r\n      );\r\n      setawarenessUrl(\r\n        `${BASE_URL}/#Report:Camp_Awareness_Report?TypeOfEvent=Awareness&BloodConnect_City=${city}&Date_field_op=52`\r\n      );\r\n    }\r\n  }, [BASE_URL, city]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row justify-content-between \">\r\n        <h4 className=\"stat col-lg-4 col-sm-12  mt-2 d-flex align-items-center justify-content-center\">\r\n          {city === \"All\" ? \"BloodConnect\" : city}\r\n        </h4>\r\n        <Search handleChange={setSearch} />\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-3\">\r\n          <div\r\n            className=\"stat-card \"\r\n            onClick={() => {\r\n              window.open(aVUrl, \"_blank\");\r\n            }}\r\n          >\r\n            {!isLoading ? (\r\n              <div>\r\n                <p className=\"card-heading\"> Active Volunteer</p>\r\n                <p className=\"display-4\">{aV}</p>\r\n              </div>\r\n            ) : (\r\n              <Loading loading={isLoading} />\r\n            )}\r\n            <div className=\"stat-icon-container\">\r\n              <FiUser size={34} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-3\">\r\n          <div\r\n            className=\"stat-card \"\r\n            onClick={() => {\r\n              window.open(campUrl, \"_blank\");\r\n            }}\r\n          >\r\n            {!isLoading ? (\r\n              <div>\r\n                <p className=\"card-heading\"> Camps</p>\r\n                <p className=\"display-4\">{camps}</p>\r\n              </div>\r\n            ) : (\r\n              <Loading loading={isLoading}/>\r\n            )}\r\n            <div className=\"stat-icon-container\">\r\n              <FiCalendar size={34} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-3\">\r\n          <div\r\n            className=\"stat-card \"\r\n            onClick={() => {\r\n              window.open(awarenessUrl, \"_blank\");\r\n            }}\r\n          >\r\n            {!isLoading ? (\r\n              <div>\r\n                <p className=\"card-heading\"> Awareness</p>\r\n                <p className=\"display-4\">{awareness}</p>\r\n              </div>\r\n            ) : (\r\n              <Loading loading={isLoading} />\r\n            )}\r\n            <div className=\"stat-icon-container\">\r\n              <FiCalendar size={34} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-3\">\r\n          <div className=\"stat-card \">\r\n            {!isLoading ? (\r\n              <div>\r\n                <p className=\"card-heading\"> Toatal Donation </p>\r\n                <p className=\"display-4\">{donations}</p>\r\n              </div>\r\n            ) : (\r\n              <Loading loading={isLoading} />\r\n            )}\r\n            <div className=\"stat-icon-container\">\r\n              <FiUsers size={34} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <HelplineComponent searchedCity={city} />\r\n      <StatTable />\r\n      <DonationCharts selectedCity={city} />\r\n      <MonthlyEventChart\r\n        camp={monthlyCampData}\r\n        awareness={monthlyAwarenessData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Loading = ({loading}) => {\r\n  return (\r\n    <div>\r\n      <Lottie\r\n        options={{\r\n          animationData: require(\"./assets/animation/dot.json\"),\r\n          loop: true,\r\n          autoplay: true,\r\n        }}\r\n        height={100}\r\n        width={100}\r\n        isStopped={!loading}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}